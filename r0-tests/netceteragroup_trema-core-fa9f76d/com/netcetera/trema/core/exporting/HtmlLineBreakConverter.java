package com.netcetera.trema.core.exporting;

import com.netcetera.trema.core.api.IExportFilter;
import com.netcetera.trema.core.api.IKeyValuePair;
import org.apache.commons.lang3.StringUtils;
import org.inlinetest.ITest;
import static org.inlinetest.ITest.itest;
import static org.inlinetest.ITest.group;

/**
 * Filter for converting newlines (\n, \r\n and \r) into HTML
 * line breaks (<code><br></code>).
 * Note that the newlines in the value are written out, meaning '\n' are
 * actually two characters instead of the character with ASCII code 10.
 */
public class HtmlLineBreakConverter implements IExportFilter {

    private static final String REPLACEMENT = "<br/>";

    @Override
    public void filter(IKeyValuePair keyValuePair) {
        String value = keyValuePair.getValue();
        if (value != null) {
            String newValue = StringUtils.replace(value, "\\r\\n", REPLACEMENT);
            itest("evosuite", 21).given(REPLACEMENT, "<br/>").given(value, "%*l?,j]MxfPP41?`").checkEq(newValue, "%*l?,j]MxfPP41?`");
            itest("randoop", 21).given(REPLACEMENT, "<br/>").given(value, "initial").checkEq(newValue, "initial");
            itest("randoop", 21).given(REPLACEMENT, "<br/>").given(value, "Context []").checkEq(newValue, "Context []");
            itest("randoop", 21).given(REPLACEMENT, "<br/>").given(value, "com.netcetera.trema.core.ParseException: '").checkEq(newValue, "com.netcetera.trema.core.ParseException: '");
            itest("randoop", 21).given(REPLACEMENT, "<br/>").given(value, "com.netcetera.trema.core.ParseException: Unknown change").checkEq(newValue, "com.netcetera.trema.core.ParseException: Unknown change");
            itest("randoop", 21).given(REPLACEMENT, "<br/>").given(value, "com.netcetera.trema.core.ParseException: com.netcetera.trema.core.ParseException: translated [Context]").checkEq(newValue, "com.netcetera.trema.core.ParseException: com.netcetera.trema.core.ParseException: translated [Context]");
            itest("randoop", 21).given(REPLACEMENT, "<br/>").given(value, "Master [Context] [Context] [Context]").checkEq(newValue, "Master [Context] [Context] [Context]");
            itest("randoop", 21).given(REPLACEMENT, "<br/>").given(value, "hi!").checkEq(newValue, "hi!");
            itest("randoop", 21).given(REPLACEMENT, "<br/>").given(value, "com.netcetera.trema.core.ParseException: translated").checkEq(newValue, "com.netcetera.trema.core.ParseException: translated");
            itest("randoop", 21).given(REPLACEMENT, "<br/>").given(value, "com.netcetera.trema.core.exporting.ExportException: ''").checkEq(newValue, "com.netcetera.trema.core.exporting.ExportException: ''");
            itest("randoop", 21).given(REPLACEMENT, "<br/>").given(value, "The imported status is newer than the database status").checkEq(newValue, "The imported status is newer than the database status");
            itest("evosuite", 21).given(REPLACEMENT, "<br/>").given(value, "0Hn'M9_Py\u0002p").checkEq(newValue, "0Hn'M9_Py\u0002p");
            itest("randoop", 21).given(REPLACEMENT, "<br/>").given(value, "Value [Status]").checkEq(newValue, "Value [Status]");
            itest("randoop", 21).given(REPLACEMENT, "<br/>").given(value, "").checkEq(newValue, "");
            itest("randoop", 21).given(REPLACEMENT, "<br/>").given(value, "translated [com.netcetera.trema.core.exporting.ExportException: ]").checkEq(newValue, "translated [com.netcetera.trema.core.exporting.ExportException: ]");
            itest("randoop", 21).given(REPLACEMENT, "<br/>").given(value, "com.netcetera.trema.core.ParseException: ").checkEq(newValue, "com.netcetera.trema.core.ParseException: ");
            itest("evosuite", 21).given(REPLACEMENT, "<br/>").given(value, "\r\n").checkEq(newValue, "\r\n");
            itest("dev", 21).given(REPLACEMENT, "<br/>").given(value, "The quick brown fox jumps\\r over the lazy dog.").checkEq(newValue, "The quick brown fox jumps\\r over the lazy dog.");
            itest("randoop", 21).given(REPLACEMENT, "<br/>").given(value, "special").checkEq(newValue, "special");
            itest("randoop", 21).given(REPLACEMENT, "<br/>").given(value, "' [com.netcetera.trema.core.ParseException: ']").checkEq(newValue, "' [com.netcetera.trema.core.ParseException: ']");
            itest("randoop", 21).given(REPLACEMENT, "<br/>").given(value, "translated [hi!] [Context]").checkEq(newValue, "translated [hi!] [Context]");
            itest("randoop", 21).given(REPLACEMENT, "<br/>").given(value, "com.netcetera.trema.core.ParseException: special").checkEq(newValue, "com.netcetera.trema.core.ParseException: special");
            itest("randoop", 21).given(REPLACEMENT, "<br/>").given(value, "Master").checkEq(newValue, "Master");
            itest("randoop", 21).given(REPLACEMENT, "<br/>").given(value, "com.netcetera.trema.core.exporting.ExportException: com.netcetera.trema.core.exporting.ExportException: com.netcetera.trema.core.exporting.ExportException: translated").checkEq(newValue, "com.netcetera.trema.core.exporting.ExportException: com.netcetera.trema.core.exporting.ExportException: com.netcetera.trema.core.exporting.ExportException: translated");
            itest("randoop", 21).given(REPLACEMENT, "<br/>").given(value, "com.netcetera.trema.core.ParseException: special [']").checkEq(newValue, "com.netcetera.trema.core.ParseException: special [']");
            itest("randoop", 21).given(REPLACEMENT, "<br/>").given(value, "Context [com.netcetera.trema.core.ParseException: special]").checkEq(newValue, "Context [com.netcetera.trema.core.ParseException: special]");
            itest("randoop", 21).given(REPLACEMENT, "<br/>").given(value, "translatedCtranslatedotranslatedntranslatedttranslatedetranslatedxtranslatedttranslated translated[translated]translated").checkEq(newValue, "translatedCtranslatedotranslatedntranslatedttranslatedetranslatedxtranslatedttranslated translated[translated]translated");
            itest("randoop", 21).given(REPLACEMENT, "<br/>").given(value, "Value").checkEq(newValue, "Value");
            itest("randoop", 21).given(REPLACEMENT, "<br/>").given(value, "translatedMtranslatedatranslatedstranslatedttranslatedetranslatedrtranslated translated[translatedCtranslatedotranslatedntranslatedttranslatedetranslatedxtranslatedttranslated]translated").checkEq(newValue, "translatedMtranslatedatranslatedstranslatedttranslatedetranslatedrtranslated translated[translatedCtranslatedotranslatedntranslatedttranslatedetranslatedxtranslatedttranslated]translated");
            itest("randoop", 21).given(REPLACEMENT, "<br/>").given(value, "com.netcetera.trema.core.ParseException: com.netcetera.trema.core.exporting.ExportException: com.netcetera.trema.core.exporting.ExportException: verified").checkEq(newValue, "com.netcetera.trema.core.ParseException: com.netcetera.trema.core.exporting.ExportException: com.netcetera.trema.core.exporting.ExportException: verified");
            itest("randoop", 21).given(REPLACEMENT, "<br/>").given(value, "translated [hi!]").checkEq(newValue, "translated [hi!]");
            itest("dev", 21).given(REPLACEMENT, "<br/>").given(value, "The quick brown fox jumps over the lazy dog.").checkEq(newValue, "The quick brown fox jumps over the lazy dog.");
            itest("randoop", 21).given(REPLACEMENT, "<br/>").given(value, "The master language \"null\" does not exist in the database").checkEq(newValue, "The master language \"null\" does not exist in the database");
            itest("randoop", 21).given(REPLACEMENT, "<br/>").given(value, "com.netcetera.trema.core.ParseException: com.netcetera.trema.core.ParseException: hi!").checkEq(newValue, "com.netcetera.trema.core.ParseException: com.netcetera.trema.core.ParseException: hi!");
            itest("randoop", 21).given(REPLACEMENT, "<br/>").given(value, "Valuetranslated").checkEq(newValue, "Valuetranslated");
            itest("randoop", 21).given(REPLACEMENT, "<br/>").given(value, "translated").checkEq(newValue, "translated");
            itest("randoop", 21).given(REPLACEMENT, "<br/>").given(value, "verified").checkEq(newValue, "verified");
            itest("randoop", 21).given(REPLACEMENT, "<br/>").given(value, "Master [Context]").checkEq(newValue, "Master [Context]");
            itest("randoop", 21).given(REPLACEMENT, "<br/>").given(value, "translated [']").checkEq(newValue, "translated [']");
            itest("randoop", 21).given(REPLACEMENT, "<br/>").given(value, "translated [Status]").checkEq(newValue, "translated [Status]");
            itest("randoop", 21).given(REPLACEMENT, "<br/>").given(value, "Key").checkEq(newValue, "Key");
            itest("evosuite", 21).given(REPLACEMENT, "<br/>").given(value, "96UBblza)Ipixe7@").checkEq(newValue, "96UBblza)Ipixe7@");
            itest("randoop", 21).given(REPLACEMENT, "<br/>").given(value, "The key does not exist in the database").checkEq(newValue, "The key does not exist in the database");
            itest("evosuite", 21).given(REPLACEMENT, "<br/>").given(value, "com.netcetera.trema.core.exporting.HtmlLineBreakConverter").checkEq(newValue, "com.netcetera.trema.core.exporting.HtmlLineBreakConverter");
            itest("randoop", 21).given(REPLACEMENT, "<br/>").given(value, "undefined [com.netcetera.trema.core.exporting.ExportException: com.netcetera.trema.core.ParseException]").checkEq(newValue, "undefined [com.netcetera.trema.core.exporting.ExportException: com.netcetera.trema.core.ParseException]");
            itest("randoop", 21).given(REPLACEMENT, "<br/>").given(value, "Context [] []").checkEq(newValue, "Context [] []");
            itest("randoop", 21).given(REPLACEMENT, "<br/>").given(value, "''").checkEq(newValue, "''");
            itest("randoop", 21).given(REPLACEMENT, "<br/>").given(value, "undefined").checkEq(newValue, "undefined");
            itest("evosuite", 21).given(REPLACEMENT, "<br/>").given(value, "c").checkEq(newValue, "c");
            itest("randoop", 21).given(REPLACEMENT, "<br/>").given(value, "com.netcetera.trema.core.exporting.ExportException: translated").checkEq(newValue, "com.netcetera.trema.core.exporting.ExportException: translated");
            itest("randoop", 21).given(REPLACEMENT, "<br/>").given(value, "Master [hi!]").checkEq(newValue, "Master [hi!]");
            itest("randoop", 21).given(REPLACEMENT, "<br/>").given(value, "Status []").checkEq(newValue, "Status []");
            itest("evosuite", 21).given(REPLACEMENT, "<br/>").given(value, "com.netcetera.trema.core.exporting.KeyValuePair").checkEq(newValue, "com.netcetera.trema.core.exporting.KeyValuePair");
            itest("randoop", 21).given(REPLACEMENT, "<br/>").given(value, "com.netcetera.trema.core.exporting.ExportException: verified").checkEq(newValue, "com.netcetera.trema.core.exporting.ExportException: verified");
            itest("randoop", 21).given(REPLACEMENT, "<br/>").given(value, "com.netcetera.trema.core.ParseException: Context []").checkEq(newValue, "com.netcetera.trema.core.ParseException: Context []");
            itest("randoop", 21).given(REPLACEMENT, "<br/>").given(value, "Context").checkEq(newValue, "Context");
            itest("randoop", 21).given(REPLACEMENT, "<br/>").given(value, "ValueVValueaValuelValueuValueeValue").checkEq(newValue, "ValueVValueaValuelValueuValueeValue");
            itest("randoop", 21).given(REPLACEMENT, "<br/>").given(value, "com.netcetera.trema.core.exporting.ExportException: com.netcetera.trema.core.ParseException: '").checkEq(newValue, "com.netcetera.trema.core.exporting.ExportException: com.netcetera.trema.core.ParseException: '");
            itest("evosuite", 21).given(REPLACEMENT, "<br/>").given(value, "").checkEq(newValue, "");
            itest("dev", 21).given(REPLACEMENT, "<br/>").given(value, "The quick brown fox jumps\\n over the lazy dog.").checkEq(newValue, "The quick brown fox jumps\\n over the lazy dog.");
            itest("randoop", 21).given(REPLACEMENT, "<br/>").given(value, "com.netcetera.trema.core.exporting.ExportException: com.netcetera.trema.core.ParseException").checkEq(newValue, "com.netcetera.trema.core.exporting.ExportException: com.netcetera.trema.core.ParseException");
            itest("randoop", 21).given(REPLACEMENT, "<br/>").given(value, "com.netcetera.trema.core.exporting.ExportException: ").checkEq(newValue, "com.netcetera.trema.core.exporting.ExportException: ");
            itest("dev", 21).given(REPLACEMENT, "<br/>").given(value, "The quick brown fox jumps\\r\\n over the lazy dog.").checkEq(newValue, "The quick brown fox jumps<br/> over the lazy dog.");
            newValue = StringUtils.replace(newValue, "\\n", REPLACEMENT);
            itest("randoop", 22).given(REPLACEMENT, "<br/>").given(newValue, "Key").checkEq(newValue, "Key");
            itest("randoop", 22).given(REPLACEMENT, "<br/>").given(newValue, "com.netcetera.trema.core.exporting.ExportException: com.netcetera.trema.core.exporting.ExportException: com.netcetera.trema.core.exporting.ExportException: translated").checkEq(newValue, "com.netcetera.trema.core.exporting.ExportException: com.netcetera.trema.core.exporting.ExportException: com.netcetera.trema.core.exporting.ExportException: translated");
            itest("randoop", 22).given(REPLACEMENT, "<br/>").given(newValue, "undefined [com.netcetera.trema.core.exporting.ExportException: com.netcetera.trema.core.ParseException]").checkEq(newValue, "undefined [com.netcetera.trema.core.exporting.ExportException: com.netcetera.trema.core.ParseException]");
            itest("randoop", 22).given(REPLACEMENT, "<br/>").given(newValue, "translated [hi!]").checkEq(newValue, "translated [hi!]");
            itest("dev", 22).given(REPLACEMENT, "<br/>").given(newValue, "The quick brown fox jumps over the lazy dog.").checkEq(newValue, "The quick brown fox jumps over the lazy dog.");
            itest("randoop", 22).given(REPLACEMENT, "<br/>").given(newValue, "com.netcetera.trema.core.exporting.ExportException: com.netcetera.trema.core.ParseException").checkEq(newValue, "com.netcetera.trema.core.exporting.ExportException: com.netcetera.trema.core.ParseException");
            itest("randoop", 22).given(REPLACEMENT, "<br/>").given(newValue, "com.netcetera.trema.core.ParseException: ").checkEq(newValue, "com.netcetera.trema.core.ParseException: ");
            itest("randoop", 22).given(REPLACEMENT, "<br/>").given(newValue, "initial").checkEq(newValue, "initial");
            itest("randoop", 22).given(REPLACEMENT, "<br/>").given(newValue, "special").checkEq(newValue, "special");
            itest("randoop", 22).given(REPLACEMENT, "<br/>").given(newValue, "translatedCtranslatedotranslatedntranslatedttranslatedetranslatedxtranslatedttranslated translated[translated]translated").checkEq(newValue, "translatedCtranslatedotranslatedntranslatedttranslatedetranslatedxtranslatedttranslated translated[translated]translated");
            itest("randoop", 22).given(REPLACEMENT, "<br/>").given(newValue, "com.netcetera.trema.core.exporting.ExportException: com.netcetera.trema.core.ParseException: '").checkEq(newValue, "com.netcetera.trema.core.exporting.ExportException: com.netcetera.trema.core.ParseException: '");
            itest("randoop", 22).given(REPLACEMENT, "<br/>").given(newValue, "com.netcetera.trema.core.exporting.ExportException: translated").checkEq(newValue, "com.netcetera.trema.core.exporting.ExportException: translated");
            itest("randoop", 22).given(REPLACEMENT, "<br/>").given(newValue, "Context [] []").checkEq(newValue, "Context [] []");
            itest("evosuite", 22).given(REPLACEMENT, "<br/>").given(newValue, "96UBblza)Ipixe7@").checkEq(newValue, "96UBblza)Ipixe7@");
            itest("randoop", 22).given(REPLACEMENT, "<br/>").given(newValue, "''").checkEq(newValue, "''");
            itest("randoop", 22).given(REPLACEMENT, "<br/>").given(newValue, "Master [Context]").checkEq(newValue, "Master [Context]");
            itest("randoop", 22).given(REPLACEMENT, "<br/>").given(newValue, "ValueVValueaValuelValueuValueeValue").checkEq(newValue, "ValueVValueaValuelValueuValueeValue");
            itest("dev", 22).given(REPLACEMENT, "<br/>").given(newValue, "The quick brown fox jumps\\r over the lazy dog.").checkEq(newValue, "The quick brown fox jumps\\r over the lazy dog.");
            itest("randoop", 22).given(REPLACEMENT, "<br/>").given(newValue, "com.netcetera.trema.core.ParseException: Unknown change").checkEq(newValue, "com.netcetera.trema.core.ParseException: Unknown change");
            itest("dev", 22).given(REPLACEMENT, "<br/>").given(newValue, "The quick brown fox jumps\\n over the lazy dog.").checkEq(newValue, "The quick brown fox jumps<br/> over the lazy dog.");
            itest("randoop", 22).given(REPLACEMENT, "<br/>").given(newValue, "com.netcetera.trema.core.ParseException: com.netcetera.trema.core.ParseException: translated [Context]").checkEq(newValue, "com.netcetera.trema.core.ParseException: com.netcetera.trema.core.ParseException: translated [Context]");
            itest("evosuite", 22).given(REPLACEMENT, "<br/>").given(newValue, "com.netcetera.trema.core.exporting.HtmlLineBreakConverter").checkEq(newValue, "com.netcetera.trema.core.exporting.HtmlLineBreakConverter");
            itest("evosuite", 22).given(REPLACEMENT, "<br/>").given(newValue, "com.netcetera.trema.core.exporting.KeyValuePair").checkEq(newValue, "com.netcetera.trema.core.exporting.KeyValuePair");
            itest("randoop", 22).given(REPLACEMENT, "<br/>").given(newValue, "com.netcetera.trema.core.ParseException: translated").checkEq(newValue, "com.netcetera.trema.core.ParseException: translated");
            itest("randoop", 22).given(REPLACEMENT, "<br/>").given(newValue, "Context []").checkEq(newValue, "Context []");
            itest("randoop", 22).given(REPLACEMENT, "<br/>").given(newValue, "translated [com.netcetera.trema.core.exporting.ExportException: ]").checkEq(newValue, "translated [com.netcetera.trema.core.exporting.ExportException: ]");
            itest("evosuite", 22).given(REPLACEMENT, "<br/>").given(newValue, "c").checkEq(newValue, "c");
            itest("randoop", 22).given(REPLACEMENT, "<br/>").given(newValue, "").checkEq(newValue, "");
            itest("randoop", 22).given(REPLACEMENT, "<br/>").given(newValue, "com.netcetera.trema.core.ParseException: com.netcetera.trema.core.exporting.ExportException: com.netcetera.trema.core.exporting.ExportException: verified").checkEq(newValue, "com.netcetera.trema.core.ParseException: com.netcetera.trema.core.exporting.ExportException: com.netcetera.trema.core.exporting.ExportException: verified");
            itest("randoop", 22).given(REPLACEMENT, "<br/>").given(newValue, "com.netcetera.trema.core.ParseException: special [']").checkEq(newValue, "com.netcetera.trema.core.ParseException: special [']");
            itest("randoop", 22).given(REPLACEMENT, "<br/>").given(newValue, "com.netcetera.trema.core.ParseException: '").checkEq(newValue, "com.netcetera.trema.core.ParseException: '");
            itest("randoop", 22).given(REPLACEMENT, "<br/>").given(newValue, "The imported status is newer than the database status").checkEq(newValue, "The imported status is newer than the database status");
            itest("randoop", 22).given(REPLACEMENT, "<br/>").given(newValue, "translated").checkEq(newValue, "translated");
            itest("evosuite", 22).given(REPLACEMENT, "<br/>").given(newValue, "").checkEq(newValue, "");
            itest("randoop", 22).given(REPLACEMENT, "<br/>").given(newValue, "Context [com.netcetera.trema.core.ParseException: special]").checkEq(newValue, "Context [com.netcetera.trema.core.ParseException: special]");
            itest("randoop", 22).given(REPLACEMENT, "<br/>").given(newValue, "com.netcetera.trema.core.ParseException: Context []").checkEq(newValue, "com.netcetera.trema.core.ParseException: Context []");
            itest("randoop", 22).given(REPLACEMENT, "<br/>").given(newValue, "com.netcetera.trema.core.exporting.ExportException: ").checkEq(newValue, "com.netcetera.trema.core.exporting.ExportException: ");
            itest("randoop", 22).given(REPLACEMENT, "<br/>").given(newValue, "hi!").checkEq(newValue, "hi!");
            itest("randoop", 22).given(REPLACEMENT, "<br/>").given(newValue, "undefined").checkEq(newValue, "undefined");
            itest("randoop", 22).given(REPLACEMENT, "<br/>").given(newValue, "Master").checkEq(newValue, "Master");
            itest("randoop", 22).given(REPLACEMENT, "<br/>").given(newValue, "translated [Status]").checkEq(newValue, "translated [Status]");
            itest("randoop", 22).given(REPLACEMENT, "<br/>").given(newValue, "Status []").checkEq(newValue, "Status []");
            itest("randoop", 22).given(REPLACEMENT, "<br/>").given(newValue, "translated [']").checkEq(newValue, "translated [']");
            itest("evosuite", 22).given(REPLACEMENT, "<br/>").given(newValue, "%*l?,j]MxfPP41?`").checkEq(newValue, "%*l?,j]MxfPP41?`");
            itest("randoop", 22).given(REPLACEMENT, "<br/>").given(newValue, "com.netcetera.trema.core.exporting.ExportException: ''").checkEq(newValue, "com.netcetera.trema.core.exporting.ExportException: ''");
            itest("randoop", 22).given(REPLACEMENT, "<br/>").given(newValue, "translated [hi!] [Context]").checkEq(newValue, "translated [hi!] [Context]");
            itest("randoop", 22).given(REPLACEMENT, "<br/>").given(newValue, "com.netcetera.trema.core.ParseException: special").checkEq(newValue, "com.netcetera.trema.core.ParseException: special");
            itest("randoop", 22).given(REPLACEMENT, "<br/>").given(newValue, "' [com.netcetera.trema.core.ParseException: ']").checkEq(newValue, "' [com.netcetera.trema.core.ParseException: ']");
            itest("randoop", 22).given(REPLACEMENT, "<br/>").given(newValue, "The master language \"null\" does not exist in the database").checkEq(newValue, "The master language \"null\" does not exist in the database");
            itest("randoop", 22).given(REPLACEMENT, "<br/>").given(newValue, "Valuetranslated").checkEq(newValue, "Valuetranslated");
            itest("randoop", 22).given(REPLACEMENT, "<br/>").given(newValue, "Context").checkEq(newValue, "Context");
            itest("randoop", 22).given(REPLACEMENT, "<br/>").given(newValue, "com.netcetera.trema.core.exporting.ExportException: verified").checkEq(newValue, "com.netcetera.trema.core.exporting.ExportException: verified");
            itest("randoop", 22).given(REPLACEMENT, "<br/>").given(newValue, "com.netcetera.trema.core.ParseException: com.netcetera.trema.core.ParseException: hi!").checkEq(newValue, "com.netcetera.trema.core.ParseException: com.netcetera.trema.core.ParseException: hi!");
            itest("randoop", 22).given(REPLACEMENT, "<br/>").given(newValue, "Master [hi!]").checkEq(newValue, "Master [hi!]");
            itest("randoop", 22).given(REPLACEMENT, "<br/>").given(newValue, "The key does not exist in the database").checkEq(newValue, "The key does not exist in the database");
            itest("randoop", 22).given(REPLACEMENT, "<br/>").given(newValue, "Value").checkEq(newValue, "Value");
            itest("dev", 22).given(REPLACEMENT, "<br/>").given(newValue, "The quick brown fox jumps<br/> over the lazy dog.").checkEq(newValue, "The quick brown fox jumps<br/> over the lazy dog.");
            itest("randoop", 22).given(REPLACEMENT, "<br/>").given(newValue, "Master [Context] [Context] [Context]").checkEq(newValue, "Master [Context] [Context] [Context]");
            itest("evosuite", 22).given(REPLACEMENT, "<br/>").given(newValue, "\r\n").checkEq(newValue, "\r\n");
            itest("randoop", 22).given(REPLACEMENT, "<br/>").given(newValue, "Value [Status]").checkEq(newValue, "Value [Status]");
            itest("evosuite", 22).given(REPLACEMENT, "<br/>").given(newValue, "0Hn'M9_Py\u0002p").checkEq(newValue, "0Hn'M9_Py\u0002p");
            itest("randoop", 22).given(REPLACEMENT, "<br/>").given(newValue, "translatedMtranslatedatranslatedstranslatedttranslatedetranslatedrtranslated translated[translatedCtranslatedotranslatedntranslatedttranslatedetranslatedxtranslatedttranslated]translated").checkEq(newValue, "translatedMtranslatedatranslatedstranslatedttranslatedetranslatedrtranslated translated[translatedCtranslatedotranslatedntranslatedttranslatedetranslatedxtranslatedttranslated]translated");
            itest("randoop", 22).given(REPLACEMENT, "<br/>").given(newValue, "verified").checkEq(newValue, "verified");
            newValue = StringUtils.replace(newValue, "\\r", REPLACEMENT);
            itest("randoop", 23).given(REPLACEMENT, "<br/>").given(newValue, "Master [hi!]").checkEq(newValue, "Master [hi!]");
            itest("randoop", 23).given(REPLACEMENT, "<br/>").given(newValue, "undefined").checkEq(newValue, "undefined");
            itest("randoop", 23).given(REPLACEMENT, "<br/>").given(newValue, "translated [hi!]").checkEq(newValue, "translated [hi!]");
            itest("randoop", 23).given(REPLACEMENT, "<br/>").given(newValue, "Status []").checkEq(newValue, "Status []");
            itest("randoop", 23).given(REPLACEMENT, "<br/>").given(newValue, "''").checkEq(newValue, "''");
            itest("randoop", 23).given(REPLACEMENT, "<br/>").given(newValue, "com.netcetera.trema.core.ParseException: '").checkEq(newValue, "com.netcetera.trema.core.ParseException: '");
            itest("randoop", 23).given(REPLACEMENT, "<br/>").given(newValue, "com.netcetera.trema.core.ParseException: special").checkEq(newValue, "com.netcetera.trema.core.ParseException: special");
            itest("randoop", 23).given(REPLACEMENT, "<br/>").given(newValue, "Context [com.netcetera.trema.core.ParseException: special]").checkEq(newValue, "Context [com.netcetera.trema.core.ParseException: special]");
            itest("randoop", 23).given(REPLACEMENT, "<br/>").given(newValue, "translated [']").checkEq(newValue, "translated [']");
            itest("randoop", 23).given(REPLACEMENT, "<br/>").given(newValue, "undefined [com.netcetera.trema.core.exporting.ExportException: com.netcetera.trema.core.ParseException]").checkEq(newValue, "undefined [com.netcetera.trema.core.exporting.ExportException: com.netcetera.trema.core.ParseException]");
            itest("randoop", 23).given(REPLACEMENT, "<br/>").given(newValue, "com.netcetera.trema.core.ParseException: translated").checkEq(newValue, "com.netcetera.trema.core.ParseException: translated");
            itest("randoop", 23).given(REPLACEMENT, "<br/>").given(newValue, "The imported status is newer than the database status").checkEq(newValue, "The imported status is newer than the database status");
            itest("randoop", 23).given(REPLACEMENT, "<br/>").given(newValue, "Master [Context]").checkEq(newValue, "Master [Context]");
            itest("evosuite", 23).given(REPLACEMENT, "<br/>").given(newValue, "\r\n").checkEq(newValue, "\r\n");
            itest("randoop", 23).given(REPLACEMENT, "<br/>").given(newValue, "Key").checkEq(newValue, "Key");
            itest("evosuite", 23).given(REPLACEMENT, "<br/>").given(newValue, "96UBblza)Ipixe7@").checkEq(newValue, "96UBblza)Ipixe7@");
            itest("evosuite", 23).given(REPLACEMENT, "<br/>").given(newValue, "c").checkEq(newValue, "c");
            itest("randoop", 23).given(REPLACEMENT, "<br/>").given(newValue, "translatedMtranslatedatranslatedstranslatedttranslatedetranslatedrtranslated translated[translatedCtranslatedotranslatedntranslatedttranslatedetranslatedxtranslatedttranslated]translated").checkEq(newValue, "translatedMtranslatedatranslatedstranslatedttranslatedetranslatedrtranslated translated[translatedCtranslatedotranslatedntranslatedttranslatedetranslatedxtranslatedttranslated]translated");
            itest("randoop", 23).given(REPLACEMENT, "<br/>").given(newValue, "com.netcetera.trema.core.ParseException: Unknown change").checkEq(newValue, "com.netcetera.trema.core.ParseException: Unknown change");
            itest("randoop", 23).given(REPLACEMENT, "<br/>").given(newValue, "com.netcetera.trema.core.exporting.ExportException: verified").checkEq(newValue, "com.netcetera.trema.core.exporting.ExportException: verified");
            itest("evosuite", 23).given(REPLACEMENT, "<br/>").given(newValue, "com.netcetera.trema.core.exporting.HtmlLineBreakConverter").checkEq(newValue, "com.netcetera.trema.core.exporting.HtmlLineBreakConverter");
            itest("randoop", 23).given(REPLACEMENT, "<br/>").given(newValue, "com.netcetera.trema.core.ParseException: com.netcetera.trema.core.exporting.ExportException: com.netcetera.trema.core.exporting.ExportException: verified").checkEq(newValue, "com.netcetera.trema.core.ParseException: com.netcetera.trema.core.exporting.ExportException: com.netcetera.trema.core.exporting.ExportException: verified");
            itest("randoop", 23).given(REPLACEMENT, "<br/>").given(newValue, "Master").checkEq(newValue, "Master");
            itest("randoop", 23).given(REPLACEMENT, "<br/>").given(newValue, "com.netcetera.trema.core.exporting.ExportException: translated").checkEq(newValue, "com.netcetera.trema.core.exporting.ExportException: translated");
            itest("randoop", 23).given(REPLACEMENT, "<br/>").given(newValue, "com.netcetera.trema.core.ParseException: Context []").checkEq(newValue, "com.netcetera.trema.core.ParseException: Context []");
            itest("randoop", 23).given(REPLACEMENT, "<br/>").given(newValue, "Master [Context] [Context] [Context]").checkEq(newValue, "Master [Context] [Context] [Context]");
            itest("randoop", 23).given(REPLACEMENT, "<br/>").given(newValue, "com.netcetera.trema.core.ParseException: com.netcetera.trema.core.ParseException: translated [Context]").checkEq(newValue, "com.netcetera.trema.core.ParseException: com.netcetera.trema.core.ParseException: translated [Context]");
            itest("randoop", 23).given(REPLACEMENT, "<br/>").given(newValue, "The master language \"null\" does not exist in the database").checkEq(newValue, "The master language \"null\" does not exist in the database");
            itest("randoop", 23).given(REPLACEMENT, "<br/>").given(newValue, "Context [] []").checkEq(newValue, "Context [] []");
            itest("randoop", 23).given(REPLACEMENT, "<br/>").given(newValue, "translated [com.netcetera.trema.core.exporting.ExportException: ]").checkEq(newValue, "translated [com.netcetera.trema.core.exporting.ExportException: ]");
            itest("evosuite", 23).given(REPLACEMENT, "<br/>").given(newValue, "0Hn'M9_Py\u0002p").checkEq(newValue, "0Hn'M9_Py\u0002p");
            itest("randoop", 23).given(REPLACEMENT, "<br/>").given(newValue, "com.netcetera.trema.core.exporting.ExportException: com.netcetera.trema.core.ParseException").checkEq(newValue, "com.netcetera.trema.core.exporting.ExportException: com.netcetera.trema.core.ParseException");
            itest("randoop", 23).given(REPLACEMENT, "<br/>").given(newValue, "The key does not exist in the database").checkEq(newValue, "The key does not exist in the database");
            itest("randoop", 23).given(REPLACEMENT, "<br/>").given(newValue, "com.netcetera.trema.core.exporting.ExportException: ''").checkEq(newValue, "com.netcetera.trema.core.exporting.ExportException: ''");
            itest("randoop", 23).given(REPLACEMENT, "<br/>").given(newValue, "ValueVValueaValuelValueuValueeValue").checkEq(newValue, "ValueVValueaValuelValueuValueeValue");
            itest("randoop", 23).given(REPLACEMENT, "<br/>").given(newValue, "Context").checkEq(newValue, "Context");
            itest("dev", 23).given(REPLACEMENT, "<br/>").given(newValue, "The quick brown fox jumps<br/> over the lazy dog.").checkEq(newValue, "The quick brown fox jumps<br/> over the lazy dog.");
            itest("randoop", 23).given(REPLACEMENT, "<br/>").given(newValue, "translated [hi!] [Context]").checkEq(newValue, "translated [hi!] [Context]");
            itest("randoop", 23).given(REPLACEMENT, "<br/>").given(newValue, "com.netcetera.trema.core.ParseException: special [']").checkEq(newValue, "com.netcetera.trema.core.ParseException: special [']");
            itest("evosuite", 23).given(REPLACEMENT, "<br/>").given(newValue, "%*l?,j]MxfPP41?`").checkEq(newValue, "%*l?,j]MxfPP41?`");
            itest("randoop", 23).given(REPLACEMENT, "<br/>").given(newValue, "Valuetranslated").checkEq(newValue, "Valuetranslated");
            itest("randoop", 23).given(REPLACEMENT, "<br/>").given(newValue, "hi!").checkEq(newValue, "hi!");
            itest("randoop", 23).given(REPLACEMENT, "<br/>").given(newValue, "com.netcetera.trema.core.exporting.ExportException: com.netcetera.trema.core.exporting.ExportException: com.netcetera.trema.core.exporting.ExportException: translated").checkEq(newValue, "com.netcetera.trema.core.exporting.ExportException: com.netcetera.trema.core.exporting.ExportException: com.netcetera.trema.core.exporting.ExportException: translated");
            itest("randoop", 23).given(REPLACEMENT, "<br/>").given(newValue, "Context []").checkEq(newValue, "Context []");
            itest("randoop", 23).given(REPLACEMENT, "<br/>").given(newValue, "translated").checkEq(newValue, "translated");
            itest("randoop", 23).given(REPLACEMENT, "<br/>").given(newValue, "Value [Status]").checkEq(newValue, "Value [Status]");
            itest("evosuite", 23).given(REPLACEMENT, "<br/>").given(newValue, "com.netcetera.trema.core.exporting.KeyValuePair").checkEq(newValue, "com.netcetera.trema.core.exporting.KeyValuePair");
            itest("randoop", 23).given(REPLACEMENT, "<br/>").given(newValue, "initial").checkEq(newValue, "initial");
            itest("randoop", 23).given(REPLACEMENT, "<br/>").given(newValue, "translated [Status]").checkEq(newValue, "translated [Status]");
            itest("randoop", 23).given(REPLACEMENT, "<br/>").given(newValue, "com.netcetera.trema.core.exporting.ExportException: ").checkEq(newValue, "com.netcetera.trema.core.exporting.ExportException: ");
            itest("randoop", 23).given(REPLACEMENT, "<br/>").given(newValue, "Value").checkEq(newValue, "Value");
            itest("randoop", 23).given(REPLACEMENT, "<br/>").given(newValue, "com.netcetera.trema.core.ParseException: com.netcetera.trema.core.ParseException: hi!").checkEq(newValue, "com.netcetera.trema.core.ParseException: com.netcetera.trema.core.ParseException: hi!");
            itest("randoop", 23).given(REPLACEMENT, "<br/>").given(newValue, "' [com.netcetera.trema.core.ParseException: ']").checkEq(newValue, "' [com.netcetera.trema.core.ParseException: ']");
            itest("randoop", 23).given(REPLACEMENT, "<br/>").given(newValue, "verified").checkEq(newValue, "verified");
            itest("randoop", 23).given(REPLACEMENT, "<br/>").given(newValue, "special").checkEq(newValue, "special");
            itest("dev", 23).given(REPLACEMENT, "<br/>").given(newValue, "The quick brown fox jumps over the lazy dog.").checkEq(newValue, "The quick brown fox jumps over the lazy dog.");
            itest("randoop", 23).given(REPLACEMENT, "<br/>").given(newValue, "com.netcetera.trema.core.ParseException: ").checkEq(newValue, "com.netcetera.trema.core.ParseException: ");
            itest("randoop", 23).given(REPLACEMENT, "<br/>").given(newValue, "translatedCtranslatedotranslatedntranslatedttranslatedetranslatedxtranslatedttranslated translated[translated]translated").checkEq(newValue, "translatedCtranslatedotranslatedntranslatedttranslatedetranslatedxtranslatedttranslated translated[translated]translated");
            itest("dev", 23).given(REPLACEMENT, "<br/>").given(newValue, "The quick brown fox jumps\\r over the lazy dog.").checkEq(newValue, "The quick brown fox jumps<br/> over the lazy dog.");
            itest("randoop", 23).given(REPLACEMENT, "<br/>").given(newValue, "com.netcetera.trema.core.exporting.ExportException: com.netcetera.trema.core.ParseException: '").checkEq(newValue, "com.netcetera.trema.core.exporting.ExportException: com.netcetera.trema.core.ParseException: '");
            itest("randoop", 23).given(REPLACEMENT, "<br/>").given(newValue, "").checkEq(newValue, "");
            itest("evosuite", 23).given(REPLACEMENT, "<br/>").given(newValue, "").checkEq(newValue, "");
            keyValuePair.setValue(newValue);
        }
    }
}
