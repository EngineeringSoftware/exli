<java.io.SequenceInputStream>
  <e class="org.evosuite.shaded.org.mockito.codegen.Enumeration$MockitoMock$456147105">
    <mockitoInterceptor serialization="custom">
      <org.evosuite.shaded.org.mockito.internal.creation.bytebuddy.MockMethodInterceptor>
        <default>
          <handler class="org.evosuite.shaded.org.mockito.internal.handler.InvocationNotifierHandler">
            <invocationListeners/>
            <mockHandler class="org.evosuite.shaded.org.mockito.internal.handler.NullResultGuardian">
              <delegate class="org.evosuite.shaded.org.mockito.internal.handler.MockHandlerImpl">
                <invocationContainer>
                  <stubbed>
                    <org.evosuite.shaded.org.mockito.internal.stubbing.StubbedInvocationMatcher>
                      <invocation class="org.evosuite.shaded.org.mockito.internal.invocation.InterceptedInvocation">
                        <mockRef class="org.evosuite.shaded.org.mockito.internal.invocation.mockref.MockWeakReference" resolves-to="org.evosuite.shaded.org.mockito.internal.invocation.mockref.MockStrongReference">
                          <ref class="org.evosuite.shaded.org.mockito.codegen.Enumeration$MockitoMock$456147105" reference="../../../../../../../../../../../.."/>
                          <deserializeAsWeakRef>true</deserializeAsWeakRef>
                        </mockRef>
                        <mockitoMethod class="org.evosuite.shaded.org.mockito.internal.creation.DelegatingMethod">
                          <method>
                            <class>java.util.Enumeration</class>
                            <name>hasMoreElements</name>
                            <parameter-types/>
                          </method>
                          <parameterTypes/>
                        </mockitoMethod>
                        <arguments/>
                        <rawArguments reference="../arguments"/>
                        <realMethod class="org.evosuite.shaded.org.mockito.internal.invocation.RealMethod$IsIllegal">INSTANCE</realMethod>
                        <sequenceNumber>2</sequenceNumber>
                        <location class="org.evosuite.shaded.org.mockito.internal.debugging.LocationImpl">
                          <stackTraceLine>-&gt; at com.asana.resources.Attachments_ESTest.test06(Attachments_ESTest.java:592)</stackTraceLine>
                          <sourceFile>Attachments_ESTest.java</sourceFile>
                        </location>
                        <verified>false</verified>
                        <isIgnoredForVerification>false</isIgnoredForVerification>
                      </invocation>
                      <matchers/>
                      <answers class="java.util.concurrent.ConcurrentLinkedQueue" serialization="custom">
                        <unserializable-parents/>
                        <java.util.concurrent.ConcurrentLinkedQueue>
                          <default/>
                          <org.evosuite.shaded.org.mockito.internal.stubbing.answers.Returns>
                            <value class="boolean">false</value>
                          </org.evosuite.shaded.org.mockito.internal.stubbing.answers.Returns>
                          <null/>
                        </java.util.concurrent.ConcurrentLinkedQueue>
                      </answers>
                      <usedAtLock class="object-array"/>
                      <usedAt class="org.evosuite.shaded.org.mockito.internal.invocation.InterceptedInvocation">
                        <mockRef class="org.evosuite.shaded.org.mockito.internal.invocation.mockref.MockWeakReference" resolves-to="org.evosuite.shaded.org.mockito.internal.invocation.mockref.MockStrongReference">
                          <ref class="org.evosuite.shaded.org.mockito.codegen.Enumeration$MockitoMock$456147105" reference="../../../../../../../../../../../.."/>
                          <deserializeAsWeakRef>true</deserializeAsWeakRef>
                        </mockRef>
                        <mockitoMethod class="org.evosuite.shaded.org.mockito.internal.creation.DelegatingMethod">
                          <method reference="../../../invocation/mockitoMethod/method"/>
                          <parameterTypes/>
                        </mockitoMethod>
                        <arguments/>
                        <rawArguments reference="../arguments"/>
                        <realMethod class="org.evosuite.shaded.org.mockito.internal.invocation.RealMethod$IsIllegal">INSTANCE</realMethod>
                        <sequenceNumber>3</sequenceNumber>
                        <location class="org.evosuite.shaded.org.mockito.internal.debugging.LocationImpl">
                          <stackTraceLine>-&gt; at java.io.SequenceInputStream.nextStream(SequenceInputStream.java:109)</stackTraceLine>
                          <sourceFile>SequenceInputStream.java</sourceFile>
                        </location>
                        <verified>false</verified>
                        <isIgnoredForVerification>false</isIgnoredForVerification>
                        <stubInfo class="org.evosuite.shaded.org.mockito.internal.invocation.StubInfoImpl">
                          <stubbedAt class="org.evosuite.shaded.org.mockito.internal.stubbing.StubbedInvocationMatcher" reference="../../.."/>
                        </stubInfo>
                      </usedAt>
                    </org.evosuite.shaded.org.mockito.internal.stubbing.StubbedInvocationMatcher>
                  </stubbed>
                  <doAnswerStyleStubbing>
                    <answers/>
                  </doAnswerStyleStubbing>
                  <registeredInvocations class="org.evosuite.shaded.org.mockito.internal.verification.DefaultRegisteredInvocations">
                    <invocations>
                      <org.evosuite.shaded.org.mockito.internal.invocation.InterceptedInvocation reference="../../../stubbed/org.evosuite.shaded.org.mockito.internal.stubbing.StubbedInvocationMatcher/usedAt"/>
                    </invocations>
                  </registeredInvocations>
                  <invocationForStubbing class="org.evosuite.shaded.org.mockito.internal.invocation.InvocationMatcher">
                    <invocation class="org.evosuite.shaded.org.mockito.internal.invocation.InterceptedInvocation" reference="../../stubbed/org.evosuite.shaded.org.mockito.internal.stubbing.StubbedInvocationMatcher/usedAt"/>
                    <matchers/>
                  </invocationForStubbing>
                </invocationContainer>
                <matchersBinder/>
                <mockSettings class="org.evosuite.shaded.org.mockito.internal.creation.settings.CreationSettings">
                  <typeToMock>java.util.Enumeration</typeToMock>
                  <extraInterfaces/>
                  <defaultAnswer class="org.evosuite.runtime.ViolatedAssumptionAnswer"/>
                  <mockName class="org.evosuite.shaded.org.mockito.internal.util.MockNameImpl">
                    <mockName>enumeration</mockName>
                    <defaultName>true</defaultName>
                  </mockName>
                  <serializableMode>NONE</serializableMode>
                  <invocationListeners reference="../../../../invocationListeners"/>
                  <stubbingLookupListeners class="java.util.concurrent.CopyOnWriteArrayList" serialization="custom">
                    <java.util.concurrent.CopyOnWriteArrayList>
                      <default/>
                      <int>0</int>
                    </java.util.concurrent.CopyOnWriteArrayList>
                  </stubbingLookupListeners>
                  <verificationStartedListeners class="linked-list"/>
                  <stubOnly>false</stubOnly>
                  <stripAnnotations>false</stripAnnotations>
                  <useConstructor>false</useConstructor>
                  <lenient>false</lenient>
                </mockSettings>
              </delegate>
            </mockHandler>
          </handler>
          <mockCreationSettings class="org.evosuite.shaded.org.mockito.internal.creation.settings.CreationSettings" reference="../handler/mockHandler/delegate/mockSettings"/>
          <serializationSupport>
            <instanceLocalCurrentlySerializingFlag>false</instanceLocalCurrentlySerializingFlag>
            <mutex class="java.util.concurrent.locks.ReentrantLock">
              <sync class="java.util.concurrent.locks.ReentrantLock$NonfairSync" serialization="custom">
                <java.util.concurrent.locks.AbstractQueuedSynchronizer>
                  <default>
                    <state>0</state>
                  </default>
                </java.util.concurrent.locks.AbstractQueuedSynchronizer>
                <java.util.concurrent.locks.ReentrantLock_-Sync>
                  <default/>
                </java.util.concurrent.locks.ReentrantLock_-Sync>
              </sync>
            </mutex>
          </serializationSupport>
        </default>
      </org.evosuite.shaded.org.mockito.internal.creation.bytebuddy.MockMethodInterceptor>
    </mockitoInterceptor>
  </e>
</java.io.SequenceInputStream>