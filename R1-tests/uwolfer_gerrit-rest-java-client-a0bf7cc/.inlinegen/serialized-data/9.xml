<dynamic-proxy>
  <interface>org.apache.http.Header</interface>
  <handler class="org.easymock.internal.ObjectMethodsFilter" serialization="custom">
    <org.easymock.internal.ObjectMethodsFilter>
      <default>
        <delegate>
          <control>
            <state class="org.easymock.internal.ReplayState">
              <behavior class="org.easymock.internal.MocksBehavior">
                <behaviorLists>
                  <org.easymock.internal.UnorderedBehavior>
                    <results>
                      <org.easymock.internal.ExpectedInvocationAndResults>
                        <expectedInvocation>
                          <invocation serialization="custom">
                            <org.easymock.internal.Invocation>
                              <default>
                                <arguments/>
                                <currentCaptures class="list"/>
                                <mock class="dynamic-proxy" reference="../../../../../../../../../../../../../../../.."/>
                              </default>
                              <org.easymock.internal.MethodSerializationWrapper>
                                <className>org.apache.http.NameValuePair</className>
                                <methodName>getValue</methodName>
                                <parameterTypeNames/>
                              </org.easymock.internal.MethodSerializationWrapper>
                            </org.easymock.internal.Invocation>
                          </invocation>
                          <matchers/>
                        </expectedInvocation>
                        <results>
                          <callCount>0</callCount>
                          <ranges>
                            <org.easymock.internal.Range>
                              <minimum>1</minimum>
                              <maximum>1</maximum>
                            </org.easymock.internal.Range>
                          </ranges>
                          <results>
                            <org.easymock.internal.Result>
                              <value class="org.easymock.internal.Result$1ReturningAnswer">
                                <val_-value class="string">BaseAgent</val_-value>
                              </value>
                              <shouldFillInStackTrace>true</shouldFillInStackTrace>
                            </org.easymock.internal.Result>
                          </results>
                        </results>
                      </org.easymock.internal.ExpectedInvocationAndResults>
                    </results>
                    <checkOrder>false</checkOrder>
                  </org.easymock.internal.UnorderedBehavior>
                </behaviorLists>
                <stubResults/>
                <unexpectedCalls/>
                <nice>false</nice>
                <checkOrder>false</checkOrder>
                <isThreadSafe>true</isThreadSafe>
                <shouldBeUsedInOneThread>false</shouldBeUsedInOneThread>
                <position>
                  <value>0</value>
                </position>
              </behavior>
              <lock>
                <sync class="java.util.concurrent.locks.ReentrantLock$NonfairSync" serialization="custom">
                  <java.util.concurrent.locks.AbstractQueuedSynchronizer>
                    <default>
                      <state>0</state>
                    </default>
                  </java.util.concurrent.locks.AbstractQueuedSynchronizer>
                  <java.util.concurrent.locks.ReentrantLock_-Sync>
                    <default/>
                  </java.util.concurrent.locks.ReentrantLock_-Sync>
                </sync>
              </lock>
            </state>
            <behavior class="org.easymock.internal.MocksBehavior" reference="../state/behavior"/>
            <type>DEFAULT</type>
          </control>
        </delegate>
      </default>
      <org.easymock.internal.MethodSerializationWrapper>
        <className>java.lang.Object</className>
        <methodName>toString</methodName>
        <parameterTypeNames/>
      </org.easymock.internal.MethodSerializationWrapper>
      <org.easymock.internal.MethodSerializationWrapper>
        <className>java.lang.Object</className>
        <methodName>equals</methodName>
        <parameterTypeNames>
          <string>java.lang.Object</string>
        </parameterTypeNames>
      </org.easymock.internal.MethodSerializationWrapper>
      <org.easymock.internal.MethodSerializationWrapper>
        <className>java.lang.Object</className>
        <methodName>hashCode</methodName>
        <parameterTypeNames/>
      </org.easymock.internal.MethodSerializationWrapper>
      <org.easymock.internal.MethodSerializationWrapper>
        <className>java.lang.Object</className>
        <methodName>finalize</methodName>
        <parameterTypeNames/>
      </org.easymock.internal.MethodSerializationWrapper>
    </org.easymock.internal.ObjectMethodsFilter>
  </handler>
</dynamic-proxy>