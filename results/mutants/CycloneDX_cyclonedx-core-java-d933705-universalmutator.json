[
    {
        "compilation_failure": false,
        "filepath": "/home/itdocker/exli/_downloads/CycloneDX_cyclonedx-core-java/src/main/java/org/cyclonedx/util/VersionXmlAnnotationIntrospector.java",
        "id": 0,
        "linenumber": 40,
        "mutated_code": "      if (!(Arrays.stream(filter.versions()).noneMatch(v -> v.equals(version)))) {",
        "orginal_code": "      if (Arrays.stream(filter.versions()).noneMatch(v -> v.equals(version))) {"
    },
    {
        "compilation_failure": false,
        "filepath": "/home/itdocker/exli/_downloads/CycloneDX_cyclonedx-core-java/src/main/java/org/cyclonedx/util/VersionXmlAnnotationIntrospector.java",
        "id": 1,
        "linenumber": 40,
        "mutated_code": "      if (0==1) {",
        "orginal_code": "      if (Arrays.stream(filter.versions()).noneMatch(v -> v.equals(version))) {"
    },
    {
        "compilation_failure": false,
        "filepath": "/home/itdocker/exli/_downloads/CycloneDX_cyclonedx-core-java/src/main/java/org/cyclonedx/util/VersionXmlAnnotationIntrospector.java",
        "id": 2,
        "linenumber": 40,
        "mutated_code": "      if (1==1) {",
        "orginal_code": "      if (Arrays.stream(filter.versions()).noneMatch(v -> v.equals(version))) {"
    },
    {
        "compilation_failure": false,
        "filepath": "/home/itdocker/exli/_downloads/CycloneDX_cyclonedx-core-java/src/main/java/org/cyclonedx/util/VersionJsonAnnotationIntrospector.java",
        "id": 3,
        "linenumber": 39,
        "mutated_code": "            if (0==1) {",
        "orginal_code": "            if (Arrays.stream(filter.versions()).noneMatch(v -> v.equals(version))) {"
    },
    {
        "compilation_failure": false,
        "filepath": "/home/itdocker/exli/_downloads/CycloneDX_cyclonedx-core-java/src/main/java/org/cyclonedx/util/VersionJsonAnnotationIntrospector.java",
        "id": 4,
        "linenumber": 39,
        "mutated_code": "            if (1==1) {",
        "orginal_code": "            if (Arrays.stream(filter.versions()).noneMatch(v -> v.equals(version))) {"
    },
    {
        "compilation_failure": false,
        "filepath": "/home/itdocker/exli/_downloads/CycloneDX_cyclonedx-core-java/src/main/java/org/cyclonedx/util/VersionJsonAnnotationIntrospector.java",
        "id": 5,
        "linenumber": 39,
        "mutated_code": "            if (!(Arrays.stream(filter.versions()).noneMatch(v -> v.equals(version)))) {",
        "orginal_code": "            if (Arrays.stream(filter.versions()).noneMatch(v -> v.equals(version))) {"
    }
]