[
    {
        "code": "new Here(\"Randoop\", 191).given(m, \"16.xml\").checkEq(parameterName, \"id\");",
        "context": "if (f == null) {\ncontinue;\n}\nObject val = f.get(requestDto);\nif (val == null) {\ncontinue;\n}\nm.appendReplacement(urlBuffer, URLEncoder.encode(Utils.stripQuotes(getGson().toJson(val)), \"UTF-8\"));\nfields.remove(f);",
        "context_loc": 9,
        "filename": "SdkServiceClient",
        "index": 0,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 172,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "AquaticInformatics_aquarius-sdk-java",
        "source": "Randoop",
        "stmt": "                String parameterName = m.group(1);",
        "tgt_lineno": 191
    },
    {
        "code": "new Here(\"Unit\", 45).given(text, \"2017-12-25T00:00:00.123-07:00[PST]\").checkEq(text, \"2017-12-25T00:00:00.123-07:00\");",
        "context": "try {\nreturn FORMATTER.parse(text, Instant::from);\n} catch (DateTimeParseException exception) {\n// Workaround for AQS-760 quirks: 2020-12-01T-08:00\nif (text.contains(\"T-\") || text.contains(\"T+\")) {\nreturn FORMATTER.parse(text.replace(\"T\", \"T00:00:00.000\"), Instant::from);\n}\nthrow exception;\n}",
        "context_loc": 9,
        "filename": "InstantDeserializer",
        "index": 1,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 53,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "AquaticInformatics_aquarius-sdk-java",
        "source": "Unit",
        "stmt": "            text = text.substring(0, text.indexOf('['));",
        "tgt_lineno": 45
    },
    {
        "code": "new Here(\"Unit\", 19).given(apiVersion, \"15\").checkEq(_versionComponents, \"1.xml\");",
        "context": "throw new IllegalArgumentException(\"apiVersion cannot be empty\");\n}\nAdjustMajorVersion();",
        "context_loc": 3,
        "filename": "AquariusServerVersion",
        "index": 2,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 20,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "AquaticInformatics_aquarius-sdk-java",
        "source": "Unit",
        "stmt": "        _versionComponents = Func.map(apiVersion.split(\"\\\\.\"), Integer::parseUnsignedInt);",
        "tgt_lineno": 19
    },
    {
        "code": "new Here(\"Randoop\", 30).given(portfolioGid, \"com.asana.errors.RateLimitEnforcedError: Rate Limit Enforced\").checkEq(path, \"/portfolios/com.asana.errors.RateLimitEnforcedError: Rate Limit Enforced/addCustomFieldSetting\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "PortfoliosBase",
        "index": 3,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 35,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/portfolios/{portfolio_gid}/addCustomFieldSetting\".replace(\"{portfolio_gid}\", portfolioGid);",
        "tgt_lineno": 30
    },
    {
        "code": "new Here(\"Randoop\", 51).given(portfolioGid, \"Not Found\").checkEq(path, \"/portfolios/Not Found/addItem\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "PortfoliosBase",
        "index": 4,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 55,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/portfolios/{portfolio_gid}/addItem\".replace(\"{portfolio_gid}\", portfolioGid);",
        "tgt_lineno": 51
    },
    {
        "code": "new Here(\"Randoop\", 73).given(portfolioGid, \"Forbidden\").checkEq(path, \"/portfolios/Forbidden/addMembers\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "PortfoliosBase",
        "index": 5,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 75,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/portfolios/{portfolio_gid}/addMembers\".replace(\"{portfolio_gid}\", portfolioGid);",
        "tgt_lineno": 73
    },
    {
        "code": "new Here(\"Randoop\", 116).given(portfolioGid, \"Not Found\").checkEq(path, \"/portfolios/Not Found\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "PortfoliosBase",
        "index": 6,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 113,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/portfolios/{portfolio_gid}\".replace(\"{portfolio_gid}\", portfolioGid);",
        "tgt_lineno": 116
    },
    {
        "code": "new Here(\"Randoop\", 140).given(portfolioGid, \"Server Error\").checkEq(path, \"/portfolios/Server Error/items\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "PortfoliosBase",
        "index": 7,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 135,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/portfolios/{portfolio_gid}/items\".replace(\"{portfolio_gid}\", portfolioGid);",
        "tgt_lineno": 140
    },
    {
        "code": "new Here(\"Randoop\", 164).given(portfolioGid, \"\").checkEq(path, \"/portfolios/\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "PortfoliosBase",
        "index": 8,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 155,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/portfolios/{portfolio_gid}\".replace(\"{portfolio_gid}\", portfolioGid);",
        "tgt_lineno": 164
    },
    {
        "code": "new Here(\"Randoop\", 214).given(portfolioGid, \"Sync token invalid or too old\").checkEq(path, \"/portfolios/Sync token invalid or too old/removeCustomFieldSetting\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "PortfoliosBase",
        "index": 9,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 196,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/portfolios/{portfolio_gid}/removeCustomFieldSetting\".replace(\"{portfolio_gid}\", portfolioGid);",
        "tgt_lineno": 214
    },
    {
        "code": "new Here(\"Randoop\", 235).given(portfolioGid, \"\").checkEq(path, \"/portfolios//removeItem\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "PortfoliosBase",
        "index": 10,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 216,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/portfolios/{portfolio_gid}/removeItem\".replace(\"{portfolio_gid}\", portfolioGid);",
        "tgt_lineno": 235
    },
    {
        "code": "new Here(\"Randoop\", 257).given(portfolioGid, \"\").checkEq(path, \"/portfolios//removeMembers\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "PortfoliosBase",
        "index": 11,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 236,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/portfolios/{portfolio_gid}/removeMembers\".replace(\"{portfolio_gid}\", portfolioGid);",
        "tgt_lineno": 257
    },
    {
        "code": "new Here(\"Randoop\", 279).given(portfolioGid, \"POST\").checkEq(path, \"/portfolios/POST\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "PortfoliosBase",
        "index": 12,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 256,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/portfolios/{portfolio_gid}\".replace(\"{portfolio_gid}\", portfolioGid);",
        "tgt_lineno": 279
    },
    {
        "code": "new Here(\"Randoop\", 31).given(workspaceMembershipGid, \"\").checkEq(path, \"/workspace_memberships/\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "WorkspaceMembershipsBase",
        "index": 13,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 36,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/workspace_memberships/{workspace_membership_gid}\".replace(\"{workspace_membership_gid}\", workspaceMembershipGid);",
        "tgt_lineno": 31
    },
    {
        "code": "new Here(\"Randoop\", 55).given(userGid, \"\").checkEq(path, \"/users//workspace_memberships\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "WorkspaceMembershipsBase",
        "index": 14,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 58,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/users/{user_gid}/workspace_memberships\".replace(\"{user_gid}\", userGid);",
        "tgt_lineno": 55
    },
    {
        "code": "new Here(\"Randoop\", 82).given(workspaceGid, \"com.asana.errors.RetryableAsanaError: Not Found\").checkEq(path, \"/workspaces/com.asana.errors.RetryableAsanaError: Not Found/workspace_memberships\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "WorkspaceMembershipsBase",
        "index": 15,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 81,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/workspaces/{workspace_gid}/workspace_memberships\".replace(\"{workspace_gid}\", workspaceGid);",
        "tgt_lineno": 82
    },
    {
        "code": "new Here(\"Randoop\", 37).given(workspaceGid, \"POST\").checkEq(path, \"/workspaces/POST/audit_log_events\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "AuditLogApiBase",
        "index": 16,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 42,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/workspaces/{workspace_gid}/audit_log_events\".replace(\"{workspace_gid}\", workspaceGid);",
        "tgt_lineno": 37
    },
    {
        "code": "new Here(\"Randoop\", 140).given(goalGid, \"urn:ietf:wg:oauth:2.0:oob\").checkEq(path, \"/goals/urn:ietf:wg:oauth:2.0:oob\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "GoalsBase",
        "index": 17,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 128,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/goals/{goal_gid}\".replace(\"{goal_gid}\", goalGid);",
        "tgt_lineno": 140
    },
    {
        "code": "new Here(\"Randoop\", 162).given(goalGid, \"Server Error\").checkEq(path, \"/goals/Server Error\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "GoalsBase",
        "index": 18,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 148,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/goals/{goal_gid}\".replace(\"{goal_gid}\", goalGid);",
        "tgt_lineno": 162
    },
    {
        "code": "new Here(\"Randoop\", 347).given(goalGid, \"200\").checkEq(path, \"/goals/200\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "GoalsBase",
        "index": 19,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 302,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/goals/{goal_gid}\".replace(\"{goal_gid}\", goalGid);",
        "tgt_lineno": 347
    },
    {
        "code": "new Here(\"Unit\", 21).given(job, \"1\").checkEq(path, \"/jobs/1\");",
        "context": "",
        "context_loc": 0,
        "filename": "Jobs",
        "index": 20,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 24,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Unit",
        "stmt": "        String path = String.format(\"/jobs/%s\", job);",
        "tgt_lineno": 21
    },
    {
        "code": "new Here(\"Randoop\", 31).given(taskGid, \"hi!\").checkEq(path, \"/tasks/hi!/stories\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "StoriesBase",
        "index": 21,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 36,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/tasks/{task_gid}/stories\".replace(\"{task_gid}\", taskGid);",
        "tgt_lineno": 31
    },
    {
        "code": "new Here(\"Randoop\", 53).given(storyGid, \"POST\").checkEq(path, \"/stories/POST\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "StoriesBase",
        "index": 22,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 56,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/stories/{story_gid}\".replace(\"{story_gid}\", storyGid);",
        "tgt_lineno": 53
    },
    {
        "code": "new Here(\"Randoop\", 77).given(taskGid, \"Sync token invalid or too old\").checkEq(path, \"/tasks/Sync token invalid or too old/stories\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "StoriesBase",
        "index": 23,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 78,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/tasks/{task_gid}/stories\".replace(\"{task_gid}\", taskGid);",
        "tgt_lineno": 77
    },
    {
        "code": "new Here(\"Randoop\", 103).given(storyGid, \"Not Found\").checkEq(path, \"/stories/Not Found\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "StoriesBase",
        "index": 24,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 100,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/stories/{story_gid}\".replace(\"{story_gid}\", storyGid);",
        "tgt_lineno": 103
    },
    {
        "code": "new Here(\"Randoop\", 127).given(storyGid, \"Not Found\").checkEq(path, \"/stories/Not Found\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "StoriesBase",
        "index": 25,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 120,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/stories/{story_gid}\".replace(\"{story_gid}\", storyGid);",
        "tgt_lineno": 127
    },
    {
        "code": "new Here(\"Randoop\", 31).given(teamMembershipGid, \"com.asana.errors.RetryableAsanaError: Not Found\").checkEq(path, \"/team_memberships/com.asana.errors.RetryableAsanaError: Not Found\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "TeamMembershipsBase",
        "index": 26,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 36,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/team_memberships/{team_membership_gid}\".replace(\"{team_membership_gid}\", teamMembershipGid);",
        "tgt_lineno": 31
    },
    {
        "code": "new Here(\"Randoop\", 86).given(teamGid, \"Invalid Request\").checkEq(path, \"/teams/Invalid Request/team_memberships\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "TeamMembershipsBase",
        "index": 27,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 81,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/teams/{team_gid}/team_memberships\".replace(\"{team_gid}\", teamGid);",
        "tgt_lineno": 86
    },
    {
        "code": "new Here(\"Randoop\", 113).given(userGid, \"Sync token invalid or too old\").checkEq(path, \"/users/Sync token invalid or too old/team_memberships\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "TeamMembershipsBase",
        "index": 28,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 104,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/users/{user_gid}/team_memberships\".replace(\"{user_gid}\", userGid);",
        "tgt_lineno": 113
    },
    {
        "code": "new Here(\"Randoop\", 24).given(project, \"Server Error\").checkEq(path, \"/projects/Server Error/project_statuses\");",
        "context": "",
        "context_loc": 0,
        "filename": "ProjectStatuses",
        "index": 29,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 27,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/projects/%s/project_statuses\", project);",
        "tgt_lineno": 24
    },
    {
        "code": "new Here(\"Randoop\", 36).given(project, \"\").checkEq(path, \"/projects//project_statuses\");",
        "context": "",
        "context_loc": 0,
        "filename": "ProjectStatuses",
        "index": 30,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 39,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/projects/%s/project_statuses\", project);",
        "tgt_lineno": 36
    },
    {
        "code": "new Here(\"Randoop\", 48).given(projectStatus, \"Server Error\").checkEq(path, \"/project_statuses/Server Error\");",
        "context": "",
        "context_loc": 0,
        "filename": "ProjectStatuses",
        "index": 31,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 51,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/project_statuses/%s\", projectStatus);",
        "tgt_lineno": 48
    },
    {
        "code": "new Here(\"Randoop\", 62).given(projectStatus, \"hi!\").checkEq(path, \"/project_statuses/hi!\");",
        "context": "",
        "context_loc": 0,
        "filename": "ProjectStatuses",
        "index": 32,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 65,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/project_statuses/%s\", projectStatus);",
        "tgt_lineno": 62
    },
    {
        "code": "new Here(\"Randoop\", 33).given(portfolioGid, \"https://app.asana.com/-/oauth_authorize?client_id&redirect_uri=hi!&response_type=code&state=Server%20Error\").checkEq(path, \"/portfolios/https://app.asana.com/-/oauth_authorize?client_id&redirect_uri=hi!&response_type=code&state=Server%20Error/custom_field_settings\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "CustomFieldSettingsBase",
        "index": 33,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 38,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/portfolios/{portfolio_gid}/custom_field_settings\".replace(\"{portfolio_gid}\", portfolioGid);",
        "tgt_lineno": 33
    },
    {
        "code": "new Here(\"Randoop\", 59).given(projectGid, \"\").checkEq(path, \"/projects//custom_field_settings\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "CustomFieldSettingsBase",
        "index": 34,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 60,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/projects/{project_gid}/custom_field_settings\".replace(\"{project_gid}\", projectGid);",
        "tgt_lineno": 59
    },
    {
        "code": "new Here(\"Randoop\", 46).given(workspace, \"Forbidden\").checkEq(path, \"/workspaces/Forbidden/tags\");",
        "context": "",
        "context_loc": 0,
        "filename": "Tags",
        "index": 35,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 48,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/workspaces/%s/tags\", workspace);",
        "tgt_lineno": 46
    },
    {
        "code": "new Here(\"Unit\", 58).given(tag, \"1\").checkEq(path, \"/tags/1\");",
        "context": "",
        "context_loc": 0,
        "filename": "Tags",
        "index": 36,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 60,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Unit",
        "stmt": "        String path = String.format(\"/tags/%s\", tag);",
        "tgt_lineno": 58
    },
    {
        "code": "new Here(\"Randoop\", 77).given(tag, \"https://app.asana.com/-/oauth_authorize?client_id&redirect_uri=hi!&response_type=code&state=Server%20Error\").checkEq(path, \"/tags/https://app.asana.com/-/oauth_authorize?client_id&redirect_uri=hi!&response_type=code&state=Server%20Error\");",
        "context": "",
        "context_loc": 0,
        "filename": "Tags",
        "index": 37,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 79,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/tags/%s\", tag);",
        "tgt_lineno": 77
    },
    {
        "code": "new Here(\"Randoop\", 92).given(tag, \"Server Error\").checkEq(path, \"/tags/Server Error\");",
        "context": "",
        "context_loc": 0,
        "filename": "Tags",
        "index": 38,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 94,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/tags/%s\", tag);",
        "tgt_lineno": 92
    },
    {
        "code": "new Here(\"Randoop\", 115).given(workspace, \"com.asana.errors.InvalidRequestError: Invalid Request\").checkEq(path, \"/workspaces/com.asana.errors.InvalidRequestError: Invalid Request/tags\");",
        "context": "",
        "context_loc": 0,
        "filename": "Tags",
        "index": 39,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 116,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/workspaces/%s/tags\", workspace);",
        "tgt_lineno": 115
    },
    {
        "code": "new Here(\"Randoop\", 56).given(statusGid, \"Not Found\").checkEq(path, \"/status_updates/Not Found\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "StatusUpdatesBase",
        "index": 40,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 56,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/status_updates/{status_gid}\".replace(\"{status_gid}\", statusGid);",
        "tgt_lineno": 56
    },
    {
        "code": "new Here(\"Randoop\", 78).given(statusGid, \"\").checkEq(path, \"/status_updates/\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "StatusUpdatesBase",
        "index": 41,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 76,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/status_updates/{status_gid}\".replace(\"{status_gid}\", statusGid);",
        "tgt_lineno": 78
    },
    {
        "code": "new Here(\"Randoop\", 31).given(projectGid, \"hi!\").checkEq(path, \"/projects/hi!/project_statuses\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "ProjectStatusesBase",
        "index": 42,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 36,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/projects/{project_gid}/project_statuses\".replace(\"{project_gid}\", projectGid);",
        "tgt_lineno": 31
    },
    {
        "code": "new Here(\"Randoop\", 53).given(projectStatusGid, \"Sync token invalid or too old\").checkEq(path, \"/project_statuses/Sync token invalid or too old\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "ProjectStatusesBase",
        "index": 43,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 56,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/project_statuses/{project_status_gid}\".replace(\"{project_status_gid}\", projectStatusGid);",
        "tgt_lineno": 53
    },
    {
        "code": "new Here(\"Randoop\", 75).given(projectStatusGid, \"Not Found\").checkEq(path, \"/project_statuses/Not Found\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "ProjectStatusesBase",
        "index": 44,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 76,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/project_statuses/{project_status_gid}\".replace(\"{project_status_gid}\", projectStatusGid);",
        "tgt_lineno": 75
    },
    {
        "code": "new Here(\"Randoop\", 99).given(projectGid, \"Not Found\").checkEq(path, \"/projects/Not Found/project_statuses\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "ProjectStatusesBase",
        "index": 45,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 98,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/projects/{project_gid}/project_statuses\".replace(\"{project_gid}\", projectGid);",
        "tgt_lineno": 99
    },
    {
        "code": "new Here(\"Randoop\", 48).given(workspace, \"Server Error\").checkEq(path, \"/workspaces/Server Error/tasks\");",
        "context": "",
        "context_loc": 0,
        "filename": "Tasks",
        "index": 46,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 50,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/workspaces/%s/tasks\", workspace);",
        "tgt_lineno": 48
    },
    {
        "code": "new Here(\"Unit\", 60).given(task, \"1\").checkEq(path, \"/tasks/1\");",
        "context": "",
        "context_loc": 0,
        "filename": "Tasks",
        "index": 47,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 62,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Unit",
        "stmt": "        String path = String.format(\"/tasks/%s\", task);",
        "tgt_lineno": 60
    },
    {
        "code": "new Here(\"Unit\", 80).given(task, \"1001\").checkEq(path, \"/tasks/1001\");",
        "context": "",
        "context_loc": 0,
        "filename": "Tasks",
        "index": 48,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 82,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Unit",
        "stmt": "        String path = String.format(\"/tasks/%s\", task);",
        "tgt_lineno": 80
    },
    {
        "code": "new Here(\"Unit\", 97).given(task, \"1\").checkEq(path, \"/tasks/1\");",
        "context": "",
        "context_loc": 0,
        "filename": "Tasks",
        "index": 49,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 99,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Unit",
        "stmt": "        String path = String.format(\"/tasks/%s\", task);",
        "tgt_lineno": 97
    },
    {
        "code": "new Here(\"Unit\", 110).given(project, \"1\").checkEq(path, \"/projects/1/tasks\");",
        "context": "",
        "context_loc": 0,
        "filename": "Tasks",
        "index": 50,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 112,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Unit",
        "stmt": "        String path = String.format(\"/projects/%s/tasks\", project);",
        "tgt_lineno": 110
    },
    {
        "code": "new Here(\"Randoop\", 122).given(tag, \"POST\").checkEq(path, \"/tags/POST/tasks\");",
        "context": "",
        "context_loc": 0,
        "filename": "Tasks",
        "index": 51,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 124,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/tags/%s/tasks\", tag);",
        "tgt_lineno": 122
    },
    {
        "code": "new Here(\"Randoop\", 134).given(section, \"Server Error\").checkEq(path, \"/sections/Server Error/tasks\");",
        "context": "",
        "context_loc": 0,
        "filename": "Tasks",
        "index": 52,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 136,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/sections/%s/tasks\", section);",
        "tgt_lineno": 134
    },
    {
        "code": "new Here(\"Randoop\", 162).given(userTaskList, \"Forbidden\").checkEq(path, \"/user_task_lists/Forbidden/tasks\");",
        "context": "",
        "context_loc": 0,
        "filename": "Tasks",
        "index": 53,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 164,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/user_task_lists/%s/tasks\", userTaskList);",
        "tgt_lineno": 162
    },
    {
        "code": "new Here(\"Randoop\", 188).given(tag, \"urn:ietf:wg:oauth:2.0:oob\").checkEq(path, \"/tags/urn:ietf:wg:oauth:2.0:oob/tasks\");",
        "context": "",
        "context_loc": 0,
        "filename": "Tasks",
        "index": 54,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 189,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/tags/%s/tasks\", tag);",
        "tgt_lineno": 188
    },
    {
        "code": "new Here(\"Randoop\", 200).given(workspace, \"/tasks/Not Found/removeProject\").checkEq(path, \"/workspaces//tasks/Not Found/removeProject/tasks/search\");",
        "context": "",
        "context_loc": 0,
        "filename": "Tasks",
        "index": 55,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 201,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/workspaces/%s/tasks/search\", workspace);",
        "tgt_lineno": 200
    },
    {
        "code": "new Here(\"Randoop\", 212).given(task, \"Not Found\").checkEq(path, \"/tasks/Not Found/dependencies\");",
        "context": "",
        "context_loc": 0,
        "filename": "Tasks",
        "index": 56,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 213,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/tasks/%s/dependencies\", task);",
        "tgt_lineno": 212
    },
    {
        "code": "new Here(\"Randoop\", 224).given(task, \"Server Error\").checkEq(path, \"/tasks/Server Error/dependents\");",
        "context": "",
        "context_loc": 0,
        "filename": "Tasks",
        "index": 57,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 225,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/tasks/%s/dependents\", task);",
        "tgt_lineno": 224
    },
    {
        "code": "new Here(\"Randoop\", 237).given(task, \"hi!\").checkEq(path, \"/tasks/hi!/addDependencies\");",
        "context": "",
        "context_loc": 0,
        "filename": "Tasks",
        "index": 58,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 238,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/tasks/%s/addDependencies\", task);",
        "tgt_lineno": 237
    },
    {
        "code": "new Here(\"Randoop\", 250).given(task, \"urn:ietf:wg:oauth:2.0:oob\").checkEq(path, \"/tasks/urn:ietf:wg:oauth:2.0:oob/addDependents\");",
        "context": "",
        "context_loc": 0,
        "filename": "Tasks",
        "index": 59,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 251,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/tasks/%s/addDependents\", task);",
        "tgt_lineno": 250
    },
    {
        "code": "new Here(\"Randoop\", 262).given(task, \"Sync token invalid or too old\").checkEq(path, \"/tasks/Sync token invalid or too old/removeDependencies\");",
        "context": "",
        "context_loc": 0,
        "filename": "Tasks",
        "index": 60,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 263,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/tasks/%s/removeDependencies\", task);",
        "tgt_lineno": 262
    },
    {
        "code": "new Here(\"Randoop\", 274).given(task, \"/tasks/Not Found/removeProject\").checkEq(path, \"/tasks//tasks/Not Found/removeProject/removeDependents\");",
        "context": "",
        "context_loc": 0,
        "filename": "Tasks",
        "index": 61,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 275,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/tasks/%s/removeDependents\", task);",
        "tgt_lineno": 274
    },
    {
        "code": "new Here(\"Randoop\", 287).given(task, \"/tasks/Not Found/removeProject\").checkEq(path, \"/tasks//tasks/Not Found/removeProject/addFollowers\");",
        "context": "",
        "context_loc": 0,
        "filename": "Tasks",
        "index": 62,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 288,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/tasks/%s/addFollowers\", task);",
        "tgt_lineno": 287
    },
    {
        "code": "new Here(\"Randoop\", 300).given(task, \"https://app.asana.com/-/oauth_authorize?client_id&redirect_uri=hi!&response_type=code&state=404\").checkEq(path, \"/tasks/https://app.asana.com/-/oauth_authorize?client_id&redirect_uri=hi!&response_type=code&state=404/removeFollowers\");",
        "context": "",
        "context_loc": 0,
        "filename": "Tasks",
        "index": 63,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 301,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/tasks/%s/removeFollowers\", task);",
        "tgt_lineno": 300
    },
    {
        "code": "new Here(\"Randoop\", 312).given(task, \"Not Found\").checkEq(path, \"/tasks/Not Found/projects\");",
        "context": "",
        "context_loc": 0,
        "filename": "Tasks",
        "index": 64,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 313,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/tasks/%s/projects\", task);",
        "tgt_lineno": 312
    },
    {
        "code": "new Here(\"Randoop\", 337).given(task, \"hi!\").checkEq(path, \"/tasks/hi!/addProject\");",
        "context": "",
        "context_loc": 0,
        "filename": "Tasks",
        "index": 65,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 338,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/tasks/%s/addProject\", task);",
        "tgt_lineno": 337
    },
    {
        "code": "new Here(\"Randoop\", 352).given(task, \"hi!\").checkEq(path, \"/tasks/hi!/removeProject\");",
        "context": "",
        "context_loc": 0,
        "filename": "Tasks",
        "index": 66,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 353,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/tasks/%s/removeProject\", task);",
        "tgt_lineno": 352
    },
    {
        "code": "new Here(\"Randoop\", 364).given(task, \"com.asana.errors.InvalidRequestError: Invalid Request\").checkEq(path, \"/tasks/com.asana.errors.InvalidRequestError: Invalid Request/tags\");",
        "context": "",
        "context_loc": 0,
        "filename": "Tasks",
        "index": 67,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 365,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/tasks/%s/tags\", task);",
        "tgt_lineno": 364
    },
    {
        "code": "new Here(\"Randoop\", 376).given(task, \"POST\").checkEq(path, \"/tasks/POST/addTag\");",
        "context": "",
        "context_loc": 0,
        "filename": "Tasks",
        "index": 68,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 377,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/tasks/%s/addTag\", task);",
        "tgt_lineno": 376
    },
    {
        "code": "new Here(\"Randoop\", 388).given(task, \"com.asana.errors.RetryableAsanaError: Not Found\").checkEq(path, \"/tasks/com.asana.errors.RetryableAsanaError: Not Found/removeTag\");",
        "context": "",
        "context_loc": 0,
        "filename": "Tasks",
        "index": 69,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 389,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/tasks/%s/removeTag\", task);",
        "tgt_lineno": 388
    },
    {
        "code": "new Here(\"Randoop\", 400).given(task, \"https://app.asana.com/-/oauth_authorize?client_id&redirect_uri=hi!&response_type=code&state=Server%20Error\").checkEq(path, \"/tasks/https://app.asana.com/-/oauth_authorize?client_id&redirect_uri=hi!&response_type=code&state=Server%20Error/subtasks\");",
        "context": "",
        "context_loc": 0,
        "filename": "Tasks",
        "index": 70,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 401,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/tasks/%s/subtasks\", task);",
        "tgt_lineno": 400
    },
    {
        "code": "new Here(\"Randoop\", 413).given(task, \"https://app.asana.com/-/oauth_authorize?client_id&redirect_uri=hi!&response_type=code&state=Server%20Error\").checkEq(path, \"/tasks/https://app.asana.com/-/oauth_authorize?client_id&redirect_uri=hi!&response_type=code&state=Server%20Error/subtasks\");",
        "context": "",
        "context_loc": 0,
        "filename": "Tasks",
        "index": 71,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 414,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/tasks/%s/subtasks\", task);",
        "tgt_lineno": 413
    },
    {
        "code": "new Here(\"Randoop\", 425).given(task, \"/tasks/Not Found/removeProject\").checkEq(path, \"/tasks//tasks/Not Found/removeProject/stories\");",
        "context": "",
        "context_loc": 0,
        "filename": "Tasks",
        "index": 72,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 426,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/tasks/%s/stories\", task);",
        "tgt_lineno": 425
    },
    {
        "code": "new Here(\"Randoop\", 441).given(task, \"Payment Required\").checkEq(path, \"/tasks/Payment Required/stories\");",
        "context": "",
        "context_loc": 0,
        "filename": "Tasks",
        "index": 73,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 442,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/tasks/%s/stories\", task);",
        "tgt_lineno": 441
    },
    {
        "code": "new Here(\"Randoop\", 459).given(userTaskList, \"com.asana.errors.RetryableAsanaError: Not Found\").checkEq(path, \"/user_task_lists/com.asana.errors.RetryableAsanaError: Not Found/tasks/insert\");",
        "context": "",
        "context_loc": 0,
        "filename": "Tasks",
        "index": 74,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 460,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/user_task_lists/%s/tasks/insert\", userTaskList);",
        "tgt_lineno": 459
    },
    {
        "code": "new Here(\"Unit\", 45).given(portfolioMembership, \"1\").checkEq(path, \"/portfolio_memberships/1\");",
        "context": "",
        "context_loc": 0,
        "filename": "PortfolioMemberships",
        "index": 75,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 46,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Unit",
        "stmt": "        String path = String.format(\"/portfolio_memberships/%s\", portfolioMembership);",
        "tgt_lineno": 45
    },
    {
        "code": "new Here(\"Randoop\", 30).given(projectGid, \"https://app.asana.com/-/oauth_authorize?client_id&redirect_uri=hi!&response_type=code&state=Server%20Error\").checkEq(path, \"/projects/https://app.asana.com/-/oauth_authorize?client_id&redirect_uri=hi!&response_type=code&state=Server%20Error/addCustomFieldSetting\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "ProjectsBase",
        "index": 76,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 35,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/projects/{project_gid}/addCustomFieldSetting\".replace(\"{project_gid}\", projectGid);",
        "tgt_lineno": 30
    },
    {
        "code": "new Here(\"Randoop\", 51).given(projectGid, \"Not Found\").checkEq(path, \"/projects/Not Found/addFollowers\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "ProjectsBase",
        "index": 77,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 55,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/projects/{project_gid}/addFollowers\".replace(\"{project_gid}\", projectGid);",
        "tgt_lineno": 51
    },
    {
        "code": "new Here(\"Randoop\", 73).given(projectGid, \"com.asana.errors.RetryableAsanaError: Not Found\").checkEq(path, \"/projects/com.asana.errors.RetryableAsanaError: Not Found/addMembers\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "ProjectsBase",
        "index": 78,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 75,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/projects/{project_gid}/addMembers\".replace(\"{project_gid}\", projectGid);",
        "tgt_lineno": 73
    },
    {
        "code": "new Here(\"Randoop\", 116).given(teamGid, \"POST\").checkEq(path, \"/teams/POST/projects\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "ProjectsBase",
        "index": 79,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 113,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/teams/{team_gid}/projects\".replace(\"{team_gid}\", teamGid);",
        "tgt_lineno": 116
    },
    {
        "code": "new Here(\"Randoop\", 138).given(workspaceGid, \"com.asana.errors.InvalidRequestError: Invalid Request\").checkEq(path, \"/workspaces/com.asana.errors.InvalidRequestError: Invalid Request/projects\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "ProjectsBase",
        "index": 80,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 133,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/workspaces/{workspace_gid}/projects\".replace(\"{workspace_gid}\", workspaceGid);",
        "tgt_lineno": 138
    },
    {
        "code": "new Here(\"Randoop\", 160).given(projectGid, \"hi!\").checkEq(path, \"/projects/hi!\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "ProjectsBase",
        "index": 81,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 153,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/projects/{project_gid}\".replace(\"{project_gid}\", projectGid);",
        "tgt_lineno": 160
    },
    {
        "code": "new Here(\"Randoop\", 182).given(projectGid, \"Sync token invalid or too old\").checkEq(path, \"/projects/Sync token invalid or too old/duplicate\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "ProjectsBase",
        "index": 82,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 173,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/projects/{project_gid}/duplicate\".replace(\"{project_gid}\", projectGid);",
        "tgt_lineno": 182
    },
    {
        "code": "new Here(\"Randoop\", 204).given(projectGid, \"Not Found\").checkEq(path, \"/projects/Not Found\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "ProjectsBase",
        "index": 83,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 193,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/projects/{project_gid}\".replace(\"{project_gid}\", projectGid);",
        "tgt_lineno": 204
    },
    {
        "code": "new Here(\"Randoop\", 259).given(taskGid, \"Not Found\").checkEq(path, \"/tasks/Not Found/projects\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "ProjectsBase",
        "index": 84,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 238,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/tasks/{task_gid}/projects\".replace(\"{task_gid}\", taskGid);",
        "tgt_lineno": 259
    },
    {
        "code": "new Here(\"Randoop\", 286).given(teamGid, \"com.asana.errors.RateLimitEnforcedError: Rate Limit Enforced\").checkEq(path, \"/teams/com.asana.errors.RateLimitEnforcedError: Rate Limit Enforced/projects\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "ProjectsBase",
        "index": 85,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 261,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/teams/{team_gid}/projects\".replace(\"{team_gid}\", teamGid);",
        "tgt_lineno": 286
    },
    {
        "code": "new Here(\"Randoop\", 314).given(workspaceGid, \"Not Found\").checkEq(path, \"/workspaces/Not Found/projects\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "ProjectsBase",
        "index": 86,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 284,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/workspaces/{workspace_gid}/projects\".replace(\"{workspace_gid}\", workspaceGid);",
        "tgt_lineno": 314
    },
    {
        "code": "new Here(\"Randoop\", 341).given(projectGid, \"\").checkEq(path, \"/projects//task_counts\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "ProjectsBase",
        "index": 87,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 306,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/projects/{project_gid}/task_counts\".replace(\"{project_gid}\", projectGid);",
        "tgt_lineno": 341
    },
    {
        "code": "new Here(\"Randoop\", 364).given(projectGid, \"hi!\").checkEq(path, \"/projects/hi!/removeCustomFieldSetting\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "ProjectsBase",
        "index": 88,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 325,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/projects/{project_gid}/removeCustomFieldSetting\".replace(\"{project_gid}\", projectGid);",
        "tgt_lineno": 364
    },
    {
        "code": "new Here(\"Randoop\", 385).given(projectGid, \"Not Found\").checkEq(path, \"/projects/Not Found/removeFollowers\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "ProjectsBase",
        "index": 89,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 345,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/projects/{project_gid}/removeFollowers\".replace(\"{project_gid}\", projectGid);",
        "tgt_lineno": 385
    },
    {
        "code": "new Here(\"Randoop\", 407).given(projectGid, \"hi!\").checkEq(path, \"/projects/hi!/removeMembers\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "ProjectsBase",
        "index": 90,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 365,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/projects/{project_gid}/removeMembers\".replace(\"{project_gid}\", projectGid);",
        "tgt_lineno": 407
    },
    {
        "code": "new Here(\"Randoop\", 429).given(projectGid, \"POST\").checkEq(path, \"/projects/POST\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "ProjectsBase",
        "index": 91,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 385,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/projects/{project_gid}\".replace(\"{project_gid}\", projectGid);",
        "tgt_lineno": 429
    },
    {
        "code": "new Here(\"Randoop\", 31).given(portfolioMembershipGid, \"com.asana.errors.RetryableAsanaError: Not Found\").checkEq(path, \"/portfolio_memberships/com.asana.errors.RetryableAsanaError: Not Found\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "PortfolioMembershipsBase",
        "index": 92,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 36,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/portfolio_memberships/{portfolio_membership_gid}\".replace(\"{portfolio_membership_gid}\", portfolioMembershipGid);",
        "tgt_lineno": 31
    },
    {
        "code": "new Here(\"Randoop\", 87).given(portfolioGid, \"com.asana.errors.RetryableAsanaError: Not Found\").checkEq(path, \"/portfolios/com.asana.errors.RetryableAsanaError: Not Found/portfolio_memberships\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "PortfolioMembershipsBase",
        "index": 93,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 82,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/portfolios/{portfolio_gid}/portfolio_memberships\".replace(\"{portfolio_gid}\", portfolioGid);",
        "tgt_lineno": 87
    },
    {
        "code": "new Here(\"Randoop\", 24).given(project, \"Payment Required\").checkEq(path, \"/projects/Payment Required/sections\");",
        "context": "",
        "context_loc": 0,
        "filename": "Sections",
        "index": 94,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 27,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/projects/%s/sections\", project);",
        "tgt_lineno": 24
    },
    {
        "code": "new Here(\"Randoop\", 36).given(project, \"DELETE\").checkEq(path, \"/projects/DELETE/sections\");",
        "context": "",
        "context_loc": 0,
        "filename": "Sections",
        "index": 95,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 39,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/projects/%s/sections\", project);",
        "tgt_lineno": 36
    },
    {
        "code": "new Here(\"Randoop\", 48).given(section, \"com.asana.errors.RetryableAsanaError: Not Found\").checkEq(path, \"/sections/com.asana.errors.RetryableAsanaError: Not Found\");",
        "context": "",
        "context_loc": 0,
        "filename": "Sections",
        "index": 96,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 51,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/sections/%s\", section);",
        "tgt_lineno": 48
    },
    {
        "code": "new Here(\"Randoop\", 69).given(section, \"\").checkEq(path, \"/sections/\");",
        "context": "",
        "context_loc": 0,
        "filename": "Sections",
        "index": 97,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 72,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/sections/%s\", section);",
        "tgt_lineno": 69
    },
    {
        "code": "new Here(\"Randoop\", 88).given(section, \"Not Found\").checkEq(path, \"/sections/Not Found\");",
        "context": "",
        "context_loc": 0,
        "filename": "Sections",
        "index": 98,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 91,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/sections/%s\", section);",
        "tgt_lineno": 88
    },
    {
        "code": "new Here(\"Randoop\", 104).given(section, \"Not Found\").checkEq(path, \"/sections/Not Found/addTask\");",
        "context": "",
        "context_loc": 0,
        "filename": "Sections",
        "index": 99,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 107,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/sections/%s/addTask\", section);",
        "tgt_lineno": 104
    },
    {
        "code": "new Here(\"Randoop\", 123).given(project, \"urn:ietf:wg:oauth:2.0:oob\").checkEq(path, \"/projects/urn:ietf:wg:oauth:2.0:oob/sections/insert\");",
        "context": "",
        "context_loc": 0,
        "filename": "Sections",
        "index": 100,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 126,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/projects/%s/sections/insert\", project);",
        "tgt_lineno": 123
    },
    {
        "code": "new Here(\"Randoop\", 52).given(workspaceGid, \"Sync token invalid or too old\").checkEq(path, \"/workspaces/Sync token invalid or too old/tags\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "TagsBase",
        "index": 101,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 54,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/workspaces/{workspace_gid}/tags\".replace(\"{workspace_gid}\", workspaceGid);",
        "tgt_lineno": 52
    },
    {
        "code": "new Here(\"Randoop\", 76).given(tagGid, \"\").checkEq(path, \"/tags/\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "TagsBase",
        "index": 102,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 76,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/tags/{tag_gid}\".replace(\"{tag_gid}\", tagGid);",
        "tgt_lineno": 76
    },
    {
        "code": "new Here(\"Randoop\", 102).given(tagGid, \"Not Found\").checkEq(path, \"/tags/Not Found\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "TagsBase",
        "index": 103,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 98,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/tags/{tag_gid}\".replace(\"{tag_gid}\", tagGid);",
        "tgt_lineno": 102
    },
    {
        "code": "new Here(\"Randoop\", 155).given(taskGid, \"urn:ietf:wg:oauth:2.0:oob\").checkEq(path, \"/tasks/urn:ietf:wg:oauth:2.0:oob/tags\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "TagsBase",
        "index": 104,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 141,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/tasks/{task_gid}/tags\".replace(\"{task_gid}\", taskGid);",
        "tgt_lineno": 155
    },
    {
        "code": "new Here(\"Randoop\", 181).given(workspaceGid, \"\").checkEq(path, \"/workspaces//tags\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "TagsBase",
        "index": 105,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 163,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/workspaces/{workspace_gid}/tags\".replace(\"{workspace_gid}\", workspaceGid);",
        "tgt_lineno": 181
    },
    {
        "code": "new Here(\"Randoop\", 207).given(tagGid, \"hi!\").checkEq(path, \"/tags/hi!\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "TagsBase",
        "index": 106,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 185,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/tags/{tag_gid}\".replace(\"{tag_gid}\", tagGid);",
        "tgt_lineno": 207
    },
    {
        "code": "new Here(\"Randoop\", 31).given(teamGid, \"/tasks/Not Found/removeProject\").checkEq(path, \"/teams//tasks/Not Found/removeProject/addUser\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "TeamsBase",
        "index": 107,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 36,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/teams/{team_gid}/addUser\".replace(\"{team_gid}\", teamGid);",
        "tgt_lineno": 31
    },
    {
        "code": "new Here(\"Randoop\", 80).given(teamGid, \"POST\").checkEq(path, \"/teams/POST\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "TeamsBase",
        "index": 108,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 78,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/teams/{team_gid}\".replace(\"{team_gid}\", teamGid);",
        "tgt_lineno": 80
    },
    {
        "code": "new Here(\"Randoop\", 106).given(workspaceGid, \"\").checkEq(path, \"/organizations//teams\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "TeamsBase",
        "index": 109,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 100,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/organizations/{workspace_gid}/teams\".replace(\"{workspace_gid}\", workspaceGid);",
        "tgt_lineno": 106
    },
    {
        "code": "new Here(\"Randoop\", 133).given(userGid, \"hi!\").checkEq(path, \"/users/hi!/teams\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "TeamsBase",
        "index": 110,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 123,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/users/{user_gid}/teams\".replace(\"{user_gid}\", userGid);",
        "tgt_lineno": 133
    },
    {
        "code": "new Here(\"Randoop\", 158).given(teamGid, \"Not Found\").checkEq(path, \"/teams/Not Found/removeUser\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "TeamsBase",
        "index": 111,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 143,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/teams/{team_gid}/removeUser\".replace(\"{team_gid}\", teamGid);",
        "tgt_lineno": 158
    },
    {
        "code": "new Here(\"Randoop\", 31).given(workspaceGid, \"hi!\").checkEq(path, \"/workspaces/hi!/addUser\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "WorkspacesBase",
        "index": 112,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 36,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/workspaces/{workspace_gid}/addUser\".replace(\"{workspace_gid}\", workspaceGid);",
        "tgt_lineno": 31
    },
    {
        "code": "new Here(\"Randoop\", 53).given(workspaceGid, \"\").checkEq(path, \"/workspaces/\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "WorkspacesBase",
        "index": 113,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 56,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/workspaces/{workspace_gid}\".replace(\"{workspace_gid}\", workspaceGid);",
        "tgt_lineno": 53
    },
    {
        "code": "new Here(\"Randoop\", 100).given(workspaceGid, \"hi!\").checkEq(path, \"/workspaces/hi!/removeUser\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "WorkspacesBase",
        "index": 114,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 96,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/workspaces/{workspace_gid}/removeUser\".replace(\"{workspace_gid}\", workspaceGid);",
        "tgt_lineno": 100
    },
    {
        "code": "new Here(\"Randoop\", 122).given(workspaceGid, \"hi!\").checkEq(path, \"/workspaces/hi!\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "WorkspacesBase",
        "index": 115,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 116,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/workspaces/{workspace_gid}\".replace(\"{workspace_gid}\", workspaceGid);",
        "tgt_lineno": 122
    },
    {
        "code": "new Here(\"Randoop\", 35).given(workspaceGid, \"/tasks/Not Found/removeProject\").checkEq(path, \"/workspaces//tasks/Not Found/removeProject/typeahead\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "TypeaheadBase",
        "index": 116,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 40,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/workspaces/{workspace_gid}/typeahead\".replace(\"{workspace_gid}\", workspaceGid);",
        "tgt_lineno": 35
    },
    {
        "code": "new Here(\"Randoop\", 21).given(project, \"DELETE\").checkEq(path, \"/projects/DELETE/custom_field_settings\");",
        "context": "",
        "context_loc": 0,
        "filename": "CustomFieldSettings",
        "index": 117,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 24,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/projects/%s/custom_field_settings\", project);",
        "tgt_lineno": 21
    },
    {
        "code": "new Here(\"Randoop\", 33).given(portfolio, \"https://app.asana.com/-/oauth_authorize?client_id&redirect_uri=hi!&response_type=code&state=Invalid%20Request\").checkEq(path, \"/portfolios/https://app.asana.com/-/oauth_authorize?client_id&redirect_uri=hi!&response_type=code&state=Invalid%20Request/custom_field_settings\");",
        "context": "",
        "context_loc": 0,
        "filename": "CustomFieldSettings",
        "index": 118,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 36,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/portfolios/%s/custom_field_settings\", portfolio);",
        "tgt_lineno": 33
    },
    {
        "code": "new Here(\"Unit\", 38).given(portfolio, \"1\").checkEq(path, \"/portfolios/1\");",
        "context": "",
        "context_loc": 0,
        "filename": "Portfolios",
        "index": 119,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 40,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Unit",
        "stmt": "        String path = String.format(\"/portfolios/%s\", portfolio);",
        "tgt_lineno": 38
    },
    {
        "code": "new Here(\"Randoop\", 54).given(portfolio, \"Rate Limit Enforced\").checkEq(path, \"/portfolios/Rate Limit Enforced\");",
        "context": "",
        "context_loc": 0,
        "filename": "Portfolios",
        "index": 120,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 56,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/portfolios/%s\", portfolio);",
        "tgt_lineno": 54
    },
    {
        "code": "new Here(\"Randoop\", 69).given(portfolio, \"https://app.asana.com/-/oauth_authorize?client_id&redirect_uri=hi!&response_type=code&state=Invalid%20Request\").checkEq(path, \"/portfolios/https://app.asana.com/-/oauth_authorize?client_id&redirect_uri=hi!&response_type=code&state=Invalid%20Request\");",
        "context": "",
        "context_loc": 0,
        "filename": "Portfolios",
        "index": 121,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 71,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/portfolios/%s\", portfolio);",
        "tgt_lineno": 69
    },
    {
        "code": "new Here(\"Randoop\", 92).given(portfolio, \"\").checkEq(path, \"/portfolios//items\");",
        "context": "",
        "context_loc": 0,
        "filename": "Portfolios",
        "index": 122,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 93,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/portfolios/%s/items\", portfolio);",
        "tgt_lineno": 92
    },
    {
        "code": "new Here(\"Randoop\", 106).given(portfolio, \"/tasks/Not Found/removeProject\").checkEq(path, \"/portfolios//tasks/Not Found/removeProject/addItem\");",
        "context": "",
        "context_loc": 0,
        "filename": "Portfolios",
        "index": 123,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 107,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/portfolios/%s/addItem\", portfolio);",
        "tgt_lineno": 106
    },
    {
        "code": "new Here(\"Randoop\", 120).given(portfolio, \"200\").checkEq(path, \"/portfolios/200/removeItem\");",
        "context": "",
        "context_loc": 0,
        "filename": "Portfolios",
        "index": 124,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 121,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/portfolios/%s/removeItem\", portfolio);",
        "tgt_lineno": 120
    },
    {
        "code": "new Here(\"Randoop\", 132).given(portfolio, \"\").checkEq(path, \"/portfolios//addMembers\");",
        "context": "",
        "context_loc": 0,
        "filename": "Portfolios",
        "index": 125,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 133,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/portfolios/%s/addMembers\", portfolio);",
        "tgt_lineno": 132
    },
    {
        "code": "new Here(\"Randoop\", 144).given(portfolio, \"200\").checkEq(path, \"/portfolios/200/removeMembers\");",
        "context": "",
        "context_loc": 0,
        "filename": "Portfolios",
        "index": 126,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 145,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/portfolios/%s/removeMembers\", portfolio);",
        "tgt_lineno": 144
    },
    {
        "code": "new Here(\"Randoop\", 156).given(portfolio, \"Forbidden\").checkEq(path, \"/portfolios/Forbidden/custom_field_settings\");",
        "context": "",
        "context_loc": 0,
        "filename": "Portfolios",
        "index": 127,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 157,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/portfolios/%s/custom_field_settings\", portfolio);",
        "tgt_lineno": 156
    },
    {
        "code": "new Here(\"Randoop\", 169).given(portfolio, \"com.asana.errors.InvalidTokenError: Sync token invalid or too old\").checkEq(path, \"/portfolios/com.asana.errors.InvalidTokenError: Sync token invalid or too old/addCustomFieldSetting\");",
        "context": "",
        "context_loc": 0,
        "filename": "Portfolios",
        "index": 128,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 170,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/portfolios/%s/addCustomFieldSetting\", portfolio);",
        "tgt_lineno": 169
    },
    {
        "code": "new Here(\"Randoop\", 182).given(portfolio, \"com.asana.errors.InvalidRequestError: Invalid Request\").checkEq(path, \"/portfolios/com.asana.errors.InvalidRequestError: Invalid Request/removeCustomFieldSetting\");",
        "context": "",
        "context_loc": 0,
        "filename": "Portfolios",
        "index": 129,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 183,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/portfolios/%s/removeCustomFieldSetting\", portfolio);",
        "tgt_lineno": 182
    },
    {
        "code": "new Here(\"Randoop\", 36).given(customField, \"com.asana.errors.RetryableAsanaError: Not Found\").checkEq(path, \"/custom_fields/com.asana.errors.RetryableAsanaError: Not Found\");",
        "context": "",
        "context_loc": 0,
        "filename": "CustomFields",
        "index": 130,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 38,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/custom_fields/%s\", customField);",
        "tgt_lineno": 36
    },
    {
        "code": "new Here(\"Randoop\", 48).given(workspace, \"https://app.asana.com/-/oauth_authorize?client_id&redirect_uri=hi!&response_type=code&state=Invalid%20Request\").checkEq(path, \"/workspaces/https://app.asana.com/-/oauth_authorize?client_id&redirect_uri=hi!&response_type=code&state=Invalid%20Request/custom_fields\");",
        "context": "",
        "context_loc": 0,
        "filename": "CustomFields",
        "index": 131,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 50,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/workspaces/%s/custom_fields\", workspace);",
        "tgt_lineno": 48
    },
    {
        "code": "new Here(\"Randoop\", 68).given(customField, \"com.asana.errors.RetryableAsanaError: Not Found\").checkEq(path, \"/custom_fields/com.asana.errors.RetryableAsanaError: Not Found\");",
        "context": "",
        "context_loc": 0,
        "filename": "CustomFields",
        "index": 132,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 70,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/custom_fields/%s\", customField);",
        "tgt_lineno": 68
    },
    {
        "code": "new Here(\"Randoop\", 84).given(customField, \"hi!\").checkEq(path, \"/custom_fields/hi!\");",
        "context": "",
        "context_loc": 0,
        "filename": "CustomFields",
        "index": 133,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 86,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/custom_fields/%s\", customField);",
        "tgt_lineno": 84
    },
    {
        "code": "new Here(\"Randoop\", 100).given(customField, \"/tasks/Not Found/removeProject\").checkEq(path, \"/custom_fields//tasks/Not Found/removeProject/enum_options\");",
        "context": "",
        "context_loc": 0,
        "filename": "CustomFields",
        "index": 134,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 102,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/custom_fields/%s/enum_options\", customField);",
        "tgt_lineno": 100
    },
    {
        "code": "new Here(\"Randoop\", 114).given(customField, \"Sync token invalid or too old\").checkEq(path, \"/custom_fields/Sync token invalid or too old/enum_options/insert\");",
        "context": "",
        "context_loc": 0,
        "filename": "CustomFields",
        "index": 135,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 116,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/custom_fields/%s/enum_options/insert\", customField);",
        "tgt_lineno": 114
    },
    {
        "code": "new Here(\"Randoop\", 58).given(customFieldGid, \"urn:ietf:wg:oauth:2.0:oob\").checkEq(path, \"/custom_fields/urn:ietf:wg:oauth:2.0:oob/enum_options\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "CustomFieldsBase",
        "index": 136,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 58,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/custom_fields/{custom_field_gid}/enum_options\".replace(\"{custom_field_gid}\", customFieldGid);",
        "tgt_lineno": 58
    },
    {
        "code": "new Here(\"Randoop\", 82).given(customFieldGid, \"hi!\").checkEq(path, \"/custom_fields/hi!\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "CustomFieldsBase",
        "index": 137,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 78,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/custom_fields/{custom_field_gid}\".replace(\"{custom_field_gid}\", customFieldGid);",
        "tgt_lineno": 82
    },
    {
        "code": "new Here(\"Randoop\", 104).given(customFieldGid, \"https://app.asana.com/-/oauth_authorize?client_id&redirect_uri=hi!&response_type=code&state=Invalid%20Request\").checkEq(path, \"/custom_fields/https://app.asana.com/-/oauth_authorize?client_id&redirect_uri=hi!&response_type=code&state=Invalid%20Request\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "CustomFieldsBase",
        "index": 138,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 98,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/custom_fields/{custom_field_gid}\".replace(\"{custom_field_gid}\", customFieldGid);",
        "tgt_lineno": 104
    },
    {
        "code": "new Here(\"Randoop\", 128).given(workspaceGid, \"\").checkEq(path, \"/workspaces//custom_fields\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "CustomFieldsBase",
        "index": 139,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 120,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/workspaces/{workspace_gid}/custom_fields\".replace(\"{workspace_gid}\", workspaceGid);",
        "tgt_lineno": 128
    },
    {
        "code": "new Here(\"Randoop\", 152).given(customFieldGid, \"Sync token invalid or too old\").checkEq(path, \"/custom_fields/Sync token invalid or too old/enum_options/insert\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "CustomFieldsBase",
        "index": 140,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 140,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/custom_fields/{custom_field_gid}/enum_options/insert\".replace(\"{custom_field_gid}\", customFieldGid);",
        "tgt_lineno": 152
    },
    {
        "code": "new Here(\"Randoop\", 174).given(customFieldGid, \"urn:ietf:wg:oauth:2.0:oob\").checkEq(path, \"/custom_fields/urn:ietf:wg:oauth:2.0:oob\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "CustomFieldsBase",
        "index": 141,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 160,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/custom_fields/{custom_field_gid}\".replace(\"{custom_field_gid}\", customFieldGid);",
        "tgt_lineno": 174
    },
    {
        "code": "new Here(\"Randoop\", 196).given(enumOptionGid, \"POST\").checkEq(path, \"/enum_options/POST\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "CustomFieldsBase",
        "index": 142,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 180,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/enum_options/{enum_option_gid}\".replace(\"{enum_option_gid}\", enumOptionGid);",
        "tgt_lineno": 196
    },
    {
        "code": "new Here(\"Randoop\", 45).given(workspace, \"NoAuthorizationError\").checkEq(path, \"/workspaces/NoAuthorizationError/projects\");",
        "context": "",
        "context_loc": 0,
        "filename": "Projects",
        "index": 143,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 47,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/workspaces/%s/projects\", workspace);",
        "tgt_lineno": 45
    },
    {
        "code": "new Here(\"Randoop\", 59).given(team, \"https://app.asana.com/-/oauth_authorize?client_id&redirect_uri=hi!&response_type=code&state=404\").checkEq(path, \"/teams/https://app.asana.com/-/oauth_authorize?client_id&redirect_uri=hi!&response_type=code&state=404/projects\");",
        "context": "",
        "context_loc": 0,
        "filename": "Projects",
        "index": 144,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 61,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/teams/%s/projects\", team);",
        "tgt_lineno": 59
    },
    {
        "code": "new Here(\"Unit\", 71).given(project, \"1\").checkEq(path, \"/projects/1\");",
        "context": "",
        "context_loc": 0,
        "filename": "Projects",
        "index": 145,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 73,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Unit",
        "stmt": "        String path = String.format(\"/projects/%s\", project);",
        "tgt_lineno": 71
    },
    {
        "code": "new Here(\"Randoop\", 91).given(project, \"Not Found\").checkEq(path, \"/projects/Not Found\");",
        "context": "",
        "context_loc": 0,
        "filename": "Projects",
        "index": 146,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 93,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/projects/%s\", project);",
        "tgt_lineno": 91
    },
    {
        "code": "new Here(\"Randoop\", 106).given(project, \"GET\").checkEq(path, \"/projects/GET\");",
        "context": "",
        "context_loc": 0,
        "filename": "Projects",
        "index": 147,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 108,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/projects/%s\", project);",
        "tgt_lineno": 106
    },
    {
        "code": "new Here(\"Randoop\", 129).given(workspace, \"\").checkEq(path, \"/workspaces//projects\");",
        "context": "",
        "context_loc": 0,
        "filename": "Projects",
        "index": 148,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 130,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/workspaces/%s/projects\", workspace);",
        "tgt_lineno": 129
    },
    {
        "code": "new Here(\"Randoop\", 141).given(team, \"DELETE\").checkEq(path, \"/teams/DELETE/projects\");",
        "context": "",
        "context_loc": 0,
        "filename": "Projects",
        "index": 149,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 142,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/teams/%s/projects\", team);",
        "tgt_lineno": 141
    },
    {
        "code": "new Here(\"Randoop\", 154).given(project, \"404\").checkEq(path, \"/projects/404/tasks\");",
        "context": "",
        "context_loc": 0,
        "filename": "Projects",
        "index": 150,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 155,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/projects/%s/tasks\", project);",
        "tgt_lineno": 154
    },
    {
        "code": "new Here(\"Randoop\", 168).given(project, \"com.asana.errors.RetryableAsanaError: Not Found\").checkEq(path, \"/projects/com.asana.errors.RetryableAsanaError: Not Found/addFollowers\");",
        "context": "",
        "context_loc": 0,
        "filename": "Projects",
        "index": 151,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 169,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/projects/%s/addFollowers\", project);",
        "tgt_lineno": 168
    },
    {
        "code": "new Here(\"Randoop\", 181).given(project, \"Sync token invalid or too old\").checkEq(path, \"/projects/Sync token invalid or too old/removeFollowers\");",
        "context": "",
        "context_loc": 0,
        "filename": "Projects",
        "index": 152,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 182,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/projects/%s/removeFollowers\", project);",
        "tgt_lineno": 181
    },
    {
        "code": "new Here(\"Randoop\", 193).given(project, \"hi!\").checkEq(path, \"/projects/hi!/addMembers\");",
        "context": "",
        "context_loc": 0,
        "filename": "Projects",
        "index": 153,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 194,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/projects/%s/addMembers\", project);",
        "tgt_lineno": 193
    },
    {
        "code": "new Here(\"Randoop\", 205).given(project, \"NoAuthorizationError\").checkEq(path, \"/projects/NoAuthorizationError/removeMembers\");",
        "context": "",
        "context_loc": 0,
        "filename": "Projects",
        "index": 154,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 206,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/projects/%s/removeMembers\", project);",
        "tgt_lineno": 205
    },
    {
        "code": "new Here(\"Randoop\", 217).given(project, \"com.asana.errors.InvalidRequestError: Invalid Request\").checkEq(path, \"/projects/com.asana.errors.InvalidRequestError: Invalid Request/addCustomFieldSetting\");",
        "context": "",
        "context_loc": 0,
        "filename": "Projects",
        "index": 155,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 218,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/projects/%s/addCustomFieldSetting\", project);",
        "tgt_lineno": 217
    },
    {
        "code": "new Here(\"Randoop\", 229).given(project, \"urn:ietf:wg:oauth:2.0:oob\").checkEq(path, \"/projects/urn:ietf:wg:oauth:2.0:oob/removeCustomFieldSetting\");",
        "context": "",
        "context_loc": 0,
        "filename": "Projects",
        "index": 156,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 230,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/projects/%s/removeCustomFieldSetting\", project);",
        "tgt_lineno": 229
    },
    {
        "code": "new Here(\"Randoop\", 31).given(taskGid, \"\").checkEq(path, \"/tasks//addDependencies\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "TasksBase",
        "index": 157,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 36,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/tasks/{task_gid}/addDependencies\".replace(\"{task_gid}\", taskGid);",
        "tgt_lineno": 31
    },
    {
        "code": "new Here(\"Randoop\", 53).given(taskGid, \"hi!\").checkEq(path, \"/tasks/hi!/addDependents\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "TasksBase",
        "index": 158,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 56,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/tasks/{task_gid}/addDependents\".replace(\"{task_gid}\", taskGid);",
        "tgt_lineno": 53
    },
    {
        "code": "new Here(\"Randoop\", 75).given(taskGid, \"com.asana.errors.RateLimitEnforcedError: Rate Limit Enforced\").checkEq(path, \"/tasks/com.asana.errors.RateLimitEnforcedError: Rate Limit Enforced/addFollowers\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "TasksBase",
        "index": 159,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 76,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/tasks/{task_gid}/addFollowers\".replace(\"{task_gid}\", taskGid);",
        "tgt_lineno": 75
    },
    {
        "code": "new Here(\"Randoop\", 97).given(taskGid, \"POST\").checkEq(path, \"/tasks/POST/addProject\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "TasksBase",
        "index": 160,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 96,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/tasks/{task_gid}/addProject\".replace(\"{task_gid}\", taskGid);",
        "tgt_lineno": 97
    },
    {
        "code": "new Here(\"Randoop\", 119).given(taskGid, \"Not Found\").checkEq(path, \"/tasks/Not Found/addTag\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "TasksBase",
        "index": 161,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 116,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/tasks/{task_gid}/addTag\".replace(\"{task_gid}\", taskGid);",
        "tgt_lineno": 119
    },
    {
        "code": "new Here(\"Randoop\", 141).given(taskGid, \"\").checkEq(path, \"/tasks//subtasks\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "TasksBase",
        "index": 162,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 136,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/tasks/{task_gid}/subtasks\".replace(\"{task_gid}\", taskGid);",
        "tgt_lineno": 141
    },
    {
        "code": "new Here(\"Randoop\", 184).given(taskGid, \"\").checkEq(path, \"/tasks/\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "TasksBase",
        "index": 163,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 174,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/tasks/{task_gid}\".replace(\"{task_gid}\", taskGid);",
        "tgt_lineno": 184
    },
    {
        "code": "new Here(\"Randoop\", 206).given(taskGid, \"urn:ietf:wg:oauth:2.0:oob\").checkEq(path, \"/tasks/urn:ietf:wg:oauth:2.0:oob/duplicate\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "TasksBase",
        "index": 164,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 194,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/tasks/{task_gid}/duplicate\".replace(\"{task_gid}\", taskGid);",
        "tgt_lineno": 206
    },
    {
        "code": "new Here(\"Randoop\", 230).given(taskGid, \"Server Error\").checkEq(path, \"/tasks/Server Error/dependencies\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "TasksBase",
        "index": 165,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 216,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/tasks/{task_gid}/dependencies\".replace(\"{task_gid}\", taskGid);",
        "tgt_lineno": 230
    },
    {
        "code": "new Here(\"Randoop\", 256).given(taskGid, \"\").checkEq(path, \"/tasks//dependents\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "TasksBase",
        "index": 166,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 238,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/tasks/{task_gid}/dependents\".replace(\"{task_gid}\", taskGid);",
        "tgt_lineno": 256
    },
    {
        "code": "new Here(\"Randoop\", 282).given(taskGid, \"urn:ietf:wg:oauth:2.0:oob\").checkEq(path, \"/tasks/urn:ietf:wg:oauth:2.0:oob/subtasks\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "TasksBase",
        "index": 167,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 260,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/tasks/{task_gid}/subtasks\".replace(\"{task_gid}\", taskGid);",
        "tgt_lineno": 282
    },
    {
        "code": "new Here(\"Randoop\", 306).given(taskGid, \"Forbidden\").checkEq(path, \"/tasks/Forbidden\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "TasksBase",
        "index": 168,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 280,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/tasks/{task_gid}\".replace(\"{task_gid}\", taskGid);",
        "tgt_lineno": 306
    },
    {
        "code": "new Here(\"Randoop\", 367).given(projectGid, \"\").checkEq(path, \"/projects//tasks\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "TasksBase",
        "index": 169,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 328,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/projects/{project_gid}/tasks\".replace(\"{project_gid}\", projectGid);",
        "tgt_lineno": 367
    },
    {
        "code": "new Here(\"Randoop\", 393).given(sectionGid, \"Sync token invalid or too old\").checkEq(path, \"/sections/Sync token invalid or too old/tasks\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "TasksBase",
        "index": 170,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 350,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/sections/{section_gid}/tasks\".replace(\"{section_gid}\", sectionGid);",
        "tgt_lineno": 393
    },
    {
        "code": "new Here(\"Randoop\", 419).given(tagGid, \"hi!\").checkEq(path, \"/tags/hi!/tasks\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "TasksBase",
        "index": 171,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 372,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/tags/{tag_gid}/tasks\".replace(\"{tag_gid}\", tagGid);",
        "tgt_lineno": 419
    },
    {
        "code": "new Here(\"Randoop\", 446).given(userTaskListGid, \"/tasks/Not Found/removeProject\").checkEq(path, \"/user_task_lists//tasks/Not Found/removeProject/tasks\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "TasksBase",
        "index": 172,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 395,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/user_task_lists/{user_task_list_gid}/tasks\".replace(\"{user_task_list_gid}\", userTaskListGid);",
        "tgt_lineno": 446
    },
    {
        "code": "new Here(\"Randoop\", 471).given(taskGid, \"hi!\").checkEq(path, \"/tasks/hi!/removeDependencies\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "TasksBase",
        "index": 173,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 415,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/tasks/{task_gid}/removeDependencies\".replace(\"{task_gid}\", taskGid);",
        "tgt_lineno": 471
    },
    {
        "code": "new Here(\"Randoop\", 493).given(taskGid, \"Not Found\").checkEq(path, \"/tasks/Not Found/removeDependents\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "TasksBase",
        "index": 174,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 435,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/tasks/{task_gid}/removeDependents\".replace(\"{task_gid}\", taskGid);",
        "tgt_lineno": 493
    },
    {
        "code": "new Here(\"Randoop\", 515).given(taskGid, \"Sync token invalid or too old\").checkEq(path, \"/tasks/Sync token invalid or too old/removeFollowers\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "TasksBase",
        "index": 175,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 455,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/tasks/{task_gid}/removeFollowers\".replace(\"{task_gid}\", taskGid);",
        "tgt_lineno": 515
    },
    {
        "code": "new Here(\"Randoop\", 537).given(taskGid, \"Not Found\").checkEq(path, \"/tasks/Not Found/removeProject\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "TasksBase",
        "index": 176,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 475,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/tasks/{task_gid}/removeProject\".replace(\"{task_gid}\", taskGid);",
        "tgt_lineno": 537
    },
    {
        "code": "new Here(\"Randoop\", 559).given(taskGid, \"\").checkEq(path, \"/tasks//removeTag\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "TasksBase",
        "index": 177,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 495,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/tasks/{task_gid}/removeTag\".replace(\"{task_gid}\", taskGid);",
        "tgt_lineno": 559
    },
    {
        "code": "new Here(\"Randoop\", 633).given(workspaceGid, \"hi!\").checkEq(path, \"/workspaces/hi!/tasks/search\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "TasksBase",
        "index": 178,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 567,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/workspaces/{workspace_gid}/tasks/search\".replace(\"{workspace_gid}\", workspaceGid);",
        "tgt_lineno": 633
    },
    {
        "code": "new Here(\"Randoop\", 707).given(taskGid, \"com.asana.errors.RateLimitEnforcedError: Rate Limit Enforced\").checkEq(path, \"/tasks/com.asana.errors.RateLimitEnforcedError: Rate Limit Enforced/setParent\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "TasksBase",
        "index": 179,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 587,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/tasks/{task_gid}/setParent\".replace(\"{task_gid}\", taskGid);",
        "tgt_lineno": 707
    },
    {
        "code": "new Here(\"Randoop\", 729).given(taskGid, \"\").checkEq(path, \"/tasks/\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "TasksBase",
        "index": 180,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 607,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/tasks/{task_gid}\".replace(\"{task_gid}\", taskGid);",
        "tgt_lineno": 729
    },
    {
        "code": "new Here(\"Randoop\", 15).given(workspace, \"https://app.asana.com/-/oauth_authorize?client_id&redirect_uri=hi!&response_type=code&state=Server%20Error\").checkEq(path, \"/workspaces/https://app.asana.com/-/oauth_authorize?client_id&redirect_uri=hi!&response_type=code&state=Server%20Error/typeahead\");",
        "context": "return request.query(\"type\", \"task\");",
        "context_loc": 1,
        "filename": "Workspaces",
        "index": 181,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 19,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/workspaces/%s/typeahead\", workspace);",
        "tgt_lineno": 15
    },
    {
        "code": "new Here(\"Randoop\", 21).given(workspace, \"200\").checkEq(path, \"/workspaces/200/typeahead\");",
        "context": "return request.query(\"type\", \"user\");",
        "context_loc": 1,
        "filename": "Workspaces",
        "index": 182,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 26,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/workspaces/%s/typeahead\", workspace);",
        "tgt_lineno": 21
    },
    {
        "code": "new Here(\"Randoop\", 27).given(workspace, \"com.asana.errors.RetryableAsanaError: Not Found\").checkEq(path, \"/workspaces/com.asana.errors.RetryableAsanaError: Not Found/typeahead\");",
        "context": "return request.query(\"type\", \"project\");",
        "context_loc": 1,
        "filename": "Workspaces",
        "index": 183,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 33,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/workspaces/%s/typeahead\", workspace);",
        "tgt_lineno": 27
    },
    {
        "code": "new Here(\"Randoop\", 33).given(workspace, \"Not Found\").checkEq(path, \"/workspaces/Not Found/typeahead\");",
        "context": "return request.query(\"type\", \"tag\");",
        "context_loc": 1,
        "filename": "Workspaces",
        "index": 184,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 40,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/workspaces/%s/typeahead\", workspace);",
        "tgt_lineno": 33
    },
    {
        "code": "new Here(\"Unit\", 46).given(workspace, \"1\").checkEq(path, \"/workspaces/1\");",
        "context": "",
        "context_loc": 0,
        "filename": "Workspaces",
        "index": 185,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 53,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Unit",
        "stmt": "        String path = String.format(\"/workspaces/%s\", workspace);",
        "tgt_lineno": 46
    },
    {
        "code": "new Here(\"Randoop\", 74).given(workspace, \"hi!\").checkEq(path, \"/workspaces/hi!\");",
        "context": "",
        "context_loc": 0,
        "filename": "Workspaces",
        "index": 186,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 80,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/workspaces/%s\", workspace);",
        "tgt_lineno": 74
    },
    {
        "code": "new Here(\"Randoop\", 90).given(workspace, \"Forbidden\").checkEq(path, \"/workspaces/Forbidden/typeahead\");",
        "context": "",
        "context_loc": 0,
        "filename": "Workspaces",
        "index": 187,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 96,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/workspaces/%s/typeahead\", workspace);",
        "tgt_lineno": 90
    },
    {
        "code": "new Here(\"Randoop\", 103).given(workspace, \"https://app.asana.com/-/oauth_authorize?client_id&redirect_uri=hi!&response_type=code&state=com.asana.errors.RateLimitEnforcedError:%20Rate%20Limit%20Enforced\").checkEq(path, \"/workspaces/https://app.asana.com/-/oauth_authorize?client_id&redirect_uri=hi!&response_type=code&state=com.asana.errors.RateLimitEnforcedError:%20Rate%20Limit%20Enforced/addUser\");",
        "context": "",
        "context_loc": 0,
        "filename": "Workspaces",
        "index": 188,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 109,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/workspaces/%s/addUser\", workspace);",
        "tgt_lineno": 103
    },
    {
        "code": "new Here(\"Randoop\", 116).given(workspace, \"Not Found\").checkEq(path, \"/workspaces/Not Found/removeUser\");",
        "context": "",
        "context_loc": 0,
        "filename": "Workspaces",
        "index": 189,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 122,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/workspaces/%s/removeUser\", workspace);",
        "tgt_lineno": 116
    },
    {
        "code": "new Here(\"Randoop\", 22).given(project, \"Not Found\").checkEq(path, \"/projects/Not Found/project_memberships\");",
        "context": "",
        "context_loc": 0,
        "filename": "ProjectMemberships",
        "index": 190,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 25,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/projects/%s/project_memberships\", project);",
        "tgt_lineno": 22
    },
    {
        "code": "new Here(\"Unit\", 34).given(projectMembership, \"1\").checkEq(path, \"/project_memberships/1\");",
        "context": "",
        "context_loc": 0,
        "filename": "ProjectMemberships",
        "index": 191,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 37,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Unit",
        "stmt": "        String path = String.format(\"/project_memberships/%s\", projectMembership);",
        "tgt_lineno": 34
    },
    {
        "code": "new Here(\"Unit\", 35).given(user, \"1\").checkEq(path, \"/users/1\");",
        "context": "",
        "context_loc": 0,
        "filename": "Users",
        "index": 192,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 37,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Unit",
        "stmt": "        String path = String.format(\"/users/%s\", user);",
        "tgt_lineno": 35
    },
    {
        "code": "new Here(\"Randoop\", 50).given(user, \"Not Found\").checkEq(path, \"/users/Not Found/favorites\");",
        "context": "",
        "context_loc": 0,
        "filename": "Users",
        "index": 193,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 52,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/users/%s/favorites\", user);",
        "tgt_lineno": 50
    },
    {
        "code": "new Here(\"Randoop\", 63).given(workspace, \"POST\").checkEq(path, \"/workspaces/POST/users\");",
        "context": "",
        "context_loc": 0,
        "filename": "Users",
        "index": 194,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 65,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/workspaces/%s/users\", workspace);",
        "tgt_lineno": 63
    },
    {
        "code": "new Here(\"Randoop\", 22).given(task, \"Forbidden\").checkEq(path, \"/tasks/Forbidden/stories\");",
        "context": "",
        "context_loc": 0,
        "filename": "Stories",
        "index": 195,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 25,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/tasks/%s/stories\", task);",
        "tgt_lineno": 22
    },
    {
        "code": "new Here(\"Unit\", 34).given(story, \"1\").checkEq(path, \"/stories/1\");",
        "context": "",
        "context_loc": 0,
        "filename": "Stories",
        "index": 196,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 37,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Unit",
        "stmt": "        String path = String.format(\"/stories/%s\", story);",
        "tgt_lineno": 34
    },
    {
        "code": "new Here(\"Randoop\", 50).given(task, \"Not Found\").checkEq(path, \"/tasks/Not Found/stories\");",
        "context": "",
        "context_loc": 0,
        "filename": "Stories",
        "index": 197,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 53,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/tasks/%s/stories\", task);",
        "tgt_lineno": 50
    },
    {
        "code": "new Here(\"Randoop\", 64).given(story, \"Invalid Request\").checkEq(path, \"/stories/Invalid Request\");",
        "context": "",
        "context_loc": 0,
        "filename": "Stories",
        "index": 198,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 67,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/stories/%s\", story);",
        "tgt_lineno": 64
    },
    {
        "code": "new Here(\"Randoop\", 76).given(story, \"POST\").checkEq(path, \"/stories/POST\");",
        "context": "",
        "context_loc": 0,
        "filename": "Stories",
        "index": 199,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 79,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/stories/%s\", story);",
        "tgt_lineno": 76
    },
    {
        "code": "new Here(\"Unit\", 22).given(team, \"1\").checkEq(path, \"/teams/1\");",
        "context": "",
        "context_loc": 0,
        "filename": "Teams",
        "index": 200,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 25,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Unit",
        "stmt": "        String path = String.format(\"/teams/%s\", team);",
        "tgt_lineno": 22
    },
    {
        "code": "new Here(\"Randoop\", 35).given(organization, \"Sync token invalid or too old\").checkEq(path, \"/organizations/Sync token invalid or too old/teams\");",
        "context": "",
        "context_loc": 0,
        "filename": "Teams",
        "index": 201,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 38,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/organizations/%s/teams\", organization);",
        "tgt_lineno": 35
    },
    {
        "code": "new Here(\"Randoop\", 49).given(user, \"GET\").checkEq(path, \"/users/GET/teams\");",
        "context": "",
        "context_loc": 0,
        "filename": "Teams",
        "index": 202,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 52,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/users/%s/teams\", user);",
        "tgt_lineno": 49
    },
    {
        "code": "new Here(\"Randoop\", 61).given(team, \"\").checkEq(path, \"/teams//users\");",
        "context": "",
        "context_loc": 0,
        "filename": "Teams",
        "index": 203,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 64,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/teams/%s/users\", team);",
        "tgt_lineno": 61
    },
    {
        "code": "new Here(\"Randoop\", 76).given(team, \"Sync token invalid or too old\").checkEq(path, \"/teams/Sync token invalid or too old/addUser\");",
        "context": "",
        "context_loc": 0,
        "filename": "Teams",
        "index": 204,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 79,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/teams/%s/addUser\", team);",
        "tgt_lineno": 76
    },
    {
        "code": "new Here(\"Randoop\", 89).given(team, \"Not Found\").checkEq(path, \"/teams/Not Found/removeUser\");",
        "context": "",
        "context_loc": 0,
        "filename": "Teams",
        "index": 205,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 92,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/teams/%s/removeUser\", team);",
        "tgt_lineno": 89
    },
    {
        "code": "new Here(\"Randoop\", 31).given(projectGid, \"POST\").checkEq(path, \"/projects/POST/project_briefs\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "ProjectBriefsBase",
        "index": 206,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 36,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/projects/{project_gid}/project_briefs\".replace(\"{project_gid}\", projectGid);",
        "tgt_lineno": 31
    },
    {
        "code": "new Here(\"Randoop\", 53).given(projectBriefGid, \"Invalid Request\").checkEq(path, \"/project_briefs/Invalid Request\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "ProjectBriefsBase",
        "index": 207,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 56,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/project_briefs/{project_brief_gid}\".replace(\"{project_brief_gid}\", projectBriefGid);",
        "tgt_lineno": 53
    },
    {
        "code": "new Here(\"Randoop\", 75).given(projectBriefGid, \"Sync token invalid or too old\").checkEq(path, \"/project_briefs/Sync token invalid or too old\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "ProjectBriefsBase",
        "index": 208,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 76,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/project_briefs/{project_brief_gid}\".replace(\"{project_brief_gid}\", projectBriefGid);",
        "tgt_lineno": 75
    },
    {
        "code": "new Here(\"Randoop\", 97).given(projectBriefGid, \"\").checkEq(path, \"/project_briefs/\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "ProjectBriefsBase",
        "index": 209,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 96,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/project_briefs/{project_brief_gid}\".replace(\"{project_brief_gid}\", projectBriefGid);",
        "tgt_lineno": 97
    },
    {
        "code": "new Here(\"Randoop\", 21).given(organizationExport, \"Sync token invalid or too old\").checkEq(path, \"/organization_exports/Sync token invalid or too old\");",
        "context": "",
        "context_loc": 0,
        "filename": "OrganizationExports",
        "index": 210,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 24,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/organization_exports/%s\", organizationExport);",
        "tgt_lineno": 21
    },
    {
        "code": "new Here(\"Randoop\", 32).given(attachmentGid, \"hi!\").checkEq(path, \"/attachments/hi!\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "AttachmentsBase",
        "index": 211,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 37,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/attachments/{attachment_gid}\".replace(\"{attachment_gid}\", attachmentGid);",
        "tgt_lineno": 32
    },
    {
        "code": "new Here(\"Randoop\", 54).given(attachmentGid, \"\").checkEq(path, \"/attachments/\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "AttachmentsBase",
        "index": 212,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 57,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/attachments/{attachment_gid}\".replace(\"{attachment_gid}\", attachmentGid);",
        "tgt_lineno": 54
    },
    {
        "code": "new Here(\"Randoop\", 78).given(taskGid, \"Not Found\").checkEq(path, \"/tasks/Not Found/attachments\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "AttachmentsBase",
        "index": 213,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 79,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/tasks/{task_gid}/attachments\".replace(\"{task_gid}\", taskGid);",
        "tgt_lineno": 78
    },
    {
        "code": "new Here(\"Randoop\", 33).given(userGid, \"Forbidden\").checkEq(path, \"/users/Forbidden/favorites\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "UsersBase",
        "index": 214,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 38,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/users/{user_gid}/favorites\".replace(\"{user_gid}\", userGid);",
        "tgt_lineno": 33
    },
    {
        "code": "new Here(\"Randoop\", 57).given(userGid, \"com.asana.errors.RateLimitEnforcedError: Rate Limit Enforced\").checkEq(path, \"/users/com.asana.errors.RateLimitEnforcedError: Rate Limit Enforced\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "UsersBase",
        "index": 215,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 58,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/users/{user_gid}\".replace(\"{user_gid}\", userGid);",
        "tgt_lineno": 57
    },
    {
        "code": "new Here(\"Randoop\", 109).given(teamGid, \"\").checkEq(path, \"/teams//users\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "UsersBase",
        "index": 216,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 101,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/teams/{team_gid}/users\".replace(\"{team_gid}\", teamGid);",
        "tgt_lineno": 109
    },
    {
        "code": "new Here(\"Randoop\", 133).given(workspaceGid, \"Not Found\").checkEq(path, \"/workspaces/Not Found/users\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "UsersBase",
        "index": 217,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 122,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/workspaces/{workspace_gid}/users\".replace(\"{workspace_gid}\", workspaceGid);",
        "tgt_lineno": 133
    },
    {
        "code": "new Here(\"Randoop\", 31).given(sectionGid, \"/tasks/Not Found/removeProject\").checkEq(path, \"/sections//tasks/Not Found/removeProject/addTask\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "SectionsBase",
        "index": 218,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 36,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/sections/{section_gid}/addTask\".replace(\"{section_gid}\", sectionGid);",
        "tgt_lineno": 31
    },
    {
        "code": "new Here(\"Randoop\", 53).given(projectGid, \"\").checkEq(path, \"/projects//sections\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "SectionsBase",
        "index": 219,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 56,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/projects/{project_gid}/sections\".replace(\"{project_gid}\", projectGid);",
        "tgt_lineno": 53
    },
    {
        "code": "new Here(\"Randoop\", 75).given(sectionGid, \"hi!\").checkEq(path, \"/sections/hi!\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "SectionsBase",
        "index": 220,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 76,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/sections/{section_gid}\".replace(\"{section_gid}\", sectionGid);",
        "tgt_lineno": 75
    },
    {
        "code": "new Here(\"Randoop\", 97).given(sectionGid, \"POST\").checkEq(path, \"/sections/POST\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "SectionsBase",
        "index": 221,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 96,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/sections/{section_gid}\".replace(\"{section_gid}\", sectionGid);",
        "tgt_lineno": 97
    },
    {
        "code": "new Here(\"Randoop\", 121).given(projectGid, \"urn:ietf:wg:oauth:2.0:oob\").checkEq(path, \"/projects/urn:ietf:wg:oauth:2.0:oob/sections\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "SectionsBase",
        "index": 222,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 118,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/projects/{project_gid}/sections\".replace(\"{project_gid}\", projectGid);",
        "tgt_lineno": 121
    },
    {
        "code": "new Here(\"Randoop\", 145).given(projectGid, \"\").checkEq(path, \"/projects//sections/insert\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "SectionsBase",
        "index": 223,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 138,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/projects/{project_gid}/sections/insert\".replace(\"{project_gid}\", projectGid);",
        "tgt_lineno": 145
    },
    {
        "code": "new Here(\"Randoop\", 167).given(sectionGid, \"Not Found\").checkEq(path, \"/sections/Not Found\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "SectionsBase",
        "index": 224,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 158,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/sections/{section_gid}\".replace(\"{section_gid}\", sectionGid);",
        "tgt_lineno": 167
    },
    {
        "code": "new Here(\"Randoop\", 52).given(webhookGid, \"Sync token invalid or too old\").checkEq(path, \"/webhooks/Sync token invalid or too old\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "WebhooksBase",
        "index": 225,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 54,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/webhooks/{webhook_gid}\".replace(\"{webhook_gid}\", webhookGid);",
        "tgt_lineno": 52
    },
    {
        "code": "new Here(\"Randoop\", 74).given(webhookGid, \"\").checkEq(path, \"/webhooks/\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "WebhooksBase",
        "index": 226,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 74,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/webhooks/{webhook_gid}\".replace(\"{webhook_gid}\", webhookGid);",
        "tgt_lineno": 74
    },
    {
        "code": "new Here(\"Randoop\", 125).given(webhookGid, \"Not Found\").checkEq(path, \"/webhooks/Not Found\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "WebhooksBase",
        "index": 227,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 116,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/webhooks/{webhook_gid}\".replace(\"{webhook_gid}\", webhookGid);",
        "tgt_lineno": 125
    },
    {
        "code": "new Here(\"Randoop\", 31).given(jobGid, \"\").checkEq(path, \"/jobs/\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "JobsBase",
        "index": 228,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 36,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/jobs/{job_gid}\".replace(\"{job_gid}\", jobGid);",
        "tgt_lineno": 31
    },
    {
        "code": "new Here(\"Unit\", 106).given(path, \"http://app/projects/1/tasks?limit=2\").checkEq(components, new String[] { \"http://app/projects/1/tasks\", \"limit=2\" });",
        "context": "if (components.length == 2 && components[1].length() > 0) {\nString[] params = components[1].split(\"&\");\nArrays.sort(params);\nresult += \"?\" + Joiner.on(\"&\").join(params);\n}\nreturn result;",
        "context_loc": 6,
        "filename": "MockDispatcher",
        "index": 229,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 115,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Unit",
        "stmt": "        String[] components = path.split(\"\\\\?\");",
        "tgt_lineno": 106
    },
    {
        "code": "new Here(\"Unit\", 109).given(components, new String[] { \"http://app/projects/1/tasks\", \"limit=2\" }).checkEq(params, new String[] { \"limit=2\" });",
        "context": "result += \"?\" + Joiner.on(\"&\").join(params);",
        "context_loc": 1,
        "filename": "MockDispatcher",
        "index": 230,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 119,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Unit",
        "stmt": "            String[] params = components[1].split(\"&\");",
        "tgt_lineno": 109
    },
    {
        "code": "new Here(\"Unit\", 41).given(task, \"1\").checkEq(path, \"/tasks/1/attachments\");",
        "context": "",
        "context_loc": 0,
        "filename": "Attachments",
        "index": 231,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 37,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Unit",
        "stmt": "        String path = String.format(\"/tasks/%s/attachments\", task);",
        "tgt_lineno": 41
    },
    {
        "code": "new Here(\"Unit\", 54).given(attachment, \"1\").checkEq(path, \"/attachments/1\");",
        "context": "",
        "context_loc": 0,
        "filename": "Attachments",
        "index": 232,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 49,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Unit",
        "stmt": "        String path = String.format(\"/attachments/%s\", attachment);",
        "tgt_lineno": 54
    },
    {
        "code": "new Here(\"Randoop\", 66).given(task, \"Server Error\").checkEq(path, \"/tasks/Server Error/attachments\");",
        "context": "",
        "context_loc": 0,
        "filename": "Attachments",
        "index": 233,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 61,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/tasks/%s/attachments\", task);",
        "tgt_lineno": 66
    },
    {
        "code": "new Here(\"Unit\", 57).given(webhook, \"222\").checkEq(path, \"/webhooks/222\");",
        "context": "",
        "context_loc": 0,
        "filename": "Webhooks",
        "index": 234,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 58,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Unit",
        "stmt": "        String path = String.format(\"/webhooks/%s\", webhook);",
        "tgt_lineno": 57
    },
    {
        "code": "new Here(\"Unit\", 71).given(webhook, \"222\").checkEq(path, \"/webhooks/222\");",
        "context": "",
        "context_loc": 0,
        "filename": "Webhooks",
        "index": 235,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 72,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Unit",
        "stmt": "        String path = String.format(\"/webhooks/%s\", webhook);",
        "tgt_lineno": 71
    },
    {
        "code": "new Here(\"Randoop\", 31).given(projectMembershipGid, \"\").checkEq(path, \"/project_memberships/\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "ProjectMembershipsBase",
        "index": 236,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 36,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/project_memberships/{project_membership_gid}\".replace(\"{project_membership_gid}\", projectMembershipGid);",
        "tgt_lineno": 31
    },
    {
        "code": "new Here(\"Randoop\", 56).given(projectGid, \"Forbidden\").checkEq(path, \"/projects/Forbidden/project_memberships\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "ProjectMembershipsBase",
        "index": 237,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 59,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/projects/{project_gid}/project_memberships\".replace(\"{project_gid}\", projectGid);",
        "tgt_lineno": 56
    },
    {
        "code": "new Here(\"Randoop\", 31).given(userTaskListGid, \"Sync token invalid or too old\").checkEq(path, \"/user_task_lists/Sync token invalid or too old\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "UserTaskListsBase",
        "index": 238,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 36,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/user_task_lists/{user_task_list_gid}\".replace(\"{user_task_list_gid}\", userTaskListGid);",
        "tgt_lineno": 31
    },
    {
        "code": "new Here(\"Randoop\", 54).given(userGid, \"Not Found\").checkEq(path, \"/users/Not Found/user_task_list\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "UserTaskListsBase",
        "index": 239,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 57,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/users/{user_gid}/user_task_list\".replace(\"{user_gid}\", userGid);",
        "tgt_lineno": 54
    },
    {
        "code": "new Here(\"Randoop\", 24).given(user, \"Sync token invalid or too old\").checkEq(path, \"/users/Sync token invalid or too old/user_task_list\");",
        "context": "",
        "context_loc": 0,
        "filename": "UserTaskLists",
        "index": 240,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 27,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/users/%s/user_task_list\", user);",
        "tgt_lineno": 24
    },
    {
        "code": "new Here(\"Unit\", 36).given(userTaskList, \"1\").checkEq(path, \"/user_task_lists/1\");",
        "context": "",
        "context_loc": 0,
        "filename": "UserTaskLists",
        "index": 241,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 39,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Unit",
        "stmt": "        String path = String.format(\"/user_task_lists/%s\", userTaskList);",
        "tgt_lineno": 36
    },
    {
        "code": "new Here(\"Randoop\", 64).given(userTaskList, \"hi!\").checkEq(path, \"/user_task_lists/hi!/tasks\");",
        "context": "",
        "context_loc": 0,
        "filename": "UserTaskLists",
        "index": 242,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 67,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = String.format(\"/user_task_lists/%s/tasks\", userTaskList);",
        "tgt_lineno": 64
    },
    {
        "code": "new Here(\"Randoop\", 31).given(timePeriodGid, \"POST\").checkEq(path, \"/time_periods/POST\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "TimePeriodsBase",
        "index": 243,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 36,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/time_periods/{time_period_gid}\".replace(\"{time_period_gid}\", timePeriodGid);",
        "tgt_lineno": 31
    },
    {
        "code": "new Here(\"Randoop\", 56).given(organizationExportGid, \"200\").checkEq(path, \"/organization_exports/200\");",
        "context": "return req;",
        "context_loc": 1,
        "filename": "OrganizationExportsBase",
        "index": 244,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 56,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Randoop",
        "stmt": "        String path = \"/organization_exports/{organization_export_gid}\".replace(\"{organization_export_gid}\", organizationExportGid);",
        "tgt_lineno": 56
    },
    {
        "code": "new Here(\"Unit\", 168).given(change, \"name=new_sections;info=something\").checkEq(changeParams, new String[] { \"name=new_sections\", \"info=something\" });",
        "context": "String info = \"\";\nboolean affected = false;\nfor (String changeParam : changeParams) {\nString[] paramKeyValue = changeParam.split(\"=\");\nparamKeyValue[0] = paramKeyValue[0].trim();\nparamKeyValue[1] = paramKeyValue[1].trim();\nswitch(paramKeyValue[0]) {\ncase \"name\":\nname = paramKeyValue[1];\nbreak;\ncase \"info\":\ninfo = paramKeyValue[1];\nbreak;\ncase \"affected\":\naffected = Boolean.valueOf(paramKeyValue[1]);\nbreak;\n}\n}\nif (!flagsAccountedFor.contains(name) && affected) {\nif (logger == null) {\nlogger = Logger.getLogger(Request.class.getCanonicalName());\n}\nString message = String.format(\"This request is affected by the \\\"%s\\\" deprecation. \" + \"Please visit this url for more info: %s\\n\" + \"Adding \\\"%s\\\" to your \\\"Asana-Enable\\\" or \\\"Asana-Disable\\\" header \" + \"will opt in/out to this deprecation and suppress this warning.\", name, info, name);\nlogger.warning(message);\n}",
        "context_loc": 25,
        "filename": "Request",
        "index": 245,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 170,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Unit",
        "stmt": "            String[] changeParams = change.split(\";\");",
        "tgt_lineno": 168
    },
    {
        "code": "new Here(\"Unit\", 168).given(change, \"name=string_ids;info=something;affected=true\").checkEq(changeParams, new String[] { \"name=string_ids\", \"info=something\", \"affected=true\" });",
        "context": "String info = \"\";\nboolean affected = false;\nfor (String changeParam : changeParams) {\nString[] paramKeyValue = changeParam.split(\"=\");\nparamKeyValue[0] = paramKeyValue[0].trim();\nparamKeyValue[1] = paramKeyValue[1].trim();\nswitch(paramKeyValue[0]) {\ncase \"name\":\nname = paramKeyValue[1];\nbreak;\ncase \"info\":\ninfo = paramKeyValue[1];\nbreak;\ncase \"affected\":\naffected = Boolean.valueOf(paramKeyValue[1]);\nbreak;\n}\n}\nif (!flagsAccountedFor.contains(name) && affected) {\nif (logger == null) {\nlogger = Logger.getLogger(Request.class.getCanonicalName());\n}\nString message = String.format(\"This request is affected by the \\\"%s\\\" deprecation. \" + \"Please visit this url for more info: %s\\n\" + \"Adding \\\"%s\\\" to your \\\"Asana-Enable\\\" or \\\"Asana-Disable\\\" header \" + \"will opt in/out to this deprecation and suppress this warning.\", name, info, name);\nlogger.warning(message);\n}",
        "context_loc": 25,
        "filename": "Request",
        "index": 246,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 171,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Unit",
        "stmt": "            String[] changeParams = change.split(\";\");",
        "tgt_lineno": 168
    },
    {
        "code": "new Here(\"Unit\", 175).given(changeParam, \"info=something\").checkEq(paramKeyValue, new String[] { \"info\", \"something\" });",
        "context": "paramKeyValue[1] = paramKeyValue[1].trim();\nswitch(paramKeyValue[0]) {\ncase \"name\":\nname = paramKeyValue[1];\nbreak;\ncase \"info\":\ninfo = paramKeyValue[1];\nbreak;\ncase \"affected\":\naffected = Boolean.valueOf(paramKeyValue[1]);\nbreak;\n}",
        "context_loc": 12,
        "filename": "Request",
        "index": 247,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 177,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 3,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Unit",
        "stmt": "                String[] paramKeyValue = changeParam.split(\"=\");",
        "tgt_lineno": 175
    },
    {
        "code": "new Here(\"Unit\", 175).given(changeParam, \"name=new_sections\").checkEq(paramKeyValue, new String[] { \"name\", \"new_sections\" });",
        "context": "paramKeyValue[1] = paramKeyValue[1].trim();\nswitch(paramKeyValue[0]) {\ncase \"name\":\nname = paramKeyValue[1];\nbreak;\ncase \"info\":\ninfo = paramKeyValue[1];\nbreak;\ncase \"affected\":\naffected = Boolean.valueOf(paramKeyValue[1]);\nbreak;\n}",
        "context_loc": 12,
        "filename": "Request",
        "index": 248,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 178,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 3,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Unit",
        "stmt": "                String[] paramKeyValue = changeParam.split(\"=\");",
        "tgt_lineno": 175
    },
    {
        "code": "new Here(\"Unit\", 175).given(changeParam, \"affected=true\").checkEq(paramKeyValue, new String[] { \"affected\", \"true\" });",
        "context": "paramKeyValue[1] = paramKeyValue[1].trim();\nswitch(paramKeyValue[0]) {\ncase \"name\":\nname = paramKeyValue[1];\nbreak;\ncase \"info\":\ninfo = paramKeyValue[1];\nbreak;\ncase \"affected\":\naffected = Boolean.valueOf(paramKeyValue[1]);\nbreak;\n}",
        "context_loc": 12,
        "filename": "Request",
        "index": 249,
        "itest_idx": 2,
        "itest_type": "R2",
        "lineno": 179,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 3,
        "num_vars": 2,
        "project": "Asana_java-asana",
        "source": "Unit",
        "stmt": "                String[] paramKeyValue = changeParam.split(\"=\");",
        "tgt_lineno": 175
    },
    {
        "code": "new Here(\"Unit\", 197).given(name, \"string_ids\").given(info, \"something\").checkEq(message, \"This request is affected by the \\\"string_ids\\\" deprecation. Please visit this url for more info: something\\nAdding \\\"string_ids\\\" to your \\\"Asana-Enable\\\" or \\\"Asana-Disable\\\" header will opt in/out to this deprecation and suppress this warning.\");",
        "context": "",
        "context_loc": 0,
        "filename": "Request",
        "index": 250,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 199,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 1,
        "num_vars": 3,
        "project": "Asana_java-asana",
        "source": "Unit",
        "stmt": "                String message = String.format(\"This request is affected by the \\\"%s\\\" deprecation. \" + \"Please visit this url for more info: %s\\n\" + \"Adding \\\"%s\\\" to your \\\"Asana-Enable\\\" or \\\"Asana-Disable\\\" header \" + \"will opt in/out to this deprecation and suppress this warning.\", name, info, name);",
        "tgt_lineno": 197
    },
    {
        "code": "new Here(\"Unit\", 340).given(largeMessagePointer, \"[\\\"software.amazon.payloadoffloading.PayloadS3Pointer\\\",{\\\"s3BucketName\\\":\\\"test-bucket-name\\\",\\\"s3Key\\\":\\\"S3Key\\\"}]\").checkEq(largeMessagePointer, \"[\\\"software.amazon.payloadoffloading.PayloadS3Pointer\\\",{\\\"s3BucketName\\\":\\\"test-bucket-name\\\",\\\"s3Key\\\":\\\"S3Key\\\"}]\");",
        "context": "// remove the additional attribute before returning the message\n// to user.\nMap<String, MessageAttributeValue> messageAttributes = new HashMap<>(message.messageAttributes());\nmessageAttributes.keySet().removeAll(RESERVED_ATTRIBUTE_NAMES);\nmessageBuilder.messageAttributes(messageAttributes);\n// Embed s3 object pointer in the receipt handle.\nString modifiedReceiptHandle = embedS3PointerInReceiptHandle(message.receiptHandle(), largeMessagePointer);\nmessageBuilder.receiptHandle(modifiedReceiptHandle);",
        "context_loc": 8,
        "filename": "AmazonSQSExtendedClient",
        "index": 251,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 332,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "awslabs_amazon-sqs-java-extended-client-lib",
        "source": "Unit",
        "stmt": "                largeMessagePointer = largeMessagePointer.replace(\"com.amazon.sqs.javamessaging.MessageS3Pointer\", \"software.amazon.payloadoffloading.PayloadS3Pointer\");",
        "tgt_lineno": 340
    },
    {
        "code": "new Here(\"Unit\", 884).given(receiptHandle, \"-..s3BucketName..-test-bucket-name-..s3BucketName..--..s3Key..-2b3283d1-c8ad-4fe6-86d9-65f75a8eb989-..s3Key..-7d3a8114-26fc-449f-84d5-d92cb42313ea\").checkEq(secondOccurence, 99);",
        "context": "",
        "context_loc": 0,
        "filename": "AmazonSQSExtendedClient",
        "index": 252,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 827,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "awslabs_amazon-sqs-java-extended-client-lib",
        "source": "Unit",
        "stmt": "        int secondOccurence = receiptHandle.indexOf(SQSExtendedClientConstants.S3_KEY_MARKER, receiptHandle.indexOf(SQSExtendedClientConstants.S3_KEY_MARKER) + 1);",
        "tgt_lineno": 884
    },
    {
        "code": "new Here(\"Unit\", 890).given(marker, \"-..s3BucketName..-\").given(receiptHandle, \"-..s3BucketName..-test-bucket-name-..s3BucketName..--..s3Key..-9de2dc06-b61f-4141-8c9b-f5f77459d618-..s3Key..-86fff0ec-206d-40e7-9fe7-b85cb03f1416\").checkEq(firstOccurence, 0);",
        "context": "return receiptHandle.substring(firstOccurence + marker.length(), secondOccurence);",
        "context_loc": 1,
        "filename": "AmazonSQSExtendedClient",
        "index": 253,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 833,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 1,
        "num_vars": 3,
        "project": "awslabs_amazon-sqs-java-extended-client-lib",
        "source": "Unit",
        "stmt": "        int firstOccurence = receiptHandle.indexOf(marker);",
        "tgt_lineno": 890
    },
    {
        "code": "new Here(\"Unit\", 891).given(firstOccurence, 0).given(marker, \"-..s3BucketName..-\").given(receiptHandle, \"-..s3BucketName..-test-bucket-name-..s3BucketName..--..s3Key..-9de2dc06-b61f-4141-8c9b-f5f77459d618-..s3Key..-86fff0ec-206d-40e7-9fe7-b85cb03f1416\").checkEq(secondOccurence, 34);",
        "context": "",
        "context_loc": 0,
        "filename": "AmazonSQSExtendedClient",
        "index": 254,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 835,
        "num_checks": 1,
        "num_givens": 3,
        "num_itests": 1,
        "num_vars": 4,
        "project": "awslabs_amazon-sqs-java-extended-client-lib",
        "source": "Unit",
        "stmt": "        int secondOccurence = receiptHandle.indexOf(marker, firstOccurence + 1);",
        "tgt_lineno": 891
    },
    {
        "code": "new Here(\"Unit\", 376).given(text, \"Release 0.1.0 \\u2013 2015-05-17\").checkEq(texts, new String[] { \"Release 0.1.0 \", \" 2015-05-17\" });",
        "context": "timeElement = new Element(Tag.valueOf(\"time\"), \"\");\ntimeElement.text(texts[1].trim());\nsmallElement = new Element(Tag.valueOf(\"small\"), \"\");\nsmallElement.append(\"(\");\nsmallElement.appendChild(timeElement);\nsmallElement.append(\")\");\nheading.text(texts[0]);\nheading.appendChild(smallElement);\n}",
        "context_loc": 9,
        "filename": "SiteTool",
        "index": 255,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 361,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "Bernardo-MG_maven-site-fixer",
        "source": "Unit",
        "stmt": "            texts = text.split(\"\u2013\", 2);",
        "tgt_lineno": 376
    },
    {
        "code": "new Here(\"Unit\", 288).given(text, \"path-to\\\\file_name\").checkEq(corrected, \"path-to-file-name\");",
        "context": "corrected = getMultipleHyphenPattern().matcher(corrected).replaceAll(separator);\n// Removes white spaces\ncorrected = getWhitespacePattern().matcher(corrected).replaceAll(separator);\n// Removes non-latin characters\ncorrected = getNonLatinPattern().matcher(corrected).replaceAll(\"\");\nreturn corrected.toLowerCase();",
        "context_loc": 6,
        "filename": "ConfigTool",
        "index": 256,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 284,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "Bernardo-MG_velocity-config-tool",
        "source": "Unit",
        "stmt": "        corrected = text.replace('/', '-').replace('\\\\', '-').replace('.', '-').replace('_', '-');",
        "tgt_lineno": 288
    },
    {
        "code": "new Here(\"Unit\", 288).given(text, \"path-to\\\\file_name..something\").checkEq(corrected, \"path-to-file-name--something\");",
        "context": "corrected = getMultipleHyphenPattern().matcher(corrected).replaceAll(separator);\n// Removes white spaces\ncorrected = getWhitespacePattern().matcher(corrected).replaceAll(separator);\n// Removes non-latin characters\ncorrected = getNonLatinPattern().matcher(corrected).replaceAll(\"\");\nreturn corrected.toLowerCase();",
        "context_loc": 6,
        "filename": "ConfigTool",
        "index": 257,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 285,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "Bernardo-MG_velocity-config-tool",
        "source": "Unit",
        "stmt": "        corrected = text.replace('/', '-').replace('\\\\', '-').replace('.', '-').replace('_', '-');",
        "tgt_lineno": 288
    },
    {
        "code": "new Here(\"Unit\", 57).given(templateSource, \"1.xml\").checkEq(id, \";root;body@;folder;descriptor.xml\");",
        "context": "StringTemplateSource currentTemplateSource = (StringTemplateSource) templateLoader.findTemplateSource(id);\nif (currentTemplateSource == null || !currentTemplateSource.getSource().equals(source)) {\ntemplateLoader.putTemplateSource(id, source);\n}\ntry {\nreturn new FreeMarkerCompiledTemplate(templateConfiguration.getTemplate(id));\n} catch (Exception e) {\nthrow new TemplateException(\"Unable to compile Freemarker template:\\n\" + source, e);\n}",
        "context_loc": 9,
        "filename": "FreeMarkerStringTemplateCompiler",
        "index": 258,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 60,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "craftercms_core",
        "source": "Unit",
        "stmt": "        String id = templateSource.getId().replace('/', ';');",
        "tgt_lineno": 57
    },
    {
        "code": "new Here(\"Unit\", 50).given(url, \"/index.html?param=value\").checkEq(indexOfParamDelim, 11);",
        "context": "// The URL doesn't have a param delim, add it and tack on the debug flag\nresult = url + UrlUtils.URL_PARAM_DELIM + debugParam + \"=true\";\n} else {\n// The URL does have a param delim, add param separator and tack on the debug flag\nresult = url + UrlUtils.URL_PARAM_SEPARATOR + debugParam + \"=true\";\n}\nif (logger.isDebugEnabled()) {\nlogger.debug(\"Transformation in: \" + url + \", Transformation out: \" + result);\n}\nreturn result;",
        "context_loc": 10,
        "filename": "AddDebugParamUrlTransformer",
        "index": 259,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 53,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "craftercms_core",
        "source": "Unit",
        "stmt": "        int indexOfParamDelim = url.indexOf(UrlUtils.URL_PARAM_DELIM);",
        "tgt_lineno": 50
    },
    {
        "code": "new Here(\"Unit\", 50).given(url, \"/index.html\").checkEq(indexOfParamDelim, -1);",
        "context": "// The URL doesn't have a param delim, add it and tack on the debug flag\nresult = url + UrlUtils.URL_PARAM_DELIM + debugParam + \"=true\";\n} else {\n// The URL does have a param delim, add param separator and tack on the debug flag\nresult = url + UrlUtils.URL_PARAM_SEPARATOR + debugParam + \"=true\";\n}\nif (logger.isDebugEnabled()) {\nlogger.debug(\"Transformation in: \" + url + \", Transformation out: \" + result);\n}\nreturn result;",
        "context_loc": 10,
        "filename": "AddDebugParamUrlTransformer",
        "index": 260,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 54,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "craftercms_core",
        "source": "Unit",
        "stmt": "        int indexOfParamDelim = url.indexOf(UrlUtils.URL_PARAM_DELIM);",
        "tgt_lineno": 50
    },
    {
        "code": "new Here(\"Unit\", 61).given(matcher, \"12.xml\").checkTrue(group());",
        "context": "parsedUrl.setPrefix(matcher.group(prefixGroup));\n} catch (IndexOutOfBoundsException e) {\n}\ntry {\nparsedUrl.setBaseNameAndExtensionToken(matcher.group(baseNameAndExtensionTokenGroup));\n} catch (IndexOutOfBoundsException e) {\n}\ntry {\nparsedUrl.setSuffix(matcher.group(suffixGroup));\n} catch (IndexOutOfBoundsException e) {\n}",
        "context_loc": 11,
        "filename": "RegexBasedContentBundleUrlParser",
        "index": 261,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 64,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "craftercms_core",
        "source": "Unit",
        "stmt": "        if (matcher.matches()) {",
        "tgt_lineno": 61
    },
    {
        "code": "new Here(\"Unit\", 51).given(matcher, \"29.xml\").checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "UrlUtils",
        "index": 262,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 53,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "craftercms_core",
        "source": "Unit",
        "stmt": "        if (matcher.matches()) {",
        "tgt_lineno": 51
    },
    {
        "code": "new Here(\"Randoop\", 94).given(shortUrl, \"hi!-v-1\").checkEq(levels, new String[] { \"hi!-v-1\" });",
        "context": "if (ArrayUtils.isNotEmpty(levels)) {\nfor (String level : levels) {\nString folderPath = result.toString();\nfolderPath = StringUtils.isNotEmpty(folderPath) ? folderPath : \"/\";\nString longName = getLongName(context, cachingOptions, folderPath, level);\nif (StringUtils.isNotEmpty(longName)) {\nresult.append(\"/\").append(longName);\n} else if (useShortNameIfLongNameNotFound) {\nresult.append(\"/\").append(level);\n} else {\nreturn null;\n}\n}\n}\nif (shortUrl.endsWith(\"/\")) {\nresult.append(\"/\");\n}\nreturn result.toString();",
        "context_loc": 18,
        "filename": "ShortToLongUrlTransformer",
        "index": 263,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 88,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "craftercms_core",
        "source": "Randoop",
        "stmt": "        String[] levels = StringUtils.strip(shortUrl, \"/\").split(\"/\");",
        "tgt_lineno": 94
    },
    {
        "code": "new Here(\"Unit\", 55).given(url, \"/site/website/hotels//bookings//index.xml\").checkEq(url, \"/site/website/hotels/bookings/index.xml\");",
        "context": "return url;",
        "context_loc": 1,
        "filename": "ExtractRequestAttributesUrlTransformer",
        "index": 264,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 55,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "craftercms_core",
        "source": "Unit",
        "stmt": "            url = url.replace(\"//\", \"/\");",
        "tgt_lineno": 55
    },
    {
        "code": "new Here(\"Unit\", 72).given(mainDescriptorUrl, \"/folder/sub-folder/descriptor.xml\").checkEq(k, 0);",
        "context": "while (k >= 0) {\nString folder = mainDescriptorUrl.substring(0, k);\naddInheritedDescriptorsInFolder(context, cachingOptions, descriptors, folder, mainDescriptorUrl, mainDescriptorDom);\nk = mainDescriptorUrl.indexOf('/', ++k);\n}\ndescriptors.add(new MergeableDescriptor(mainDescriptorUrl, mainDescriptorOptional));\nreturn descriptors;",
        "context_loc": 7,
        "filename": "AbstractInheritFromHierarchyMergeStrategy",
        "index": 265,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 67,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "craftercms_core",
        "source": "Unit",
        "stmt": "            k = mainDescriptorUrl.indexOf('/');",
        "tgt_lineno": 72
    },
    {
        "code": "new Here(\"Unit\", 81).given(mainDescriptorUrl, \"/folder/sub-folder/descriptor.xml\").given(k, 0).checkEq(k, 7);",
        "context": "descriptors.add(new MergeableDescriptor(mainDescriptorUrl, mainDescriptorOptional));\nreturn descriptors;",
        "context_loc": 2,
        "filename": "AbstractInheritFromHierarchyMergeStrategy",
        "index": 266,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 73,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 1,
        "num_vars": 3,
        "project": "craftercms_core",
        "source": "Unit",
        "stmt": "            k = mainDescriptorUrl.indexOf('/', ++k);",
        "tgt_lineno": 81
    },
    {
        "code": "new Here(\"Unit\", 97).given(originalBase, \"base_fr_es\").given(longUrl, \"/001_folder/base/002_index.html/\").given(base, \"base\").checkEq(longUrl, \"/001_folder/base_fr_es/002_index.html/\");",
        "context": "return longUrl;",
        "context_loc": 1,
        "filename": "ContentBundleShortToLongUrlTransformer",
        "index": 267,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 94,
        "num_checks": 1,
        "num_givens": 3,
        "num_itests": 1,
        "num_vars": 4,
        "project": "craftercms_core",
        "source": "Unit",
        "stmt": "                    longUrl = longUrl.replace(base, originalBase);",
        "tgt_lineno": 97
    },
    {
        "code": "new Here(\"Unit\", 57).given(longUrl, \"/001_folder/002_subfolder/003_index.html/\").checkEq(levels, new String[] { \"001_folder\", \"002_subfolder\", \"003_index.html\" });",
        "context": "if (ArrayUtils.isNotEmpty(levels)) {\nfor (String level : levels) {\nresult.append(\"/\").append(UrlUtils.getShortName(level, containsShortNameRegex, shortNameRegexGroup));\n}\n}\nif (longUrl.endsWith(\"/\")) {\nresult.append(\"/\");\n}\nreturn result.toString();",
        "context_loc": 9,
        "filename": "LongToShortUrlTransformer",
        "index": 268,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 62,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "craftercms_core",
        "source": "Unit",
        "stmt": "        String[] levels = StringUtils.strip(longUrl, \"/\").split(\"/\");",
        "tgt_lineno": 57
    },
    {
        "code": "new Here(\"Unit\", 40).given(filter, \"0.xml\").given(version, \"1.0\").checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "VersionXmlAnnotationIntrospector",
        "index": 269,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 42,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 1,
        "num_vars": 3,
        "project": "CycloneDX_cyclonedx-core-java",
        "source": "Unit",
        "stmt": "            if (Arrays.stream(filter.versions()).noneMatch(v -> v.equals(version))) {",
        "tgt_lineno": 40
    },
    {
        "code": "new Here(\"Unit\", 39).given(filter, \"0.xml\").given(version, \"1.3\").checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "VersionJsonAnnotationIntrospector",
        "index": 270,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 42,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 1,
        "num_vars": 3,
        "project": "CycloneDX_cyclonedx-core-java",
        "source": "Unit",
        "stmt": "            if (Arrays.stream(filter.versions()).noneMatch(v -> v.equals(version))) {",
        "tgt_lineno": 39
    },
    {
        "code": "new Here(\"Randoop\", 57).given(dependency, \"4.xml\").given(dependencies, \"5.xml\").checkEq(found, false);",
        "context": "dependencies.add(dependency);\n}",
        "context_loc": 2,
        "filename": "Dependency",
        "index": 271,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 61,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 1,
        "num_vars": 3,
        "project": "CycloneDX_cyclonedx-core-java",
        "source": "Randoop",
        "stmt": "        boolean found = dependencies.stream().anyMatch(d -> d.getRef().equals(dependency.getRef()));",
        "tgt_lineno": 57
    },
    {
        "code": "new Here(\"Unit\", 385).given(matcher, \"1.xml\").checkTrue(group());",
        "context": "content = StringUtils.replaceEach(content, new String[] { \"_\", \"*\", \"-\", \"+\", \"`\" }, new String[] { \"\\\\_\", \"\\\\*\", \"\\\\-\", \"\\\\+\", \"\\\\`\" });",
        "context_loc": 1,
        "filename": "MarkdownRenderer",
        "index": 272,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 385,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "finos_messageml-utils",
        "source": "Unit",
        "stmt": "        if (!matcher.matches()) {",
        "tgt_lineno": 385
    },
    {
        "code": "new Here(\"Unit\", 156).given(styleClass, \"tempo-text-color--link\").checkEq(styles, new String[] { \"tempo-text-color--link\" });",
        "context": "if (style.startsWith(\"tempo-\")) {\ncontext.updateItemCount(BiFields.STYLES_CLASS_TEMPO.getValue());\n} else if (style.equals(\"entity\")) {\ncontext.updateItemCount(BiFields.ENTITIES.getValue());\n} else {\ncontext.updateItemCount(BiFields.STYLES_CLASS_OTHER.getValue());\n}\n}",
        "context_loc": 8,
        "filename": "Element",
        "index": 273,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 161,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "finos_messageml-utils",
        "source": "Unit",
        "stmt": "        String[] styles = styleClass.trim().split(\"[ ]+\");",
        "tgt_lineno": 156
    },
    {
        "code": "new Here(\"Unit\", 697).given(permittedParents, \"99.xml\").checkEq(permittedParentsClassAsString, \"card\");",
        "context": "",
        "context_loc": 0,
        "filename": "Element",
        "index": 274,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 652,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "finos_messageml-utils",
        "source": "Unit",
        "stmt": "            String permittedParentsClassAsString = permittedParents.stream().map(permittedParentClass -> permittedParentClass.getSimpleName().toLowerCase()).reduce((item, anotherItem) -> String.format(\"%s, %s\", item, anotherItem)).orElse(\"\");",
        "tgt_lineno": 697
    },
    {
        "code": "new Here(\"Randoop\", 714).given(permittedParents, \"185.xml\").checkEq(permittedParentsClassAsString, \"form\");",
        "context": "",
        "context_loc": 0,
        "filename": "Element",
        "index": 275,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 664,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "finos_messageml-utils",
        "source": "Randoop",
        "stmt": "            String permittedParentsClassAsString = permittedParents.stream().map(permittedParentClass -> permittedParentClass.getSimpleName().toLowerCase()).reduce((item, anotherItem) -> String.format(\"%s, %s\", item, anotherItem)).orElse(\"\");",
        "tgt_lineno": 714
    },
    {
        "code": "new Here(\"Unit\", 714).given(permittedParents, \"117.xml\").checkEq(permittedParentsClassAsString, \"form, uiaction\");",
        "context": "",
        "context_loc": 0,
        "filename": "Element",
        "index": 276,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 665,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "finos_messageml-utils",
        "source": "Unit",
        "stmt": "            String permittedParentsClassAsString = permittedParents.stream().map(permittedParentClass -> permittedParentClass.getSimpleName().toLowerCase()).reduce((item, anotherItem) -> String.format(\"%s, %s\", item, anotherItem)).orElse(\"\");",
        "tgt_lineno": 714
    },
    {
        "code": "new Here(\"Unit\", 731).given(forbiddenParents, \"250.xml\").checkEq(forbiddenParentsClassAsString, \"form\");",
        "context": "",
        "context_loc": 0,
        "filename": "Element",
        "index": 277,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 677,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "finos_messageml-utils",
        "source": "Unit",
        "stmt": "            String forbiddenParentsClassAsString = forbiddenParents.stream().map(forbiddenParentClass -> forbiddenParentClass.getSimpleName().toLowerCase()).reduce((item, anotherItem) -> String.format(\"%s, %s\", item, anotherItem)).orElse(\"\");",
        "tgt_lineno": 731
    },
    {
        "code": "new Here(\"Unit\", 73).given(node, \"87.xml\").given(FIELD_DELIMITER, '\u0092').checkEq(text, new String[] { \"TABLE\", \"A1\\u001EB1\\u001E\\u001DA2\\u001EB2\\u001E\\u001D\" });",
        "context": "switch(text[0]) {\ncase KEYWORD:\nString prefix = text[1].substring(0, 1);\nString value = text[1].substring(1);\nreturn new KeywordNode(prefix, value);\ncase URL:\nreturn new Link(text[1], text[1]);\ncase MENTION:\ntry {\nLong uid = Long.valueOf(text[1]);\nreturn new MentionNode(uid);\n} catch (NumberFormatException e) {\nreturn new Text(text[1]);\n}\ncase TABLE:\nTableNode tableNode = new TableNode();\nfor (String row : text[1].split(String.valueOf(GROUP_DELIMITER))) {\nTableRowNode rowNode = new TableRowNode();\nfor (String cell : row.split(String.valueOf(RECORD_DELIMITER))) {\nTableCellNode cellNode = new TableCellNode();\ncellNode.appendChild(new Text(cell));\nrowNode.appendChild(cellNode);\n}\ntableNode.appendChild(rowNode);\n}\nreturn tableNode;\ndefault:\nreturn null;\n}\n} else {\nreturn node;\n}",
        "context_loc": 32,
        "filename": "EntityDelimiterProcessor",
        "index": 278,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 84,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 3,
        "num_vars": 3,
        "project": "finos_messageml-utils",
        "source": "Unit",
        "stmt": "        String[] text = node.getLiteral().split(String.valueOf(FIELD_DELIMITER));",
        "tgt_lineno": 73
    },
    {
        "code": "new Here(\"Unit\", 73).given(node, \"55.xml\").given(FIELD_DELIMITER, '\u0092').checkEq(text, new String[] { \"KEYWORD\", \"#hashtag\" });",
        "context": "switch(text[0]) {\ncase KEYWORD:\nString prefix = text[1].substring(0, 1);\nString value = text[1].substring(1);\nreturn new KeywordNode(prefix, value);\ncase URL:\nreturn new Link(text[1], text[1]);\ncase MENTION:\ntry {\nLong uid = Long.valueOf(text[1]);\nreturn new MentionNode(uid);\n} catch (NumberFormatException e) {\nreturn new Text(text[1]);\n}\ncase TABLE:\nTableNode tableNode = new TableNode();\nfor (String row : text[1].split(String.valueOf(GROUP_DELIMITER))) {\nTableRowNode rowNode = new TableRowNode();\nfor (String cell : row.split(String.valueOf(RECORD_DELIMITER))) {\nTableCellNode cellNode = new TableCellNode();\ncellNode.appendChild(new Text(cell));\nrowNode.appendChild(cellNode);\n}\ntableNode.appendChild(rowNode);\n}\nreturn tableNode;\ndefault:\nreturn null;\n}\n} else {\nreturn node;\n}",
        "context_loc": 32,
        "filename": "EntityDelimiterProcessor",
        "index": 279,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 85,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 3,
        "num_vars": 3,
        "project": "finos_messageml-utils",
        "source": "Unit",
        "stmt": "        String[] text = node.getLiteral().split(String.valueOf(FIELD_DELIMITER));",
        "tgt_lineno": 73
    },
    {
        "code": "new Here(\"Unit\", 73).given(node, \"90.xml\").given(FIELD_DELIMITER, '\u0092').checkEq(text, new String[] { \"USER_FOLLOW\", \"123456789\" });",
        "context": "switch(text[0]) {\ncase KEYWORD:\nString prefix = text[1].substring(0, 1);\nString value = text[1].substring(1);\nreturn new KeywordNode(prefix, value);\ncase URL:\nreturn new Link(text[1], text[1]);\ncase MENTION:\ntry {\nLong uid = Long.valueOf(text[1]);\nreturn new MentionNode(uid);\n} catch (NumberFormatException e) {\nreturn new Text(text[1]);\n}\ncase TABLE:\nTableNode tableNode = new TableNode();\nfor (String row : text[1].split(String.valueOf(GROUP_DELIMITER))) {\nTableRowNode rowNode = new TableRowNode();\nfor (String cell : row.split(String.valueOf(RECORD_DELIMITER))) {\nTableCellNode cellNode = new TableCellNode();\ncellNode.appendChild(new Text(cell));\nrowNode.appendChild(cellNode);\n}\ntableNode.appendChild(rowNode);\n}\nreturn tableNode;\ndefault:\nreturn null;\n}\n} else {\nreturn node;\n}",
        "context_loc": 32,
        "filename": "EntityDelimiterProcessor",
        "index": 280,
        "itest_idx": 2,
        "itest_type": "R2",
        "lineno": 86,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 3,
        "num_vars": 3,
        "project": "finos_messageml-utils",
        "source": "Unit",
        "stmt": "        String[] text = node.getLiteral().split(String.valueOf(FIELD_DELIMITER));",
        "tgt_lineno": 73
    },
    {
        "code": "new Here(\"Unit\", 30).given(DELIMITER, ':').checkEq(this.delimiter, \":\");",
        "context": "",
        "context_loc": 0,
        "filename": "EmojiNode",
        "index": 281,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 34,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "finos_messageml-utils",
        "source": "Unit",
        "stmt": "        this.delimiter = String.valueOf(DELIMITER);",
        "tgt_lineno": 30
    },
    {
        "code": "new Here(\"Unit\", 36).given(key, \"vampire_dark_skin_tone\").given(properties, \"65.xml\").checkEq(unicodeAStringArray, new String[] { \"0x0001f9db\", \"0x0001f3ff\" });",
        "context": "for (int i = 0; i < unicodeAStringArray.length; i++) {\nunicodeArray[i] = Integer.decode(unicodeAStringArray[i]);\n}\nemojiShortcodeToUnicode.put(key, emojiToUnicodeString(unicodeArray));",
        "context_loc": 4,
        "filename": "EmojiShortcodeToUnicode",
        "index": 282,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 41,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 1,
        "num_vars": 3,
        "project": "finos_messageml-utils",
        "source": "Unit",
        "stmt": "                String[] unicodeAStringArray = properties.getProperty(key).split(\",\");",
        "tgt_lineno": 36
    },
    {
        "code": "new Here(\"Unit\", 145).given(styleAttribute, \"background-color:red\").checkEq(inputStyleProperties, \"0.xml\");",
        "context": "if (!inputStyleProperties.isEmpty()) {\nthrow new InvalidInputException(\"Invalid property(s): [\" + StringUtils.join(inputStyleProperties, ',') + \"] in the \\\"style\\\" attribute\");\n}",
        "context_loc": 3,
        "filename": "Styles",
        "index": 283,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 154,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "finos_messageml-utils",
        "source": "Unit",
        "stmt": "            }).collect(Collectors.toSet());",
        "tgt_lineno": 145
    },
    {
        "code": "new Here(\"Unit\", 388).given(message, \"Hello\\u00A0world!\").checkEq(message, \"Hello world!\");",
        "context": "Node markdown = MARKDOWN_PARSER.parse(enriched);\nmarkdown.accept(this);\nreturn messageML;",
        "context_loc": 3,
        "filename": "MarkdownParser",
        "index": 284,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 377,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "finos_messageml-utils",
        "source": "Unit",
        "stmt": "        message = message.replace((char) 160, (char) 32);",
        "tgt_lineno": 388
    },
    {
        "code": "new Here(\"Unit\", 84).given(version_, \"1.0\").checkEq(parts, new String[] { \"1\", \"0\" });",
        "context": "minorVersion_ = Integer.parseInt(parts[1]);\nStringBuffer s = new StringBuffer(\"StructuredObject(\\\"\");\ns.append(type_);\ns.append(\" v\");\ns.append(version_);\ns.append(\"\\\"\");\nboolean first = true;\nJsonNode idNode = jsonNode.get(\"id\");\nList<StructuredObjectId> idList = new ArrayList<>();\nif (idNode instanceof ArrayNode) {\nfor (JsonNode node : idNode) {\nStructuredObjectId id = new StructuredObjectId(node);\nif (first) {\nfirst = false;\ns.append(\", \\\"\");\ns.append(id.toString());\ns.append(\"\\\"\");\n}\nidList.add(id);\n}\n}\nidList_ = Collections.unmodifiableList(idList);\ns.append(\")\");\ntoString_ = s.toString();",
        "context_loc": 24,
        "filename": "StructuredObject",
        "index": 285,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 89,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "finos_messageml-utils",
        "source": "Unit",
        "stmt": "        String[] parts = version_.split(\"\\\\.\");",
        "tgt_lineno": 84
    },
    {
        "code": "new Here(\"Unit\", 92).given(classAttr, null).checkEq(classes, null);",
        "context": "verifyClassSpecificAttribute(attr, classes, Card.PRESENTATIONML_CLASS);\n}\nverifyClassSpecificAttribute(ATTR_DATA_STATE, classes, ExpandableCard.PRESENTATIONML_CLASS);\nverifyClassSpecificAttribute(ATTR_DATA_VARIANT, classes, ExpandableCardBody.PRESENTATIONML_CLASS);",
        "context_loc": 4,
        "filename": "Div",
        "index": 286,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 91,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "finos_messageml-utils",
        "source": "Unit",
        "stmt": "        String[] classes = (classAttr != null) ? classAttr.split(\" \") : null;",
        "tgt_lineno": 92
    },
    {
        "code": "new Here(\"Unit\", 381).given(input, \"entity\").checkEq(splitInput, new String[] { \"entity\" });",
        "context": "",
        "context_loc": 0,
        "filename": "MessageMLParser",
        "index": 287,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 361,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "finos_messageml-utils",
        "source": "Unit",
        "stmt": "        String[] splitInput = input.split(\"\\\\s+\");",
        "tgt_lineno": 381
    },
    {
        "code": "new Here(\"Unit\", 388).given(input, \"class\").given(attribute, \"card\").given(element, \"96.xml\").checkEq(newAttribute, \"barStyle\");",
        "context": "element.setAttribute(input, newAttribute);\n} else {\nelement.removeAttribute(input);\n}",
        "context_loc": 4,
        "filename": "MessageMLParser",
        "index": 288,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 368,
        "num_checks": 1,
        "num_givens": 3,
        "num_itests": 1,
        "num_vars": 4,
        "project": "finos_messageml-utils",
        "source": "Unit",
        "stmt": "            String newAttribute = Arrays.stream(element.getAttribute(input).split(\"\\\\s+\")).filter(it -> !it.equalsIgnoreCase(attribute)).collect(Collectors.joining(\" \"));",
        "tgt_lineno": 388
    },
    {
        "code": "new Here(\"Unit\", 242).given(FORMAT_ATTR_PATTERN, \"^[hHmsa: ]+$\").given(format, \"dd:mm:ss a\").checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "TimePicker",
        "index": 289,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 235,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 1,
        "num_vars": 3,
        "project": "finos_messageml-utils",
        "source": "Unit",
        "stmt": "        if (!format.matches(FORMAT_ATTR_PATTERN)) {",
        "tgt_lineno": 242
    },
    {
        "code": "new Here(\"Unit\", 117).given(format, \"yyyy-MM-dd HH:mm:ss\").given(DATE_FORMAT_ALLOWED, \"^[0-9Mdy\\\\/. -:]+$\").checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "DatePicker",
        "index": 290,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 129,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 1,
        "num_vars": 3,
        "project": "finos_messageml-utils",
        "source": "Unit",
        "stmt": "            if (!format.matches(DATE_FORMAT_ALLOWED)) {",
        "tgt_lineno": 117
    },
    {
        "code": "new Here(\"Unit\", 57).given(daysOfWeek, \"256.xml\").checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "DateInterval",
        "index": 291,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 64,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 3,
        "num_vars": 2,
        "project": "finos_messageml-utils",
        "source": "Unit",
        "stmt": "            if (Arrays.stream(daysOfWeek).anyMatch(d -> d < 0 || d > 6)) {",
        "tgt_lineno": 57
    },
    {
        "code": "new Here(\"Unit\", 57).given(daysOfWeek, \"255.xml\").checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "DateInterval",
        "index": 292,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 65,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 3,
        "num_vars": 2,
        "project": "finos_messageml-utils",
        "source": "Unit",
        "stmt": "            if (Arrays.stream(daysOfWeek).anyMatch(d -> d < 0 || d > 6)) {",
        "tgt_lineno": 57
    },
    {
        "code": "new Here(\"Randoop\", 57).given(daysOfWeek, \"384.xml\").checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "DateInterval",
        "index": 293,
        "itest_idx": 2,
        "itest_type": "R2",
        "lineno": 66,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 3,
        "num_vars": 2,
        "project": "finos_messageml-utils",
        "source": "Randoop",
        "stmt": "            if (Arrays.stream(daysOfWeek).anyMatch(d -> d < 0 || d > 6)) {",
        "tgt_lineno": 57
    },
    {
        "code": "new Here(\"Unit\", 205).given(m, \"0.xml\").checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "Proc",
        "index": 294,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 181,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "fleipold_jproc",
        "source": "Unit",
        "stmt": "        if (m.find()) {",
        "tgt_lineno": 205
    },
    {
        "code": "new Here(\"Unit\", 39).given(string, \"Standard Out\\n\").checkEq(lines, new String[] { \"Standard Out\" });",
        "context": "builder.append(prefix + line + \"\\n\");\n}\nreturn builder.toString();",
        "context_loc": 3,
        "filename": "ExternalProcessFailureException",
        "index": 295,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 48,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "fleipold_jproc",
        "source": "Unit",
        "stmt": "        String[] lines = string.split(\"\\n\");",
        "tgt_lineno": 39
    },
    {
        "code": "new Here(\"Unit\", 1605).given(pemFile, \"src/test/fixture/testPems/caBundled.pems, src/test/fixture/testPems/Org1MSP_CA.pem\").checkEq(pems, new String[] { \"src/test/fixture/testPems/caBundled.pems\", \"src/test/fixture/testPems/Org1MSP_CA.pem\" });",
        "context": "if (null != pem && !pem.isEmpty()) {\ntry {\ntry (BufferedInputStream bis = new BufferedInputStream(new ByteArrayInputStream(Files.readAllBytes(Paths.get(pem))))) {\ncryptoPrimitives.addCACertificatesToTrustStore(bis);\n}\n} catch (IOException e) {\nthrow new InvalidArgumentException(format(\"Unable to add CA certificate, can't open certificate file %s\", new File(pem).getAbsolutePath()));\n}\n}\n}",
        "context_loc": 10,
        "filename": "HFCAClient",
        "index": 296,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 1396,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "hyperledger_fabric-sdk-java",
        "source": "Unit",
        "stmt": "                        String[] pems = pemFile.split(\"[ \\t]*,[ \\t]*\");",
        "tgt_lineno": 1605
    },
    {
        "code": "new Here(\"Unit\", 90).given(match, \"22.xml\").checkTrue(group());",
        "context": "int matchNo = Integer.parseInt(matchStingNo);\nif (!(vo instanceof List)) {\nthrow new ChaincodeEndorsementPolicyParseException(format(\"%s expected to have list but found %s.\", key, String.valueOf(vo)));\n}\n@SuppressWarnings(\"unchecked\")\nfinal List<Map<?, ?>> voList = (List<Map<?, ?>>) vo;\nif (voList.size() < matchNo) {\nthrow new ChaincodeEndorsementPolicyParseException(format(\"%s expected to have at least %d items to match but only found %d.\", key, matchNo, voList.size()));\n}\nSignaturePolicy.NOutOf.Builder spBuilder = SignaturePolicy.NOutOf.newBuilder().setN(matchNo);\nfor (Map<?, ?> nlo : voList) {\nSignaturePolicy sp = parsePolicy(identities, nlo);\nspBuilder.addRules(sp);\n}\nreturn SignaturePolicy.newBuilder().setNOutOf(spBuilder.build()).build();",
        "context_loc": 15,
        "filename": "ChaincodeEndorsementPolicy",
        "index": 297,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 80,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "hyperledger_fabric-sdk-java",
        "source": "Unit",
        "stmt": "                if (match.matches() && match.groupCount() == 1) {",
        "tgt_lineno": 90
    },
    {
        "code": "new Here(\"Unit\", 92).given(match, \"23.xml\").checkEq(matchStingNo, \"1\");",
        "context": "if (!(vo instanceof List)) {\nthrow new ChaincodeEndorsementPolicyParseException(format(\"%s expected to have list but found %s.\", key, String.valueOf(vo)));\n}\n@SuppressWarnings(\"unchecked\")\nfinal List<Map<?, ?>> voList = (List<Map<?, ?>>) vo;\nif (voList.size() < matchNo) {\nthrow new ChaincodeEndorsementPolicyParseException(format(\"%s expected to have at least %d items to match but only found %d.\", key, matchNo, voList.size()));\n}\nSignaturePolicy.NOutOf.Builder spBuilder = SignaturePolicy.NOutOf.newBuilder().setN(matchNo);\nfor (Map<?, ?> nlo : voList) {\nSignaturePolicy sp = parsePolicy(identities, nlo);\nspBuilder.addRules(sp);\n}\nreturn SignaturePolicy.newBuilder().setNOutOf(spBuilder.build()).build();",
        "context_loc": 14,
        "filename": "ChaincodeEndorsementPolicy",
        "index": 298,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 82,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "hyperledger_fabric-sdk-java",
        "source": "Unit",
        "stmt": "                    String matchStingNo = match.group(1).trim();",
        "tgt_lineno": 92
    },
    {
        "code": "new Here(\"Unit\", 125).given(hiddenIndices, new int[] { 2, 3 }).given(rhIndex, 3).checkEq(hiddenRHIndex, 1);",
        "context": "// rhIndex is not present, set to last index position\nhiddenRHIndex = hiddenIndices.length;\n}\nbyte[] nonRevokedProofHashData = prover.getFSContribution(BIG.fromBytes(c.getAttrs()[rhIndex]), rAttrs[hiddenRHIndex], cri);\nif (nonRevokedProofHashData == null) {\nthrow new RuntimeException(\"Failed to compute non-revoked proof\");\n}\nECP t1 = aPrime.mul2(re, ipk.getHRand(), rR2);\nECP t2 = PAIR.G1mul(ipk.getHRand(), rSPrime);\nt2.add(bPrime.mul2(rR3, ipk.getHsk(), rsk));\nfor (int i = 0; i < hiddenIndices.length / 2; i++) {\nt2.add(ipk.getHAttrs()[hiddenIndices[2 * i]].mul2(rAttrs[2 * i], ipk.getHAttrs()[hiddenIndices[2 * i + 1]], rAttrs[2 * i + 1]));\n}\nif (hiddenIndices.length % 2 != 0) {\nt2.add(PAIR.G1mul(ipk.getHAttrs()[hiddenIndices[hiddenIndices.length - 1]], rAttrs[hiddenIndices.length - 1]));\n}\nECP t3 = ipk.getHsk().mul2(rsk, ipk.getHRand(), rRNym);\n// create proofData such that it can contain the sign label, 7 elements in G1 (each of size 2*FIELD_BYTES+1),\n// the ipk hash, the disclosure array, and the message\nbyte[] proofData = new byte[0];\nproofData = IdemixUtils.append(proofData, SIGN_LABEL.getBytes());\nproofData = IdemixUtils.append(proofData, IdemixUtils.ecpToBytes(t1));\nproofData = IdemixUtils.append(proofData, IdemixUtils.ecpToBytes(t2));\nproofData = IdemixUtils.append(proofData, IdemixUtils.ecpToBytes(t3));\nproofData = IdemixUtils.append(proofData, IdemixUtils.ecpToBytes(aPrime));\nproofData = IdemixUtils.append(proofData, IdemixUtils.ecpToBytes(aBar));\nproofData = IdemixUtils.append(proofData, IdemixUtils.ecpToBytes(bPrime));\nproofData = IdemixUtils.append(proofData, IdemixUtils.ecpToBytes(pseudonym.getNym()));\nproofData = IdemixUtils.append(proofData, ipk.getHash());\nproofData = IdemixUtils.append(proofData, disclosure);\nproofData = IdemixUtils.append(proofData, msg);\nBIG cvalue = IdemixUtils.hashModOrder(proofData);\nbyte[] finalProofData = new byte[0];\nfinalProofData = IdemixUtils.append(finalProofData, IdemixUtils.bigToBytes(cvalue));\nfinalProofData = IdemixUtils.append(finalProofData, IdemixUtils.bigToBytes(nonce));\nproofC = IdemixUtils.hashModOrder(finalProofData);\nproofSSk = IdemixUtils.modAdd(rsk, BIG.modmul(proofC, sk, IdemixUtils.GROUP_ORDER), IdemixUtils.GROUP_ORDER);\nproofSE = IdemixUtils.modSub(re, BIG.modmul(proofC, c.getE(), IdemixUtils.GROUP_ORDER), IdemixUtils.GROUP_ORDER);\nproofSR2 = IdemixUtils.modAdd(rR2, BIG.modmul(proofC, r2, IdemixUtils.GROUP_ORDER), IdemixUtils.GROUP_ORDER);\nproofSR3 = IdemixUtils.modSub(rR3, BIG.modmul(proofC, r3, IdemixUtils.GROUP_ORDER), IdemixUtils.GROUP_ORDER);\nproofSSPrime = IdemixUtils.modAdd(rSPrime, BIG.modmul(proofC, sPrime, IdemixUtils.GROUP_ORDER), IdemixUtils.GROUP_ORDER);\nproofSRNym = IdemixUtils.modAdd(rRNym, BIG.modmul(proofC, pseudonym.getRandNym(), IdemixUtils.GROUP_ORDER), IdemixUtils.GROUP_ORDER);\nnym = new ECP();\nnym.copy(pseudonym.getNym());\nproofSAttrs = new BIG[hiddenIndices.length];\nfor (int i = 0; i < hiddenIndices.length; i++) {\nproofSAttrs[i] = new BIG(rAttrs[i]);\nproofSAttrs[i].add(BIG.modmul(proofC, BIG.fromBytes(c.getAttrs()[hiddenIndices[i]]), IdemixUtils.GROUP_ORDER));\nproofSAttrs[i].mod(IdemixUtils.GROUP_ORDER);\n}\n// include non-revocation proof in signature\nthis.revocationPk = cri.getEpochPk();\nthis.revocationPKSig = cri.getEpochPkSig().toByteArray();\nthis.epoch = cri.getEpoch();\nthis.nonRevocationProof = prover.getNonRevocationProof(this.proofC);",
        "context_loc": 55,
        "filename": "IdemixSignature",
        "index": 299,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 132,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 1,
        "num_vars": 3,
        "project": "hyperledger_fabric-sdk-java",
        "source": "Unit",
        "stmt": "        int hiddenRHIndex = Ints.indexOf(hiddenIndices, rhIndex);",
        "tgt_lineno": 125
    },
    {
        "code": "new Here(\"Unit\", 311).given(hiddenIndices, new int[] { 2, 3 }).given(rhIndex, 3).checkEq(hiddenRHIndex, 1);",
        "context": "// rhIndex is not present, set to last index position\nhiddenRHIndex = hiddenIndices.length;\n}\nBIG proofSRh = proofSAttrs[hiddenRHIndex];\nbyte[] nonRevokedProofBytes = nonRevokedVerifier.recomputeFSContribution(this.nonRevocationProof, proofC, IdemixUtils.transformFromProto(this.revocationPk), proofSRh);\nif (nonRevokedProofBytes == null) {\nreturn false;\n}\n// create proofData such that it can contain the sign label, 7 elements in G1 (each of size 2*FIELD_BYTES+1),\n// the ipk hash, the disclosure array, and the message\nbyte[] proofData = new byte[0];\nproofData = IdemixUtils.append(proofData, SIGN_LABEL.getBytes());\nproofData = IdemixUtils.append(proofData, IdemixUtils.ecpToBytes(t1));\nproofData = IdemixUtils.append(proofData, IdemixUtils.ecpToBytes(t2));\nproofData = IdemixUtils.append(proofData, IdemixUtils.ecpToBytes(t3));\nproofData = IdemixUtils.append(proofData, IdemixUtils.ecpToBytes(aPrime));\nproofData = IdemixUtils.append(proofData, IdemixUtils.ecpToBytes(aBar));\nproofData = IdemixUtils.append(proofData, IdemixUtils.ecpToBytes(bPrime));\nproofData = IdemixUtils.append(proofData, IdemixUtils.ecpToBytes(nym));\nproofData = IdemixUtils.append(proofData, ipk.getHash());\nproofData = IdemixUtils.append(proofData, disclosure);\nproofData = IdemixUtils.append(proofData, msg);\nBIG cvalue = IdemixUtils.hashModOrder(proofData);\nbyte[] finalProofData = new byte[0];\nfinalProofData = IdemixUtils.append(finalProofData, IdemixUtils.bigToBytes(cvalue));\nfinalProofData = IdemixUtils.append(finalProofData, IdemixUtils.bigToBytes(nonce));\nbyte[] hashedProofData = IdemixUtils.bigToBytes(IdemixUtils.hashModOrder(finalProofData));\nreturn Arrays.equals(IdemixUtils.bigToBytes(proofC), hashedProofData);",
        "context_loc": 28,
        "filename": "IdemixSignature",
        "index": 300,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 295,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 1,
        "num_vars": 3,
        "project": "hyperledger_fabric-sdk-java",
        "source": "Unit",
        "stmt": "        int hiddenRHIndex = Ints.indexOf(hiddenIndices, rhIndex);",
        "tgt_lineno": 311
    },
    {
        "code": "new Here(\"Unit\", 310).given(m, \"19.xml\").checkFalse(group());",
        "context": "props.setProperty(\"host\", m.group(2));\nprops.setProperty(\"port\", m.group(3));\nString protocol = props.getProperty(\"protocol\");\nif (!\"grpc\".equals(protocol) && !\"grpcs\".equals(protocol)) {\nthrow new RuntimeException(format(\"Invalid protocol expected grpc or grpcs and found %s.\", protocol));\n}",
        "context_loc": 6,
        "filename": "Utils",
        "index": 301,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 274,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "hyperledger_fabric-sdk-java",
        "source": "Unit",
        "stmt": "        if (m.matches()) {",
        "tgt_lineno": 310
    },
    {
        "code": "new Here(\"Unit\", 289).given(match, \"22.xml\").checkTrue(group());",
        "context": "int matchNo = Integer.parseInt(matchStingNo);\nif (vo.size() < matchNo) {\nthrow new ChaincodeCollectionConfigurationException(format(\"%s expected to have at least %d items to match but only found %d.\", key, matchNo, vo.size()));\n}\nSignaturePolicy.NOutOf.Builder spBuilder = SignaturePolicy.NOutOf.newBuilder().setN(matchNo);\nfor (int i = vo.size() - 1; i >= 0; --i) {\nJsonValue jsonValue = vo.get(i);\nif (jsonValue.getValueType() != JsonValue.ValueType.OBJECT) {\nthrow new ChaincodeCollectionConfigurationException(format(\"Expected object type in Nof but got %s\", jsonValue.getValueType().name()));\n}\nSignaturePolicy sp = parsePolicy(identities, jsonValue.asJsonObject());\nspBuilder.addRules(sp);\n}\nreturn SignaturePolicy.newBuilder().setNOutOf(spBuilder.build()).build();",
        "context_loc": 14,
        "filename": "ChaincodeCollectionConfiguration",
        "index": 302,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 242,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "hyperledger_fabric-sdk-java",
        "source": "Unit",
        "stmt": "            if (match.matches() && match.groupCount() == 1) {",
        "tgt_lineno": 289
    },
    {
        "code": "new Here(\"Unit\", 291).given(match, \"23.xml\").checkEq(matchStingNo, \"1\");",
        "context": "if (vo.size() < matchNo) {\nthrow new ChaincodeCollectionConfigurationException(format(\"%s expected to have at least %d items to match but only found %d.\", key, matchNo, vo.size()));\n}\nSignaturePolicy.NOutOf.Builder spBuilder = SignaturePolicy.NOutOf.newBuilder().setN(matchNo);\nfor (int i = vo.size() - 1; i >= 0; --i) {\nJsonValue jsonValue = vo.get(i);\nif (jsonValue.getValueType() != JsonValue.ValueType.OBJECT) {\nthrow new ChaincodeCollectionConfigurationException(format(\"Expected object type in Nof but got %s\", jsonValue.getValueType().name()));\n}\nSignaturePolicy sp = parsePolicy(identities, jsonValue.asJsonObject());\nspBuilder.addRules(sp);\n}\nreturn SignaturePolicy.newBuilder().setNOutOf(spBuilder.build()).build();",
        "context_loc": 13,
        "filename": "ChaincodeCollectionConfiguration",
        "index": 303,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 244,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "hyperledger_fabric-sdk-java",
        "source": "Unit",
        "stmt": "                String matchStingNo = match.group(1).trim();",
        "tgt_lineno": 291
    },
    {
        "code": "new Here(\"Unit\", 1788).given(endpoint, \"1.1.1.1:10\").checkEq(split, new String[] { \"1.1.1.1\", \"10\" });",
        "context": "Object ret = config.getOrDefault(\"org.hyperledger.fabric.sdk.discovery.default.\" + prop, def);\nret = config.getOrDefault(\"org.hyperledger.fabric.sdk.discovery.mspid.\" + prop + \".\" + mspid, ret);\nret = config.getOrDefault(\"org.hyperledger.fabric.sdk.discovery.endpoint.\" + prop + \".\" + endpointHost, ret);\nret = config.getOrDefault(\"org.hyperledger.fabric.sdk.discovery.endpoint.\" + prop + \".\" + endpoint, ret);\nreturn ret;",
        "context_loc": 5,
        "filename": "Channel",
        "index": 304,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 1537,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "hyperledger_fabric-sdk-java",
        "source": "Unit",
        "stmt": "        final String[] split = endpoint.split(\":\");",
        "tgt_lineno": 1788
    },
    {
        "code": "new Here(\"Unit\", 118).given(pemFile, \"src/test/fixture/testPems/caBundled.pems,src/test/fixture/testPems/IMBAD,src/test/fixture/testPems/Org1MSP_CA.pem\").checkEq(pems, new String[] { \"src/test/fixture/testPems/caBundled.pems\", \"src/test/fixture/testPems/IMBAD\", \"src/test/fixture/testPems/Org1MSP_CA.pem\" });",
        "context": "if (null != pem && !pem.isEmpty()) {\ntry {\nbis.write(Files.readAllBytes(Paths.get(pem)));\n} catch (IOException e) {\nthrow new RuntimeException(format(\"Failed to read certificate file %s\", new File(pem).getAbsolutePath()), e);\n}\n}\n}",
        "context_loc": 8,
        "filename": "Endpoint",
        "index": 305,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 119,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "hyperledger_fabric-sdk-java",
        "source": "Unit",
        "stmt": "                        String[] pems = pemFile.split(\"[ \\t]*,[ \\t]*\");",
        "tgt_lineno": 118
    },
    {
        "code": "new Here(\"Unit\", 345).given(match, \"47.xml\").checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "Endpoint",
        "index": 306,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 307,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "hyperledger_fabric-sdk-java",
        "source": "Unit",
        "stmt": "            if (match.matches() && match.groupCount() == 1) {",
        "tgt_lineno": 345
    },
    {
        "code": "new Here(\"Unit\", 345).given(match, \"53.xml\").checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "Endpoint",
        "index": 307,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 308,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "hyperledger_fabric-sdk-java",
        "source": "Unit",
        "stmt": "            if (match.matches() && match.groupCount() == 1) {",
        "tgt_lineno": 345
    },
    {
        "code": "new Here(\"Unit\", 346).given(match, \"54.xml\").checkEq(methodName, \"keepAliveWithoutCalls\");",
        "context": "if (null == methodName || \"forAddress\".equals(methodName) || \"build\".equals(methodName)) {\ncontinue;\n}\nObject parmsArrayO = es.getValue();\nObject[] parmsArray;\nif (!(parmsArrayO instanceof Object[])) {\nparmsArray = new Object[] { parmsArrayO };\n} else {\nparmsArray = (Object[]) parmsArrayO;\n}\nClass<?>[] classParms = new Class<?>[parmsArray.length];\nint i = -1;\nfor (Object oparm : parmsArray) {\n++i;\nif (null == oparm) {\nclassParms[i] = Object.class;\ncontinue;\n}\nClass<?> unwrapped = WRAPPERS_TO_PRIM.get(oparm.getClass());\nif (null != unwrapped) {\nclassParms[i] = unwrapped;\n} else {\nClass<?> clz = oparm.getClass();\nClass<?> ecz = clz.getEnclosingClass();\nif (null != ecz && ecz.isEnum()) {\nclz = ecz;\n}\nclassParms[i] = clz;\n}\n}\nfinal Method method = channelBuilder.getClass().getMethod(methodName, classParms);\nmethod.invoke(channelBuilder, parmsArray);\nif (logger.isTraceEnabled()) {\nStringBuilder sb = new StringBuilder(200);\nString sep = \"\";\nfor (Object p : parmsArray) {\nsb.append(sep).append(p + \"\");\nsep = \", \";\n}\nlogger.trace(format(\"Endpoint with url: %s set managed channel builder method %s (%s) \", url, method, sb.toString()));\n}",
        "context_loc": 41,
        "filename": "Endpoint",
        "index": 308,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 310,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "hyperledger_fabric-sdk-java",
        "source": "Unit",
        "stmt": "                methodName = match.group(1).trim();",
        "tgt_lineno": 346
    },
    {
        "code": "new Here(\"Randoop\", 365).given(property, \"org.hyperledger.fabric.sdk.crypto.default_signature_algorithm\").checkEq(cmaps, new String[] { \"org.hyperledger.fabric.sdk.crypto.default_signature_algorithm\" });",
        "context": "String[] ep = mape.split(\"[ \\t]*=[ \\t]*\");\nif (ep.length != 2) {\nlogger.warn(format(\"Bad curve mapping for %s in property %s\", mape, SECURITY_CURVE_MAPPING));\ncontinue;\n}\ntry {\nint parseInt = Integer.parseInt(ep[0]);\nlcurveMapping.put(parseInt, ep[1]);\n} catch (NumberFormatException e) {\nlogger.warn(format(\"Bad curve mapping. Integer needed for strength %s for %s in property %s\", ep[0], mape, SECURITY_CURVE_MAPPING));\n}\n}",
        "context_loc": 12,
        "filename": "Config",
        "index": 309,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 354,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "hyperledger_fabric-sdk-java",
        "source": "Randoop",
        "stmt": "            String[] cmaps = property.split(\"[ \\t]*:[ \\t]*\");",
        "tgt_lineno": 365
    },
    {
        "code": "new Here(\"Unit\", 368).given(mape, \"256=secp256r1\").checkEq(ep, new String[] { \"256\", \"secp256r1\" });",
        "context": "logger.warn(format(\"Bad curve mapping for %s in property %s\", mape, SECURITY_CURVE_MAPPING));\ncontinue;\n}\ntry {\nint parseInt = Integer.parseInt(ep[0]);\nlcurveMapping.put(parseInt, ep[1]);\n} catch (NumberFormatException e) {\nlogger.warn(format(\"Bad curve mapping. Integer needed for strength %s for %s in property %s\", ep[0], mape, SECURITY_CURVE_MAPPING));\n}",
        "context_loc": 9,
        "filename": "Config",
        "index": 310,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 357,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "hyperledger_fabric-sdk-java",
        "source": "Unit",
        "stmt": "                String[] ep = mape.split(\"[ \\t]*=[ \\t]*\");",
        "tgt_lineno": 368
    },
    {
        "code": "new Here(\"Unit\", 34).given(role.value, 2).given(mask, 0).checkEq(mask, 2);",
        "context": "return mask;",
        "context_loc": 1,
        "filename": "IdemixRoles",
        "index": 311,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 35,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 1,
        "num_vars": 3,
        "project": "hyperledger_fabric-sdk-java",
        "source": "Unit",
        "stmt": "            mask = mask | role.value;",
        "tgt_lineno": 34
    },
    {
        "code": "new Here(\"Unit\", 47).given(role, \"67.xml\").given(mask, 0).checkEq(mask, 1);",
        "context": "return mask;",
        "context_loc": 1,
        "filename": "IdemixRoles",
        "index": 312,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 49,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 1,
        "num_vars": 3,
        "project": "hyperledger_fabric-sdk-java",
        "source": "Unit",
        "stmt": "            mask = mask | getIdemixRoleFromMSPRole(role);",
        "tgt_lineno": 47
    },
    {
        "code": "new Here(\"Unit\", 113).given(KeyUsage.keyEncipherment, 32).given(KeyUsage.digitalSignature, 128).checkEq(usage, \"46.xml\");",
        "context": "// Extended key usage\ncertBuilder.addExtension(Extension.extendedKeyUsage, false, certType.keyUsage().getEncoded());\nif (san != null) {\naddSAN(certBuilder, san);\n}\nContentSigner signer = new JcaContentSignerBuilder(signatureAlgorithm).build(keyPair.getPrivate());\nX509CertificateHolder holder = certBuilder.build(signer);\nJcaX509CertificateConverter converter = new JcaX509CertificateConverter();\nconverter.setProvider(new BouncyCastleProvider());\nreturn converter.getCertificate(holder);",
        "context_loc": 10,
        "filename": "TLSCertificateBuilder",
        "index": 313,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 117,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 1,
        "num_vars": 3,
        "project": "hyperledger_fabric-sdk-java",
        "source": "Unit",
        "stmt": "        KeyUsage usage = new KeyUsage(KeyUsage.keyEncipherment | KeyUsage.digitalSignature);",
        "tgt_lineno": 113
    },
    {
        "code": "new Here(\"Unit\", 118).given(failCount, 5).checkEq(result.summary, \"5 tests failed.\");",
        "context": "if (maxTests > 0) {\nint printSize = 0;\nfor (TestResult failedTest : failedAndFilteredTests) {\nif (regressionFilter(failedTest)) {\nprintSize = addTest(result, printSize, failedTest);\n}\n}\nresult.otherFailedTests = (failCount > result.tests.size());\nresult.truncatedOutput = (printSize > maxLength);\n}",
        "context_loc": 10,
        "filename": "FailedTestsContent",
        "index": 314,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 118,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "jenkinsci_email-ext-plugin",
        "source": "Unit",
        "stmt": "            result.summary = String.format(\"%d tests failed.\", failCount);",
        "tgt_lineno": 118
    },
    {
        "code": "new Here(\"Unit\", 111).given(addr, \"kutzi@xxx.com\").given(user, \"5.xml\").checkEq(message, \"Resolved kutzi to kutzi@xxx.com\");",
        "context": "",
        "context_loc": 0,
        "filename": "EmailRecipientUtils",
        "index": 315,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 108,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 1,
        "num_vars": 3,
        "project": "jenkinsci_email-ext-plugin",
        "source": "Unit",
        "stmt": "                String message = String.format(\"Resolved %s to %s\", user.getId(), addr);",
        "tgt_lineno": 111
    },
    {
        "code": "new Here(\"Unit\", 136).given(input, \"mickey@disney.com donald@disney.com goofy@disney.com pluto@disney.com\").checkEq(input, \"mickey@disney.com,donald@disney.com,goofy@disney.com,pluto@disney.com\");",
        "context": "input = input.replace(';', ',');\nreturn input;",
        "context_loc": 2,
        "filename": "EmailRecipientUtils",
        "index": 316,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 134,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "jenkinsci_email-ext-plugin",
        "source": "Unit",
        "stmt": "            input = input.replace(\" \", \",\");",
        "tgt_lineno": 136
    },
    {
        "code": "new Here(\"Unit\", 498).given(value, \"\").checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "ExtendedEmailPublisherDescriptor",
        "index": 317,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 497,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "jenkinsci_email-ext-plugin",
        "source": "Unit",
        "stmt": "        if (value.matches(\"@[A-Za-z0-9.\\\\-]+\") || Util.fixEmptyAndTrim(value) == null) {",
        "tgt_lineno": 498
    },
    {
        "code": "new Here(\"Unit\", 498).given(value, \"@example.com\").checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "ExtendedEmailPublisherDescriptor",
        "index": 318,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 498,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "jenkinsci_email-ext-plugin",
        "source": "Unit",
        "stmt": "        if (value.matches(\"@[A-Za-z0-9.\\\\-]+\") || Util.fixEmptyAndTrim(value) == null) {",
        "tgt_lineno": 498
    },
    {
        "code": "new Here(\"Unit\", 300).given(c, 'u').given(backSlashCnt, 1).checkTrue(group());",
        "context": "bufpos = bufsize - 1;\n}\nbreak;",
        "context_loc": 3,
        "filename": "JavaCharStream",
        "index": 319,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 268,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 2,
        "num_vars": 3,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                        if ((c == 'u') && ((backSlashCnt & 1) == 1)) {",
        "tgt_lineno": 300
    },
    {
        "code": "new Here(\"Unit\", 300).given(c, 'n').given(backSlashCnt, 1).checkFalse(group());",
        "context": "bufpos = bufsize - 1;\n}\nbreak;",
        "context_loc": 3,
        "filename": "JavaCharStream",
        "index": 320,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 269,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 2,
        "num_vars": 3,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                        if ((c == 'u') && ((backSlashCnt & 1) == 1)) {",
        "tgt_lineno": 300
    },
    {
        "code": "new Here(\"Unit\", 3206).given(jj_la1_0, new int[] { 2, 4, 8, 96, 96, 384, 384, 1536, 1536, 6144, 6144, 24576, 24576, 491520, 98304, 393216, 491520, 536346624, 1572864, 6291456, 25165824, 100663296, 536346624, -536870912, 1610612736, -2147483648, 0, -536870912, 0, 0, 0, 0, 268435456, 0, 0, 268435472, 0, 0, 0, 0, 0, 0, 0, 2, 268435472, 0, 2, 268435472, 0, 0, 0, 16, 0, 0, 0, 2, 268435472, 2, 268435472, 2, 268435472, 2, 268435472, 0 }).given(i, 35).given(j, 0).checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParser",
        "index": 321,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 4002,
        "num_checks": 1,
        "num_givens": 3,
        "num_itests": 2,
        "num_vars": 4,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                    if ((jj_la1_0[i] & (1 << j)) != 0) {",
        "tgt_lineno": 3206
    },
    {
        "code": "new Here(\"Unit\", 3206).given(jj_la1_0, new int[] { 2, 4, 8, 96, 96, 384, 384, 1536, 1536, 6144, 6144, 24576, 24576, 491520, 98304, 393216, 491520, 536346624, 1572864, 6291456, 25165824, 100663296, 536346624, -536870912, 1610612736, -2147483648, 0, -536870912, 0, 0, 0, 0, 268435456, 0, 0, 268435472, 0, 0, 0, 0, 0, 0, 0, 2, 268435472, 0, 2, 268435472, 0, 0, 0, 16, 0, 0, 0, 2, 268435472, 2, 268435472, 2, 268435472, 2, 268435472, 0 }).given(i, 35).given(j, 4).checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParser",
        "index": 322,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 4003,
        "num_checks": 1,
        "num_givens": 3,
        "num_itests": 2,
        "num_vars": 4,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                    if ((jj_la1_0[i] & (1 << j)) != 0) {",
        "tgt_lineno": 3206
    },
    {
        "code": "new Here(\"Unit\", 3209).given(jj_la1_1, new int[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 1, 6, 7, 24, 24, 224, 224, 512, 2048, 1024, 56611608, 1054720, 0, 4194304, 4198400, 1054720, 0, 0, 0, 56611608, 16777216, 0, 56611608, 114688, 16777216, 5246976, 0, 0, 0, 2048, 0, 56611608, 0, 56611608, 0, 56611608, 0, 56611608, 1048576 }).given(i, 35).given(j, 3).checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParser",
        "index": 323,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 4007,
        "num_checks": 1,
        "num_givens": 3,
        "num_itests": 2,
        "num_vars": 4,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                    if ((jj_la1_1[i] & (1 << j)) != 0) {",
        "tgt_lineno": 3209
    },
    {
        "code": "new Here(\"Unit\", 3209).given(jj_la1_1, new int[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 1, 6, 7, 24, 24, 224, 224, 512, 2048, 1024, 56611608, 1054720, 0, 4194304, 4198400, 1054720, 0, 0, 0, 56611608, 16777216, 0, 56611608, 114688, 16777216, 5246976, 0, 0, 0, 2048, 0, 56611608, 0, 56611608, 0, 56611608, 0, 56611608, 1048576 }).given(i, 35).given(j, 0).checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParser",
        "index": 324,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 4008,
        "num_checks": 1,
        "num_givens": 3,
        "num_itests": 2,
        "num_vars": 4,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                    if ((jj_la1_1[i] & (1 << j)) != 0) {",
        "tgt_lineno": 3209
    },
    {
        "code": "new Here(\"Unit\", 3212).given(i, 35).given(j, 0).given(jj_la1_2, new int[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 233993, 8, 1, 0, 1, 8, 233984, 1, 0, 233993, 0, 0, 233993, 233984, 0, 9, 0, 1, 1, 0, 0, 233993, 0, 233993, 0, 233993, 0, 233993, 8 }).checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParser",
        "index": 325,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 4012,
        "num_checks": 1,
        "num_givens": 3,
        "num_itests": 2,
        "num_vars": 4,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                    if ((jj_la1_2[i] & (1 << j)) != 0) {",
        "tgt_lineno": 3212
    },
    {
        "code": "new Here(\"Unit\", 3212).given(i, 35).given(j, 1).given(jj_la1_2, new int[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 233993, 8, 1, 0, 1, 8, 233984, 1, 0, 233993, 0, 0, 233993, 233984, 0, 9, 0, 1, 1, 0, 0, 233993, 0, 233993, 0, 233993, 0, 233993, 8 }).checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParser",
        "index": 326,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 4013,
        "num_checks": 1,
        "num_givens": 3,
        "num_itests": 2,
        "num_vars": 4,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                    if ((jj_la1_2[i] & (1 << j)) != 0) {",
        "tgt_lineno": 3212
    },
    {
        "code": "new Here(\"Unit\", 226).given(expr, \"'%'\").checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "ASTAdd",
        "index": 327,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 171,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                        if (expr.indexOf('\\'') >= 0) {",
        "tgt_lineno": 226
    },
    {
        "code": "new Here(\"Unit\", 244).given(expr, \"te\").checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "ASTAdd",
        "index": 328,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 181,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                                    new Here(\"Unit\", 244).given(expr, \"\\\");clearElement(&quot;testFtpMessage&quot;)\").checkTrue(group());",
        "tgt_lineno": 244
    },
    {
        "code": "new Here(\"Unit\", 61).given(className, \"BogusClass\").checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "DefaultClassResolver",
        "index": 329,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 62,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "            if (className.indexOf('.') > -1) {",
        "tgt_lineno": 61
    },
    {
        "code": "new Here(\"Unit\", 100).given(active0, 140737488355328L).checkTrue(group());",
        "context": "return 1;",
        "context_loc": 1,
        "filename": "OgnlParserTokenManager",
        "index": 330,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 126,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 3,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                if ((active0 & 0x201c4055d555540L) != 0L) {",
        "tgt_lineno": 100
    },
    {
        "code": "new Here(\"Unit\", 100).given(active0, 71303168L).checkTrue(group());",
        "context": "return 1;",
        "context_loc": 1,
        "filename": "OgnlParserTokenManager",
        "index": 331,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 127,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 3,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                if ((active0 & 0x201c4055d555540L) != 0L) {",
        "tgt_lineno": 100
    },
    {
        "code": "new Here(\"Unit\", 100).given(active0, 131072L).checkFalse(group());",
        "context": "return 1;",
        "context_loc": 1,
        "filename": "OgnlParserTokenManager",
        "index": 332,
        "itest_idx": 2,
        "itest_type": "R2",
        "lineno": 128,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 3,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                if ((active0 & 0x201c4055d555540L) != 0L) {",
        "tgt_lineno": 100
    },
    {
        "code": "new Here(\"Randoop\", 105).given(active0, 131072L).checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 333,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 133,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Randoop",
        "stmt": "                if ((active0 & 0x400000000000000L) != 0L) {",
        "tgt_lineno": 105
    },
    {
        "code": "new Here(\"Randoop\", 107).given(active0, 131072L).checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 334,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 137,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Randoop",
        "stmt": "                if ((active0 & 0x10000000000000L) != 0L) {",
        "tgt_lineno": 107
    },
    {
        "code": "new Here(\"Unit\", 109).given(active0, 131072L).checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 335,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 141,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                if ((active0 & 0x80000000000L) != 0L) {",
        "tgt_lineno": 109
    },
    {
        "code": "new Here(\"Unit\", 113).given(active0, 4398046511104L).checkFalse(group());",
        "context": "jjmatchedKind = 64;\njjmatchedPos = 1;\n}\nreturn 1;",
        "context_loc": 4,
        "filename": "OgnlParserTokenManager",
        "index": 336,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 147,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                if ((active0 & 0x201c00550045500L) != 0L) {",
        "tgt_lineno": 113
    },
    {
        "code": "new Here(\"Unit\", 113).given(active0, 5368709120L).checkTrue(group());",
        "context": "jjmatchedKind = 64;\njjmatchedPos = 1;\n}\nreturn 1;",
        "context_loc": 4,
        "filename": "OgnlParserTokenManager",
        "index": 337,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 148,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                if ((active0 & 0x201c00550045500L) != 0L) {",
        "tgt_lineno": 113
    },
    {
        "code": "new Here(\"Unit\", 122).given(active0, 4398046511104L).checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 338,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 156,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                if ((active0 & 0x4000d510040L) != 0L) {",
        "tgt_lineno": 122
    },
    {
        "code": "new Here(\"Unit\", 122).given(active0, 8589934592L).checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 339,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 157,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                if ((active0 & 0x4000d510040L) != 0L) {",
        "tgt_lineno": 122
    },
    {
        "code": "new Here(\"Unit\", 310).given(active0, 128L).checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 340,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 342,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                if ((active0 & 0x80L) != 0L) {",
        "tgt_lineno": 310
    },
    {
        "code": "new Here(\"Unit\", 314).given(active0, 545259520L).checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 341,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 348,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                if ((active0 & 0x20000000L) != 0L) {",
        "tgt_lineno": 314
    },
    {
        "code": "new Here(\"Unit\", 318).given(active0, 131072L).checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 342,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 354,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                if ((active0 & 0x8000L) != 0L) {",
        "tgt_lineno": 318
    },
    {
        "code": "new Here(\"Unit\", 318).given(active0, 32768L).checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 343,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 355,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                if ((active0 & 0x8000L) != 0L) {",
        "tgt_lineno": 318
    },
    {
        "code": "new Here(\"Unit\", 320).given(active0, 131072L).checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 344,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 358,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                } else if ((active0 & 0x20000L) != 0L) {",
        "tgt_lineno": 320
    },
    {
        "code": "new Here(\"Unit\", 320).given(active0, 545259520L).checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 345,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 359,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                } else if ((active0 & 0x20000L) != 0L) {",
        "tgt_lineno": 320
    },
    {
        "code": "new Here(\"Unit\", 322).given(active0, 10770972672L).checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 346,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 362,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                } else if ((active0 & 0x800000L) != 0L) {",
        "tgt_lineno": 322
    },
    {
        "code": "new Here(\"Unit\", 322).given(active0, 545259520L).checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 347,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 363,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                } else if ((active0 & 0x800000L) != 0L) {",
        "tgt_lineno": 322
    },
    {
        "code": "new Here(\"Unit\", 324).given(active0, 4096L).checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 348,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 366,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                } else if ((active0 & 0x2000000L) != 0L) {",
        "tgt_lineno": 324
    },
    {
        "code": "new Here(\"Unit\", 324).given(active0, 10770972672L).checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 349,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 367,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                } else if ((active0 & 0x2000000L) != 0L) {",
        "tgt_lineno": 324
    },
    {
        "code": "new Here(\"Unit\", 328).given(active0, 10770972672L).checkTrue(group());",
        "context": "jjmatchedPos = 1;",
        "context_loc": 1,
        "filename": "OgnlParserTokenManager",
        "index": 350,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 373,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                if ((active0 & 0x80000000L) != 0L) {",
        "tgt_lineno": 328
    },
    {
        "code": "new Here(\"Unit\", 341).given(active0, 256L).checkFalse(group());",
        "context": "jjmatchedPos = 1;",
        "context_loc": 1,
        "filename": "OgnlParserTokenManager",
        "index": 351,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 386,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                if ((active0 & 0x8000000L) != 0L) {",
        "tgt_lineno": 341
    },
    {
        "code": "new Here(\"Unit\", 341).given(active0, 4398180728832L).checkTrue(group());",
        "context": "jjmatchedPos = 1;",
        "context_loc": 1,
        "filename": "OgnlParserTokenManager",
        "index": 352,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 387,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                if ((active0 & 0x8000000L) != 0L) {",
        "tgt_lineno": 341
    },
    {
        "code": "new Here(\"Unit\", 350).given(active0, 65536L).checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 353,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 396,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                if ((active0 & 0x10000L) != 0L) {",
        "tgt_lineno": 350
    },
    {
        "code": "new Here(\"Unit\", 354).given(active0, 64L).checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 354,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 402,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                if ((active0 & 0x40L) != 0L) {",
        "tgt_lineno": 354
    },
    {
        "code": "new Here(\"Unit\", 354).given(active0, 256L).checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 355,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 403,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                if ((active0 & 0x40L) != 0L) {",
        "tgt_lineno": 354
    },
    {
        "code": "new Here(\"Unit\", 360).given(active0, 1688849860263936L).checkFalse(group());",
        "context": "jjmatchedPos = 1;",
        "context_loc": 1,
        "filename": "OgnlParserTokenManager",
        "index": 356,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 411,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                if ((active0 & 0x100000L) != 0L) {",
        "tgt_lineno": 360
    },
    {
        "code": "new Here(\"Unit\", 360).given(active0, 17825792L).checkTrue(group());",
        "context": "jjmatchedPos = 1;",
        "context_loc": 1,
        "filename": "OgnlParserTokenManager",
        "index": 357,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 412,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                if ((active0 & 0x100000L) != 0L) {",
        "tgt_lineno": 360
    },
    {
        "code": "new Here(\"Unit\", 365).given(active0, 71303168L).checkTrue(group());",
        "context": "jjmatchedPos = 1;",
        "context_loc": 1,
        "filename": "OgnlParserTokenManager",
        "index": 358,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 416,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                } else if ((active0 & 0x400000L) != 0L) {",
        "tgt_lineno": 365
    },
    {
        "code": "new Here(\"Unit\", 365).given(active0, 1688849860263936L).checkFalse(group());",
        "context": "jjmatchedPos = 1;",
        "context_loc": 1,
        "filename": "OgnlParserTokenManager",
        "index": 359,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 417,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                } else if ((active0 & 0x400000L) != 0L) {",
        "tgt_lineno": 365
    },
    {
        "code": "new Here(\"Unit\", 374).given(active0, 32L).checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 360,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 426,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                if ((active0 & 0x20L) != 0L) {",
        "tgt_lineno": 374
    },
    {
        "code": "new Here(\"Unit\", 384).given(active0, 144115188076118016L).given(old0, 71303168L).checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 361,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 438,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 1,
        "num_vars": 3,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "        if (((active0 &= old0)) == 0L) {",
        "tgt_lineno": 384
    },
    {
        "code": "new Here(\"Unit\", 394).given(active0, 8589934592L).checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 362,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 450,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                if ((active0 & 0x200000000L) != 0L) {",
        "tgt_lineno": 394
    },
    {
        "code": "new Here(\"Unit\", 398).given(active0, 4398046511104L).checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 363,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 456,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                if ((active0 & 0x100L) != 0L) {",
        "tgt_lineno": 398
    },
    {
        "code": "new Here(\"Unit\", 398).given(active0, 256L).checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 364,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 457,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                if ((active0 & 0x100L) != 0L) {",
        "tgt_lineno": 398
    },
    {
        "code": "new Here(\"Unit\", 402).given(active0, 16777216L).checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 365,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 463,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                if ((active0 & 0x1000000L) != 0L) {",
        "tgt_lineno": 402
    },
    {
        "code": "new Here(\"Unit\", 402).given(active0, 67108864L).checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 366,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 464,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                if ((active0 & 0x1000000L) != 0L) {",
        "tgt_lineno": 402
    },
    {
        "code": "new Here(\"Unit\", 404).given(active0, 67108864L).checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 367,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 467,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                } else if ((active0 & 0x4000000L) != 0L) {",
        "tgt_lineno": 404
    },
    {
        "code": "new Here(\"Unit\", 410).given(active0, 5368709120L).checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 368,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 475,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                if ((active0 & 0x40000000L) != 0L) {",
        "tgt_lineno": 410
    },
    {
        "code": "new Here(\"Unit\", 410).given(active0, 281474976710656L).checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 369,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 476,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                if ((active0 & 0x40000000L) != 0L) {",
        "tgt_lineno": 410
    },
    {
        "code": "new Here(\"Unit\", 418).given(active0, 144115188076118016L).checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 370,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 486,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                if ((active0 & 0x40000L) != 0L) {",
        "tgt_lineno": 418
    },
    {
        "code": "new Here(\"Unit\", 422).given(active0, 16384L).checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 371,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 492,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                if ((active0 & 0x400L) != 0L) {",
        "tgt_lineno": 422
    },
    {
        "code": "new Here(\"Unit\", 422).given(active0, 1024L).checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 372,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 493,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                if ((active0 & 0x400L) != 0L) {",
        "tgt_lineno": 422
    },
    {
        "code": "new Here(\"Unit\", 424).given(active0, 4096L).checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 373,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 496,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                } else if ((active0 & 0x1000L) != 0L) {",
        "tgt_lineno": 424
    },
    {
        "code": "new Here(\"Unit\", 424).given(active0, 5368709120L).checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 374,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 497,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                } else if ((active0 & 0x1000L) != 0L) {",
        "tgt_lineno": 424
    },
    {
        "code": "new Here(\"Unit\", 426).given(active0, 5368709120L).checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 375,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 500,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                } else if ((active0 & 0x100000000L) != 0L) {",
        "tgt_lineno": 426
    },
    {
        "code": "new Here(\"Unit\", 426).given(active0, 16384L).checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 376,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 501,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                } else if ((active0 & 0x100000000L) != 0L) {",
        "tgt_lineno": 426
    },
    {
        "code": "new Here(\"Unit\", 432).given(active0, 268435456L).checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 377,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 509,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                if ((active0 & 0x10000000L) != 0L) {",
        "tgt_lineno": 432
    },
    {
        "code": "new Here(\"Unit\", 432).given(active0, 4398046511104L).checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 378,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 510,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                if ((active0 & 0x10000000L) != 0L) {",
        "tgt_lineno": 432
    },
    {
        "code": "new Here(\"Unit\", 438).given(active0, 144115188076118016L).checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 379,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 518,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                if ((active0 & 0x200000000000000L) != 0L) {",
        "tgt_lineno": 438
    },
    {
        "code": "new Here(\"Unit\", 448).given(active0, 1125899906842624L).given(old0, 5368709120L).checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 380,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 530,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 1,
        "num_vars": 3,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "        if (((active0 &= old0)) == 0L) {",
        "tgt_lineno": 448
    },
    {
        "code": "new Here(\"Unit\", 458).given(active0, 16384L).checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 381,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 542,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                if ((active0 & 0x4000L) != 0L) {",
        "tgt_lineno": 458
    },
    {
        "code": "new Here(\"Unit\", 462).given(active0, 70368744177664L).checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 382,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 548,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                if ((active0 & 0x400000000000L) != 0L) {",
        "tgt_lineno": 462
    },
    {
        "code": "new Here(\"Randoop\", 468).given(active0, 281474976710656L).checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 383,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 556,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Randoop",
        "stmt": "                if ((active0 & 0x1000000000000L) != 0L) {",
        "tgt_lineno": 468
    },
    {
        "code": "new Here(\"Unit\", 474).given(active0, 17179869184L).checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 384,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 564,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                if ((active0 & 0x400000000L) != 0L) {",
        "tgt_lineno": 474
    },
    {
        "code": "new Here(\"Unit\", 488).given(active0, 4398046511104L).given(old0, 4398046511104L).checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 385,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 580,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 1,
        "num_vars": 3,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "        if (((active0 &= old0)) == 0L) {",
        "tgt_lineno": 488
    },
    {
        "code": "new Here(\"Unit\", 500).given(active0, 140737488355328L).checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 386,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 594,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                if ((active0 & 0x800000000000L) != 0L) {",
        "tgt_lineno": 500
    },
    {
        "code": "new Here(\"Unit\", 504).given(active0, 562949953421312L).checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 387,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 600,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                if ((active0 & 0x2000000000000L) != 0L) {",
        "tgt_lineno": 504
    },
    {
        "code": "new Here(\"Unit\", 508).given(active0, 1125899906842624L).checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 388,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 606,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                if ((active0 & 0x4000000000000L) != 0L) {",
        "tgt_lineno": 508
    },
    {
        "code": "new Here(\"Unit\", 518).given(active0, 4398046511104L).given(old0, 4398046511104L).checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 389,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 618,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 1,
        "num_vars": 3,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "        if (((active0 &= old0)) == 0L) {",
        "tgt_lineno": 518
    },
    {
        "code": "new Here(\"Unit\", 536).given(active0, 4398046511104L).given(old0, 4398046511104L).checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 390,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 638,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 1,
        "num_vars": 3,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "        if (((active0 &= old0)) == 0L) {",
        "tgt_lineno": 536
    },
    {
        "code": "new Here(\"Unit\", 554).given(active0, 4398046511104L).given(old0, 4398046511104L).checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 391,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 658,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 1,
        "num_vars": 3,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "        if (((active0 &= old0)) == 0L) {",
        "tgt_lineno": 554
    },
    {
        "code": "new Here(\"Unit\", 572).given(active0, 4398046511104L).given(old0, 4398046511104L).checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 392,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 678,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 1,
        "num_vars": 3,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "        if (((active0 &= old0)) == 0L) {",
        "tgt_lineno": 572
    },
    {
        "code": "new Here(\"Unit\", 590).given(active0, 4398046511104L).given(old0, 4398046511104L).checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 393,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 698,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 1,
        "num_vars": 3,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "        if (((active0 &= old0)) == 0L) {",
        "tgt_lineno": 590
    },
    {
        "code": "new Here(\"Unit\", 600).given(active0, 4398046511104L).checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 394,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 710,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                if ((active0 & 0x40000000000L) != 0L) {",
        "tgt_lineno": 600
    },
    {
        "code": "new Here(\"Unit\", 655).given(l, 9007199254740992L).checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 395,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 761,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                            if ((0x3ff000000000000L & l) != 0L) {",
        "tgt_lineno": 655
    },
    {
        "code": "new Here(\"Unit\", 665).given(l, 9007199254740992L).checkTrue(group());",
        "context": "kind = 80;\n}\njjCheckNAddTwoStates(6, 7);",
        "context_loc": 3,
        "filename": "OgnlParserTokenManager",
        "index": 396,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 772,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                            if ((0x3fe000000000000L & l) != 0L) {",
        "tgt_lineno": 665
    },
    {
        "code": "new Here(\"Unit\", 665).given(l, 281474976710656L).checkFalse(group());",
        "context": "kind = 80;\n}\njjCheckNAddTwoStates(6, 7);",
        "context_loc": 3,
        "filename": "OgnlParserTokenManager",
        "index": 397,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 773,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                            if ((0x3fe000000000000L & l) != 0L) {",
        "tgt_lineno": 665
    },
    {
        "code": "new Here(\"Unit\", 679).given(l, 1099511627776L).checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 398,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 787,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                            if ((0x3ff001000000000L & l) == 0L) {",
        "tgt_lineno": 679
    },
    {
        "code": "new Here(\"Unit\", 679).given(l, 562949953421312L).checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 399,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 788,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                            if ((0x3ff001000000000L & l) == 0L) {",
        "tgt_lineno": 679
    },
    {
        "code": "new Here(\"Unit\", 686).given(l, 68719476736L).checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 400,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 798,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                            if ((0x41000000000L & l) != 0L) {",
        "tgt_lineno": 686
    },
    {
        "code": "new Here(\"Unit\", 686).given(l, 281474976710656L).checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 401,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 799,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                            if ((0x41000000000L & l) != 0L) {",
        "tgt_lineno": 686
    },
    {
        "code": "new Here(\"Unit\", 697).given(l, 17592186044416L).checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 402,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 814,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                            if ((0x3ff000000000000L & l) == 0L) {",
        "tgt_lineno": 697
    },
    {
        "code": "new Here(\"Unit\", 697).given(l, 4503599627370496L).checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 403,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 815,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                            if ((0x3ff000000000000L & l) == 0L) {",
        "tgt_lineno": 697
    },
    {
        "code": "new Here(\"Unit\", 708).given(l, 562949953421312L).checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 404,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 830,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                            if ((0x3ff000000000000L & l) == 0L) {",
        "tgt_lineno": 708
    },
    {
        "code": "new Here(\"Unit\", 708).given(l, 1099511627776L).checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 405,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 831,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                            if ((0x3ff000000000000L & l) == 0L) {",
        "tgt_lineno": 708
    },
    {
        "code": "new Here(\"Unit\", 730).given(l, 4503599627370496L).checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 406,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 860,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                            if ((0x3ff000000000000L & l) != 0L) {",
        "tgt_lineno": 730
    },
    {
        "code": "new Here(\"Unit\", 730).given(l, 17592186044416L).checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 407,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 861,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                            if ((0x3ff000000000000L & l) != 0L) {",
        "tgt_lineno": 730
    },
    {
        "code": "new Here(\"Unit\", 741).given(l, 281474976710656L).checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 408,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 876,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                            if ((0x3ff000000000000L & l) == 0L) {",
        "tgt_lineno": 741
    },
    {
        "code": "new Here(\"Unit\", 741).given(l, 2199023255552L).checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 409,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 877,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                            if ((0x3ff000000000000L & l) == 0L) {",
        "tgt_lineno": 741
    },
    {
        "code": "new Here(\"Unit\", 748).given(l, 17592186044416L).checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 410,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 887,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                            if ((0x3ff000000000000L & l) != 0L) {",
        "tgt_lineno": 748
    },
    {
        "code": "new Here(\"Unit\", 748).given(l, 4503599627370496L).checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 411,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 888,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                            if ((0x3ff000000000000L & l) != 0L) {",
        "tgt_lineno": 748
    },
    {
        "code": "new Here(\"Unit\", 752).given(l, 8796093022208L).checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 412,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 894,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                            if ((0x280000000000L & l) != 0L) {",
        "tgt_lineno": 752
    },
    {
        "code": "new Here(\"Unit\", 756).given(l, 562949953421312L).checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 413,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 900,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                            if ((0x3ff000000000000L & l) == 0L) {",
        "tgt_lineno": 756
    },
    {
        "code": "new Here(\"Unit\", 756).given(l, 8796093022208L).checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 414,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 901,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                            if ((0x3ff000000000000L & l) == 0L) {",
        "tgt_lineno": 756
    },
    {
        "code": "new Here(\"Unit\", 763).given(l, 4503599627370496L).checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 415,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 911,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                            if ((0x3ff000000000000L & l) != 0L) {",
        "tgt_lineno": 763
    },
    {
        "code": "new Here(\"Unit\", 763).given(l, 17592186044416L).checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 416,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 912,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                            if ((0x3ff000000000000L & l) != 0L) {",
        "tgt_lineno": 763
    },
    {
        "code": "new Here(\"Unit\", 774).given(l, 562949953421312L).checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 417,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 927,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                            if ((0xff000000000000L & l) == 0L) {",
        "tgt_lineno": 774
    },
    {
        "code": "new Here(\"Unit\", 774).given(l, 4294967296L).checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 418,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 928,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                            if ((0xff000000000000L & l) == 0L) {",
        "tgt_lineno": 774
    },
    {
        "code": "new Here(\"Unit\", 781).given(l, 562949953421312L).checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 419,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 938,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                            if ((0x3ff000000000000L & l) == 0L) {",
        "tgt_lineno": 781
    },
    {
        "code": "new Here(\"Unit\", 793).given(curChar, 'a').checkEq(l, 8589934592L);",
        "context": "switch(jjstateSet[--i]) {\ncase 0:\nif ((0x7fffffe87fffffeL & l) != 0L) {\nif (kind > 64) {\nkind = 64;\n}\njjCheckNAdd(1);\n} else if (curChar == 91) {\njjstateSet[jjnewStateCnt++] = 3;\n}\nbreak;\ncase 1:\nif ((0x7fffffe87fffffeL & l) == 0L) {\nbreak;\n}\nif (kind > 64) {\nkind = 64;\n}\njjCheckNAdd(1);\nbreak;\ncase 2:\nif (curChar == 91) {\njjstateSet[jjnewStateCnt++] = 3;\n}\nbreak;\ncase 3:\nif ((0x1000000040000000L & l) != 0L) {\njjstateSet[jjnewStateCnt++] = 4;\n}\nbreak;\ncase 4:\nif (curChar == 93) {\nkind = 67;\n}\nbreak;\ncase 7:\nif ((0x110000001100L & l) != 0L && kind > 80) {\nkind = 80;\n}\nbreak;\ncase 10:\nif ((0x2000000020L & l) != 0L) {\njjAddStates(15, 16);\n}\nbreak;\ncase 13:\nif ((0x5400000054L & l) != 0L && kind > 81) {\nkind = 81;\n}\nbreak;\ncase 19:\nif ((0x2000000020L & l) != 0L) {\njjAddStates(17, 18);\n}\nbreak;\ncase 25:\nif ((0x100000001000000L & l) != 0L) {\njjCheckNAdd(26);\n}\nbreak;\ncase 26:\nif ((0x7e0000007eL & l) == 0L) {\nbreak;\n}\nif (kind > 80) {\nkind = 80;\n}\njjCheckNAddTwoStates(26, 7);\nbreak;\ndefault:\nbreak;\n}\n} while (i != startsAt);",
        "context_loc": 73,
        "filename": "OgnlParserTokenManager",
        "index": 420,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 952,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                long l = 1L << (curChar & 077);",
        "tgt_lineno": 793
    },
    {
        "code": "new Here(\"Unit\", 799).given(l, 1099511627776L).checkTrue(group());",
        "context": "kind = 64;\n}\njjCheckNAdd(1);",
        "context_loc": 3,
        "filename": "OgnlParserTokenManager",
        "index": 421,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 957,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                            if ((0x7fffffe87fffffeL & l) != 0L) {",
        "tgt_lineno": 799
    },
    {
        "code": "new Here(\"Unit\", 809).given(l, 2305843009213693952L).checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 422,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 968,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                            if ((0x7fffffe87fffffeL & l) == 0L) {",
        "tgt_lineno": 809
    },
    {
        "code": "new Here(\"Randoop\", 809).given(l, 140737488355328L).checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 423,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 969,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Randoop",
        "stmt": "                            if ((0x7fffffe87fffffeL & l) == 0L) {",
        "tgt_lineno": 809
    },
    {
        "code": "new Here(\"Unit\", 820).given(l, 281474976710656L).checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 424,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 984,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                            if ((0x1000000040000000L & l) != 0L) {",
        "tgt_lineno": 820
    },
    {
        "code": "new Here(\"Unit\", 820).given(l, 1073741824L).checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 425,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 985,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                            if ((0x1000000040000000L & l) != 0L) {",
        "tgt_lineno": 820
    },
    {
        "code": "new Here(\"Unit\", 828).given(kind, 2147483647).given(l, 256L).checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 426,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 996,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 2,
        "num_vars": 3,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                            if ((0x110000001100L & l) != 0L && kind > 80) {",
        "tgt_lineno": 828
    },
    {
        "code": "new Here(\"Unit\", 828).given(kind, 2147483647).given(l, 536870912L).checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 427,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 997,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 2,
        "num_vars": 3,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                            if ((0x110000001100L & l) != 0L && kind > 80) {",
        "tgt_lineno": 828
    },
    {
        "code": "new Here(\"Unit\", 832).given(l, 274877906944L).checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 428,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 1003,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                            if ((0x2000000020L & l) != 0L) {",
        "tgt_lineno": 832
    },
    {
        "code": "new Here(\"Unit\", 836).given(kind, 2147483647).given(l, 274877906944L).checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 429,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 1009,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 2,
        "num_vars": 3,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                            if ((0x5400000054L & l) != 0L && kind > 81) {",
        "tgt_lineno": 836
    },
    {
        "code": "new Here(\"Unit\", 836).given(kind, 2147483647).given(l, 536870912L).checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 430,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 1010,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 2,
        "num_vars": 3,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                            if ((0x5400000054L & l) != 0L && kind > 81) {",
        "tgt_lineno": 836
    },
    {
        "code": "new Here(\"Unit\", 840).given(l, 536870912L).checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 431,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 1016,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                            if ((0x2000000020L & l) != 0L) {",
        "tgt_lineno": 840
    },
    {
        "code": "new Here(\"Unit\", 840).given(l, 137438953472L).checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 432,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 1017,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                            if ((0x2000000020L & l) != 0L) {",
        "tgt_lineno": 840
    },
    {
        "code": "new Here(\"Unit\", 844).given(l, 72057594037927936L).checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 433,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 1023,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                            if ((0x100000001000000L & l) != 0L) {",
        "tgt_lineno": 844
    },
    {
        "code": "new Here(\"Unit\", 844).given(l, 536870912L).checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 434,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 1024,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                            if ((0x100000001000000L & l) != 0L) {",
        "tgt_lineno": 844
    },
    {
        "code": "new Here(\"Unit\", 848).given(l, 274877906944L).checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 435,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 1030,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                            if ((0x7e0000007eL & l) == 0L) {",
        "tgt_lineno": 848
    },
    {
        "code": "new Here(\"Unit\", 971).given(curChar, 'c').checkEq(l, 34359738368L);",
        "context": "switch(jjstateSet[--i]) {\ncase 0:\nif ((0xfffffffeefffffffL & l) != 0L) {\nif (kind > 75) {\nkind = 75;\n}\n} else if (curChar == 92) {\njjAddStates(19, 21);\n}\nbreak;\ncase 1:\nif ((0x14404510000000L & l) != 0L && kind > 74) {\nkind = 74;\n}\nbreak;\ncase 5:\nif ((0xfffffffeefffffffL & l) != 0L && kind > 75) {\nkind = 75;\n}\nbreak;\ndefault:\nbreak;\n}\n} while (i != startsAt);",
        "context_loc": 24,
        "filename": "OgnlParserTokenManager",
        "index": 436,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 1157,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                long l = 1L << (curChar & 077);",
        "tgt_lineno": 971
    },
    {
        "code": "new Here(\"Unit\", 977).given(l, 34359738368L).checkTrue(group());",
        "context": "kind = 75;\n}",
        "context_loc": 2,
        "filename": "OgnlParserTokenManager",
        "index": 437,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 1162,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                            if ((0xfffffffeefffffffL & l) != 0L) {",
        "tgt_lineno": 977
    },
    {
        "code": "new Here(\"Unit\", 1072).given(kind, 2147483647).given(l, 562949953421312L).checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 438,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 1257,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 1,
        "num_vars": 3,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                            if ((0xffffff7fffffffffL & l) != 0L && kind > 72) {",
        "tgt_lineno": 1072
    },
    {
        "code": "new Here(\"Unit\", 1076).given(kind, 71).given(l, 4503599627370496L).checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 439,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 1263,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 1,
        "num_vars": 3,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                            if ((0x8400000000L & l) != 0L && kind > 71) {",
        "tgt_lineno": 1076
    },
    {
        "code": "new Here(\"Unit\", 1080).given(l, 2251799813685248L).checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 440,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 1269,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                            if ((0xf000000000000L & l) != 0L) {",
        "tgt_lineno": 1080
    },
    {
        "code": "new Here(\"Unit\", 1080).given(l, 4503599627370496L).checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 441,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 1270,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                            if ((0xf000000000000L & l) != 0L) {",
        "tgt_lineno": 1080
    },
    {
        "code": "new Here(\"Unit\", 1084).given(l, 4503599627370496L).checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 442,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 1276,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                            if ((0xff000000000000L & l) == 0L) {",
        "tgt_lineno": 1084
    },
    {
        "code": "new Here(\"Unit\", 1091).given(kind, 2147483647).given(l, 36028797018963968L).checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 443,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 1286,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 2,
        "num_vars": 3,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                            if ((0xff000000000000L & l) != 0L && kind > 71) {",
        "tgt_lineno": 1091
    },
    {
        "code": "new Here(\"Unit\", 1091).given(kind, 71).given(l, 18014398509481984L).checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 444,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 1287,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 2,
        "num_vars": 3,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                            if ((0xff000000000000L & l) != 0L && kind > 71) {",
        "tgt_lineno": 1091
    },
    {
        "code": "new Here(\"Unit\", 1100).given(curChar, 'S').checkEq(l, 524288L);",
        "context": "switch(jjstateSet[--i]) {\ncase 0:\nif ((0xffffffffefffffffL & l) != 0L) {\nif (kind > 72) {\nkind = 72;\n}\n} else if (curChar == 92) {\njjAddStates(19, 21);\n}\nbreak;\ncase 1:\nif ((0x14404510000000L & l) != 0L && kind > 71) {\nkind = 71;\n}\nbreak;\ncase 5:\nif ((0xffffffffefffffffL & l) != 0L && kind > 72) {\nkind = 72;\n}\nbreak;\ndefault:\nbreak;\n}\n} while (i != startsAt);",
        "context_loc": 24,
        "filename": "OgnlParserTokenManager",
        "index": 445,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 1297,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                long l = 1L << (curChar & 077);",
        "tgt_lineno": 1100
    },
    {
        "code": "new Here(\"Unit\", 1106).given(l, 524288L).checkTrue(group());",
        "context": "kind = 72;\n}",
        "context_loc": 2,
        "filename": "OgnlParserTokenManager",
        "index": 446,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 1302,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                            if ((0xffffffffefffffffL & l) != 0L) {",
        "tgt_lineno": 1106
    },
    {
        "code": "new Here(\"Unit\", 1115).given(kind, 2147483647).given(l, 72057594037927936L).checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 447,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 1312,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 2,
        "num_vars": 3,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                            if ((0x14404510000000L & l) != 0L && kind > 71) {",
        "tgt_lineno": 1115
    },
    {
        "code": "new Here(\"Unit\", 1115).given(kind, 2147483647).given(l, 70368744177664L).checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 448,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 1313,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 2,
        "num_vars": 3,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                            if ((0x14404510000000L & l) != 0L && kind > 71) {",
        "tgt_lineno": 1115
    },
    {
        "code": "new Here(\"Unit\", 1130).given(hiByte, 94).checkEq(l1, 1073741824L);",
        "context": "long l2 = 1L << (curChar & 077);\ndo {\nswitch(jjstateSet[--i]) {\ncase 0:\nif (jjCanMove_1(hiByte, i1, i2, l1, l2) && kind > 72) {\nkind = 72;\n}\nbreak;\ndefault:\nbreak;\n}\n} while (i != startsAt);",
        "context_loc": 12,
        "filename": "OgnlParserTokenManager",
        "index": 449,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 1330,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                long l1 = 1L << (hiByte & 077);",
        "tgt_lineno": 1130
    },
    {
        "code": "new Here(\"Unit\", 1132).given(curChar, '\u5e74').checkEq(l2, 4503599627370496L);",
        "context": "switch(jjstateSet[--i]) {\ncase 0:\nif (jjCanMove_1(hiByte, i1, i2, l1, l2) && kind > 72) {\nkind = 72;\n}\nbreak;\ndefault:\nbreak;\n}\n} while (i != startsAt);",
        "context_loc": 10,
        "filename": "OgnlParserTokenManager",
        "index": 450,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 1333,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                long l2 = 1L << (curChar & 077);",
        "tgt_lineno": 1132
    },
    {
        "code": "new Here(\"Unit\", 1201).given(kind, 2147483647).given(l, 562949953421312L).checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 451,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 1401,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 1,
        "num_vars": 3,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                            if ((0xfffffffbffffffffL & l) != 0L && kind > 78) {",
        "tgt_lineno": 1201
    },
    {
        "code": "new Here(\"Unit\", 1205).given(kind, 2147483647).given(l, 549755813888L).checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 452,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 1407,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 1,
        "num_vars": 3,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                            if ((0x8400000000L & l) != 0L && kind > 77) {",
        "tgt_lineno": 1205
    },
    {
        "code": "new Here(\"Unit\", 1209).given(l, 549755813888L).checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 453,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 1413,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                            if ((0xf000000000000L & l) != 0L) {",
        "tgt_lineno": 1209
    },
    {
        "code": "new Here(\"Unit\", 1209).given(l, 562949953421312L).checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 454,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 1414,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                            if ((0xf000000000000L & l) != 0L) {",
        "tgt_lineno": 1209
    },
    {
        "code": "new Here(\"Unit\", 1213).given(l, 562949953421312L).checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 455,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 1420,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                            if ((0xff000000000000L & l) == 0L) {",
        "tgt_lineno": 1213
    },
    {
        "code": "new Here(\"Unit\", 1213).given(l, 549755813888L).checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 456,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 1421,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                            if ((0xff000000000000L & l) == 0L) {",
        "tgt_lineno": 1213
    },
    {
        "code": "new Here(\"Unit\", 1220).given(kind, 77).given(l, 18014398509481984L).checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 457,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 1431,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 2,
        "num_vars": 3,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                            if ((0xff000000000000L & l) != 0L && kind > 77) {",
        "tgt_lineno": 1220
    },
    {
        "code": "new Here(\"Unit\", 1220).given(kind, 2147483647).given(l, 36028797018963968L).checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 458,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 1432,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 2,
        "num_vars": 3,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                            if ((0xff000000000000L & l) != 0L && kind > 77) {",
        "tgt_lineno": 1220
    },
    {
        "code": "new Here(\"Unit\", 1229).given(curChar, 'h').checkEq(l, 1099511627776L);",
        "context": "switch(jjstateSet[--i]) {\ncase 0:\nif ((0xffffffffefffffffL & l) != 0L) {\nif (kind > 78) {\nkind = 78;\n}\n} else if (curChar == 92) {\njjAddStates(19, 21);\n}\nbreak;\ncase 1:\nif ((0x14404510000000L & l) != 0L && kind > 77) {\nkind = 77;\n}\nbreak;\ncase 5:\nif ((0xffffffffefffffffL & l) != 0L && kind > 78) {\nkind = 78;\n}\nbreak;\ndefault:\nbreak;\n}\n} while (i != startsAt);",
        "context_loc": 24,
        "filename": "OgnlParserTokenManager",
        "index": 459,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 1442,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                long l = 1L << (curChar & 077);",
        "tgt_lineno": 1229
    },
    {
        "code": "new Here(\"Unit\", 1235).given(l, 1099511627776L).checkTrue(group());",
        "context": "kind = 78;\n}",
        "context_loc": 2,
        "filename": "OgnlParserTokenManager",
        "index": 460,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 1447,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                            if ((0xffffffffefffffffL & l) != 0L) {",
        "tgt_lineno": 1235
    },
    {
        "code": "new Here(\"Unit\", 1244).given(kind, 2147483647).given(l, 72057594037927936L).checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 461,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 1457,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 2,
        "num_vars": 3,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                            if ((0x14404510000000L & l) != 0L && kind > 77) {",
        "tgt_lineno": 1244
    },
    {
        "code": "new Here(\"Unit\", 1244).given(kind, 2147483647).given(l, 268435456L).checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 462,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 1458,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 2,
        "num_vars": 3,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                            if ((0x14404510000000L & l) != 0L && kind > 77) {",
        "tgt_lineno": 1244
    },
    {
        "code": "new Here(\"Unit\", 1259).given(hiByte, 0).checkEq(l1, 1L);",
        "context": "long l2 = 1L << (curChar & 077);\ndo {\nswitch(jjstateSet[--i]) {\ncase 0:\nif (jjCanMove_1(hiByte, i1, i2, l1, l2) && kind > 78) {\nkind = 78;\n}\nbreak;\ndefault:\nbreak;\n}\n} while (i != startsAt);",
        "context_loc": 12,
        "filename": "OgnlParserTokenManager",
        "index": 463,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 1475,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                long l1 = 1L << (hiByte & 077);",
        "tgt_lineno": 1259
    },
    {
        "code": "new Here(\"Unit\", 1261).given(curChar, '\u00a0').checkEq(l2, 4294967296L);",
        "context": "switch(jjstateSet[--i]) {\ncase 0:\nif (jjCanMove_1(hiByte, i1, i2, l1, l2) && kind > 78) {\nkind = 78;\n}\nbreak;\ndefault:\nbreak;\n}\n} while (i != startsAt);",
        "context_loc": 10,
        "filename": "OgnlParserTokenManager",
        "index": 464,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 1478,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                long l2 = 1L << (curChar & 077);",
        "tgt_lineno": 1261
    },
    {
        "code": "new Here(\"Unit\", 1318).given(l1, 1073741824L).given(i1, 1).given(jjbitVec7, new long[] { -2L, -1L, -1L, -1L }).checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "OgnlParserTokenManager",
        "index": 465,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 1536,
        "num_checks": 1,
        "num_givens": 3,
        "num_itests": 1,
        "num_vars": 4,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                if ((jjbitVec7[i1] & l1) != 0L) {",
        "tgt_lineno": 1318
    },
    {
        "code": "new Here(\"Randoop\", 1529).given(jjmatchedKind, 81).given(jjtoToken, new long[] { 576460752303423487L, 233993L }).checkTrue(group());",
        "context": "TokenLexicalActions(matchedToken);\nif (jjnewLexState[jjmatchedKind] != -1) {\ncurLexState = jjnewLexState[jjmatchedKind];\n}\nreturn matchedToken;",
        "context_loc": 5,
        "filename": "OgnlParserTokenManager",
        "index": 466,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 1728,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 2,
        "num_vars": 3,
        "project": "jkuhnert_ognl",
        "source": "Randoop",
        "stmt": "                    if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L) {",
        "tgt_lineno": 1529
    },
    {
        "code": "new Here(\"Unit\", 1529).given(jjmatchedKind, 72).given(jjtoToken, new long[] { 576460752303423487L, 233993L }).checkFalse(group());",
        "context": "TokenLexicalActions(matchedToken);\nif (jjnewLexState[jjmatchedKind] != -1) {\ncurLexState = jjnewLexState[jjmatchedKind];\n}\nreturn matchedToken;",
        "context_loc": 5,
        "filename": "OgnlParserTokenManager",
        "index": 467,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 1729,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 2,
        "num_vars": 3,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                    if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L) {",
        "tgt_lineno": 1529
    },
    {
        "code": "new Here(\"Unit\", 1537).given(jjmatchedKind, 70).given(jjtoSkip, new long[] { -576460752303423488L, 0L }).checkFalse(group());",
        "context": "curLexState = jjnewLexState[jjmatchedKind];\n}\ncontinue EOFLoop;",
        "context_loc": 3,
        "filename": "OgnlParserTokenManager",
        "index": 468,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 1737,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 1,
        "num_vars": 3,
        "project": "jkuhnert_ognl",
        "source": "Unit",
        "stmt": "                    } else if ((jjtoSkip[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L) {",
        "tgt_lineno": 1537
    },
    {
        "code": "new Here(\"Unit\", 180).given(url, \"8.xml\").checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "Client",
        "index": 469,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 183,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "jscep_jscep",
        "source": "Unit",
        "stmt": "        if (!url.getProtocol().matches(\"^https?$\")) {",
        "tgt_lineno": 180
    },
    {
        "code": "new Here(\"Randoop\", 113).given(i, 0).given(this.id, new byte[] { 100 }).checkEq(a, 100);",
        "context": "if (a != b) {\nreturn a - b;\n}",
        "context_loc": 3,
        "filename": "TransactionId",
        "index": 470,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 113,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 1,
        "num_vars": 3,
        "project": "jscep_jscep",
        "source": "Randoop",
        "stmt": "            int a = (this.id[i] & 0xff);",
        "tgt_lineno": 113
    },
    {
        "code": "new Here(\"Randoop\", 114).given(that.id, new byte[] { 101 }).given(j, 0).checkEq(b, 101);",
        "context": "return a - b;\n}",
        "context_loc": 2,
        "filename": "TransactionId",
        "index": 471,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 115,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 1,
        "num_vars": 3,
        "project": "jscep_jscep",
        "source": "Randoop",
        "stmt": "            int b = (that.id[j] & 0xff);",
        "tgt_lineno": 114
    },
    {
        "code": "new Here(\"Unit\", 261).given(fighter, \"10.xml\").checkEq(sorted, \"11.xml\");",
        "context": "logger.info(\"Found {} fights for {}\", fighter.getFights().size(), fighter.getName());\n// setting the picture last to make sure the fighter variable has all the data\nif (pictureUrl.length() > 0) {\nfighter.setPicture(PROCESSOR.process(pictureUrl, fighter));\n}\nreturn fighter;",
        "context_loc": 6,
        "filename": "FighterParser",
        "index": 472,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 231,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 3,
        "num_vars": 2,
        "project": "lamarios_sherdog-parser",
        "source": "Unit",
        "stmt": "        List<Fight> sorted = fighter.getFights().stream().sorted(Comparator.comparing(Fight::getDate, Comparator.nullsFirst(Comparator.naturalOrder()))).collect(Collectors.toList());",
        "tgt_lineno": 261
    },
    {
        "code": "new Here(\"Unit\", 261).given(fighter, \"40.xml\").checkEq(sorted, \"41.xml\");",
        "context": "logger.info(\"Found {} fights for {}\", fighter.getFights().size(), fighter.getName());\n// setting the picture last to make sure the fighter variable has all the data\nif (pictureUrl.length() > 0) {\nfighter.setPicture(PROCESSOR.process(pictureUrl, fighter));\n}\nreturn fighter;",
        "context_loc": 6,
        "filename": "FighterParser",
        "index": 473,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 232,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 3,
        "num_vars": 2,
        "project": "lamarios_sherdog-parser",
        "source": "Unit",
        "stmt": "        List<Fight> sorted = fighter.getFights().stream().sorted(Comparator.comparing(Fight::getDate, Comparator.nullsFirst(Comparator.naturalOrder()))).collect(Collectors.toList());",
        "tgt_lineno": 261
    },
    {
        "code": "new Here(\"Randoop\", 261).given(fighter, \"249.xml\").checkEq(sorted, \"251.xml\");",
        "context": "logger.info(\"Found {} fights for {}\", fighter.getFights().size(), fighter.getName());\n// setting the picture last to make sure the fighter variable has all the data\nif (pictureUrl.length() > 0) {\nfighter.setPicture(PROCESSOR.process(pictureUrl, fighter));\n}\nreturn fighter;",
        "context_loc": 6,
        "filename": "FighterParser",
        "index": 474,
        "itest_idx": 2,
        "itest_type": "R2",
        "lineno": 233,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 3,
        "num_vars": 2,
        "project": "lamarios_sherdog-parser",
        "source": "Randoop",
        "stmt": "        List<Fight> sorted = fighter.getFights().stream().sorted(Comparator.comparing(Fight::getDate, Comparator.nullsFirst(Comparator.naturalOrder()))).collect(Collectors.toList());",
        "tgt_lineno": 261
    },
    {
        "code": "new Here(\"Unit\", 144).given(td, \"126.xml\").checkEq(split, new String[] { \"<img src=\\\"https://www2-cdn.sherdog.com/img/flags/au.gif\\\" width=\\\"16\\\" height=\\\"11\\\" alt=\\\"country\\\"\", \" RAC Arena, Perth, Western Australia, Australia\" });",
        "context": "return split[1].trim();\n} else {\nreturn \"\";\n}",
        "context_loc": 4,
        "filename": "OrganizationParser",
        "index": 475,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 120,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "lamarios_sherdog-parser",
        "source": "Unit",
        "stmt": "        String[] split = td.html().split(\">\");",
        "tgt_lineno": 144
    },
    {
        "code": "new Here(\"Unit\", 185).given(doc, \"0.xml\").checkEq(url, \"//www.sherdog.com/fighter/Brandon-Moreno-80173\");",
        "context": "// 2018-10-10 bug in sherdog  where ig:url starts with //?\nurl = url.replaceFirst(\"//\", \"http://\");\n}\nreturn url.replace(\"http://\", \"https://\");",
        "context_loc": 4,
        "filename": "ParserUtils",
        "index": 476,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 159,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "lamarios_sherdog-parser",
        "source": "Unit",
        "stmt": "        String url = Optional.ofNullable(doc.head()).map(h -> h.select(\"meta\")).map(es -> es.stream().filter(e -> e.attr(\"property\").equalsIgnoreCase(\"og:url\")).findFirst().orElse(null)).map(m -> m.attr(\"content\")).orElse(\"\");",
        "tgt_lineno": 185
    },
    {
        "code": "new Here(\"Unit\", 28).given(url, \"http://something.com\").checkEq(url, \"https://something.com\");",
        "context": "if (!url.startsWith(\"https://www.sherdog.com/\")) {\nthrow new NotASherdogURLException();\n}\nDocument doc = ParserUtils.parseDocument(url);\nreturn parseDocument(doc);",
        "context_loc": 5,
        "filename": "SherdogParser",
        "index": 477,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 30,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "lamarios_sherdog-parser",
        "source": "Unit",
        "stmt": "            url = url.replace(\"http\", \"https\");",
        "tgt_lineno": 28
    },
    {
        "code": "new Here(\"Randoop\", 24).given(statement, \"9.xml\").checkEq(updateList, new String[] { \"Update has been done\" });",
        "context": "StringBuilder sql = new StringBuilder();\nsql.append(\"MERGE INTO \").append(database.escapeTableName(null, statement.getTargetSchemaName(), statement.getTargetTableName()));\nsql.append(\" USING \").append(database.escapeTableName(null, statement.getSourceSchemaName(), statement.getSourceTableName()));\nsql.append(\" ON (\").append(statement.getOnCondition()).append(\") \");\nif (updateList != null) {\nsql.append(\"WHEN MATCHED THEN UPDATE SET \");\nfor (String list : updateList) {\nsql.append(list).append(\",\");\n}\nsql.deleteCharAt(sql.lastIndexOf(\",\"));\nif (statement.getUpdateCondition() != null) {\nsql.append(\" WHERE (\").append(statement.getUpdateCondition()).append(\")\");\n}\nif (statement.getDeleteCondition() != null) {\nsql.append(\" DELETE WHERE (\").append(statement.getDeleteCondition()).append(\")\");\n}\n}\nif (statement.getColumnValues().size() > 0) {\nsql.append(\" WHEN NOT MATCHED THEN INSERT (\");\nfor (String column : statement.getColumnValues().keySet()) {\nsql.append(column).append(\",\");\n}\nsql.deleteCharAt(sql.lastIndexOf(\",\")).append(\") \");\nsql.append(\"VALUES (\");\nfor (String column : statement.getColumnValues().keySet()) {\nObject newValue = statement.getColumnValues().get(column);\nif (newValue == null || newValue.toString().equalsIgnoreCase(\"NULL\")) {\nsql.append(\"NULL\");\n} else if (newValue instanceof String && !looksLikeFunctionCall(((String) newValue), database)) {\nsql.append(DataTypeFactory.getInstance().fromObject(newValue, database).objectToSql(newValue, database));\n} else if (newValue instanceof Date) {\nsql.append(database.getDateLiteral(((Date) newValue)));\n} else if (newValue instanceof Boolean) {\nif (((Boolean) newValue)) {\nsql.append(DataTypeFactory.getInstance().getTrueBooleanValue(database));\n} else {\nsql.append(DataTypeFactory.getInstance().getFalseBooleanValue(database));\n}\n} else if (newValue instanceof DatabaseFunction) {\nsql.append(database.generateDatabaseFunctionValue((DatabaseFunction) newValue));\n} else {\nsql.append(newValue);\n}\nsql.append(\",\");\n}\nsql.deleteCharAt(sql.lastIndexOf(\",\")).append(\") \");\nif (statement.getInsertCondition() != null) {\nsql.append(\"WHERE (\").append(database.escapeObjectName(statement.getInsertCondition(), Table.class)).append(\")\");\n}\n}\nreturn new Sql[] { new UnparsedSql(sql.toString()) };",
        "context_loc": 51,
        "filename": "MergeGenerator",
        "index": 478,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 23,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "liquibase_liquibase-oracle",
        "source": "Randoop",
        "stmt": "            updateList = statement.getUpdateList().split(\",\");",
        "tgt_lineno": 24
    },
    {
        "code": "new Here(\"Randoop\", 80).given(statement, \"0.xml\").checkEq(columnList, new String[] { \"Grants on null have been given to null\" });",
        "context": "validation.addError(\"Incorect column list\");\n}\nfor (String name : columnList) {\nif (name.toUpperCase().equals(statement.getPrimaryKeyColumnName().toUpperCase())) {\nstatement.setPrimaryKeyColumnName(statement.getPrimaryKeyColumnName() + \"_ID\");\nbreak;\n}\n}\nreturn validation;",
        "context_loc": 9,
        "filename": "SplitTableGenerator",
        "index": 479,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 78,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "liquibase_liquibase-oracle",
        "source": "Randoop",
        "stmt": "            columnList = statement.getColumnNameList().split(\",\");",
        "tgt_lineno": 80
    },
    {
        "code": "new Here(\"Unit\", 304).given(dboptions, 1).given(GEOIP_CHECK_CACHE, 2).checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "LookupService",
        "index": 480,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 248,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 1,
        "num_vars": 3,
        "project": "maxmind_geoip-api-java",
        "source": "Unit",
        "stmt": "        if ((dboptions & GEOIP_CHECK_CACHE) != 0) {",
        "tgt_lineno": 304
    },
    {
        "code": "new Here(\"Unit\", 374).given(dboptions, 1).given(GEOIP_MEMORY_CACHE, 1).checkTrue(group());",
        "context": "dbbuffer = new byte[l];\nfile.seek(0);\nfile.readFully(dbbuffer, 0, l);\ndatabaseInfo = getDatabaseInfo();\nfile.close();",
        "context_loc": 5,
        "filename": "LookupService",
        "index": 481,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 296,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 2,
        "num_vars": 3,
        "project": "maxmind_geoip-api-java",
        "source": "Unit",
        "stmt": "        if ((dboptions & GEOIP_MEMORY_CACHE) == 1) {",
        "tgt_lineno": 374
    },
    {
        "code": "new Here(\"Unit\", 374).given(dboptions, 0).given(GEOIP_MEMORY_CACHE, 1).checkFalse(group());",
        "context": "dbbuffer = new byte[l];\nfile.seek(0);\nfile.readFully(dbbuffer, 0, l);\ndatabaseInfo = getDatabaseInfo();\nfile.close();",
        "context_loc": 5,
        "filename": "LookupService",
        "index": 482,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 297,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 2,
        "num_vars": 3,
        "project": "maxmind_geoip-api-java",
        "source": "Unit",
        "stmt": "        if ((dboptions & GEOIP_MEMORY_CACHE) == 1) {",
        "tgt_lineno": 374
    },
    {
        "code": "new Here(\"Unit\", 382).given(dboptions, 1).given(GEOIP_INDEX_CACHE, 4).checkFalse(group());",
        "context": "index_cache = new byte[l];\nfile.seek(0);\nfile.readFully(index_cache, 0, l);",
        "context_loc": 3,
        "filename": "LookupService",
        "index": 483,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 306,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 2,
        "num_vars": 3,
        "project": "maxmind_geoip-api-java",
        "source": "Unit",
        "stmt": "        if ((dboptions & GEOIP_INDEX_CACHE) != 0) {",
        "tgt_lineno": 382
    },
    {
        "code": "new Here(\"Unit\", 382).given(dboptions, 4).given(GEOIP_INDEX_CACHE, 4).checkTrue(group());",
        "context": "index_cache = new byte[l];\nfile.seek(0);\nfile.readFully(index_cache, 0, l);",
        "context_loc": 3,
        "filename": "LookupService",
        "index": 484,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 307,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 2,
        "num_vars": 3,
        "project": "maxmind_geoip-api-java",
        "source": "Unit",
        "stmt": "        if ((dboptions & GEOIP_INDEX_CACHE) != 0) {",
        "tgt_lineno": 382
    },
    {
        "code": "new Here(\"Unit\", 473).given(file, \"37.xml\").given(dboptions, 1).given(GEOIP_MEMORY_CACHE, 1).checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "LookupService",
        "index": 485,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 399,
        "num_checks": 1,
        "num_givens": 3,
        "num_itests": 1,
        "num_vars": 4,
        "project": "maxmind_geoip-api-java",
        "source": "Unit",
        "stmt": "        if (file == null && (dboptions & GEOIP_MEMORY_CACHE) == 0) {",
        "tgt_lineno": 473
    },
    {
        "code": "new Here(\"Unit\", 492).given(file, \"36.xml\").given(dboptions, 1).given(GEOIP_MEMORY_CACHE, 1).checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "LookupService",
        "index": 486,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 419,
        "num_checks": 1,
        "num_givens": 3,
        "num_itests": 1,
        "num_vars": 4,
        "project": "maxmind_geoip-api-java",
        "source": "Unit",
        "stmt": "        if (file == null && (dboptions & GEOIP_MEMORY_CACHE) == 0) {",
        "tgt_lineno": 492
    },
    {
        "code": "new Here(\"Unit\", 549).given(read, 3).given(delim, new byte[] { 43, 2, 0 }).checkFalse(group());",
        "context": "break;",
        "context_loc": 1,
        "filename": "LookupService",
        "index": 487,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 477,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 3,
        "num_vars": 3,
        "project": "maxmind_geoip-api-java",
        "source": "Unit",
        "stmt": "                if (read == 3 && (delim[0] & 0xFF) == 255 && (delim[1] & 0xFF) == 255 && (delim[2] & 0xFF) == 255) {",
        "tgt_lineno": 549
    },
    {
        "code": "new Here(\"Unit\", 549).given(read, 3).given(delim, new byte[] { 0, -1, -1 }).checkFalse(group());",
        "context": "break;",
        "context_loc": 1,
        "filename": "LookupService",
        "index": 488,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 478,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 3,
        "num_vars": 3,
        "project": "maxmind_geoip-api-java",
        "source": "Unit",
        "stmt": "                if (read == 3 && (delim[0] & 0xFF) == 255 && (delim[1] & 0xFF) == 255 && (delim[2] & 0xFF) == 255) {",
        "tgt_lineno": 549
    },
    {
        "code": "new Here(\"Unit\", 549).given(read, 3).given(delim, new byte[] { -1, -1, -1 }).checkTrue(group());",
        "context": "break;",
        "context_loc": 1,
        "filename": "LookupService",
        "index": 489,
        "itest_idx": 2,
        "itest_type": "R2",
        "lineno": 479,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 3,
        "num_vars": 3,
        "project": "maxmind_geoip-api-java",
        "source": "Unit",
        "stmt": "                if (read == 3 && (delim[0] & 0xFF) == 255 && (delim[1] & 0xFF) == 255 && (delim[2] & 0xFF) == 255) {",
        "tgt_lineno": 549
    },
    {
        "code": "new Here(\"Unit\", 584).given(dboptions, 1).given(GEOIP_CHECK_CACHE, 2).checkFalse(group());",
        "context": "if (t != mtime) {\n/* GeoIP Database file updated */\n/* refresh filehandle */\nclose();\nfile = new RandomAccessFile(databaseFile, \"r\");\ndatabaseInfo = null;\ninit();\n}",
        "context_loc": 8,
        "filename": "LookupService",
        "index": 490,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 513,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 1,
        "num_vars": 3,
        "project": "maxmind_geoip-api-java",
        "source": "Unit",
        "stmt": "            if ((dboptions & GEOIP_CHECK_CACHE) != 0) {",
        "tgt_lineno": 584
    },
    {
        "code": "new Here(\"Unit\", 747).given(dboptions, 1).given(GEOIP_MEMORY_CACHE, 1).checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "LookupService",
        "index": 491,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 663,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 2,
        "num_vars": 3,
        "project": "maxmind_geoip-api-java",
        "source": "Unit",
        "stmt": "        if ((dboptions & GEOIP_MEMORY_CACHE) == 1) {",
        "tgt_lineno": 747
    },
    {
        "code": "new Here(\"Unit\", 747).given(dboptions, 0).given(GEOIP_MEMORY_CACHE, 1).checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "LookupService",
        "index": 492,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 664,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 2,
        "num_vars": 3,
        "project": "maxmind_geoip-api-java",
        "source": "Unit",
        "stmt": "        if ((dboptions & GEOIP_MEMORY_CACHE) == 1) {",
        "tgt_lineno": 747
    },
    {
        "code": "new Here(\"Unit\", 881).given(bnum, 28).checkEq(idx, 3);",
        "context": "if ((v6vec[idx] & bMask) > 0) {\nif (x[1] >= databaseSegments[0]) {\nlast_netmask = 128 - depth;\nreturn x[1];\n}\noffset = x[1];\n} else {\nif (x[0] >= databaseSegments[0]) {\nlast_netmask = 128 - depth;\nreturn x[0];\n}\noffset = x[0];\n}",
        "context_loc": 13,
        "filename": "LookupService",
        "index": 493,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 792,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "maxmind_geoip-api-java",
        "source": "Unit",
        "stmt": "            int idx = bnum >> 3;",
        "tgt_lineno": 881
    },
    {
        "code": "new Here(\"Unit\", 882).given(bnum, 28).checkEq(bMask, 8);",
        "context": "if (x[1] >= databaseSegments[0]) {\nlast_netmask = 128 - depth;\nreturn x[1];\n}\noffset = x[1];\n} else {\nif (x[0] >= databaseSegments[0]) {\nlast_netmask = 128 - depth;\nreturn x[0];\n}\noffset = x[0];\n}",
        "context_loc": 12,
        "filename": "LookupService",
        "index": 494,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 794,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "maxmind_geoip-api-java",
        "source": "Unit",
        "stmt": "            int bMask = 1 << (bnum & 7 ^ 7);",
        "tgt_lineno": 882
    },
    {
        "code": "new Here(\"Unit\", 882).given(bnum, 29).checkEq(bMask, 4);",
        "context": "if (x[1] >= databaseSegments[0]) {\nlast_netmask = 128 - depth;\nreturn x[1];\n}\noffset = x[1];\n} else {\nif (x[0] >= databaseSegments[0]) {\nlast_netmask = 128 - depth;\nreturn x[0];\n}\noffset = x[0];\n}",
        "context_loc": 12,
        "filename": "LookupService",
        "index": 495,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 795,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "maxmind_geoip-api-java",
        "source": "Unit",
        "stmt": "            int bMask = 1 << (bnum & 7 ^ 7);",
        "tgt_lineno": 882
    },
    {
        "code": "new Here(\"Unit\", 883).given(bMask, 1).given(idx, 1).given(v6vec, new byte[] { 32, 1, 2, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }).checkTrue(group());",
        "context": "last_netmask = 128 - depth;\nreturn x[1];\n}\noffset = x[1];",
        "context_loc": 4,
        "filename": "LookupService",
        "index": 496,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 797,
        "num_checks": 1,
        "num_givens": 3,
        "num_itests": 3,
        "num_vars": 4,
        "project": "maxmind_geoip-api-java",
        "source": "Unit",
        "stmt": "            if ((v6vec[idx] & bMask) > 0) {",
        "tgt_lineno": 883
    },
    {
        "code": "new Here(\"Unit\", 883).given(bMask, 128).given(idx, 0).given(v6vec, new byte[] { 42, 2, -1, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }).checkFalse(group());",
        "context": "last_netmask = 128 - depth;\nreturn x[1];\n}\noffset = x[1];",
        "context_loc": 4,
        "filename": "LookupService",
        "index": 497,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 798,
        "num_checks": 1,
        "num_givens": 3,
        "num_itests": 3,
        "num_vars": 4,
        "project": "maxmind_geoip-api-java",
        "source": "Unit",
        "stmt": "            if ((v6vec[idx] & bMask) > 0) {",
        "tgt_lineno": 883
    },
    {
        "code": "new Here(\"Unit\", 883).given(bMask, 32).given(idx, 0).given(v6vec, new byte[] { 42, 2, -1, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }).checkTrue(group());",
        "context": "last_netmask = 128 - depth;\nreturn x[1];\n}\noffset = x[1];",
        "context_loc": 4,
        "filename": "LookupService",
        "index": 498,
        "itest_idx": 2,
        "itest_type": "R2",
        "lineno": 799,
        "num_checks": 1,
        "num_givens": 3,
        "num_itests": 3,
        "num_vars": 4,
        "project": "maxmind_geoip-api-java",
        "source": "Unit",
        "stmt": "            if ((v6vec[idx] & bMask) > 0) {",
        "tgt_lineno": 883
    },
    {
        "code": "new Here(\"Unit\", 917).given(depth, 30).given(ipAddress, 1113372144L).checkTrue(group());",
        "context": "last_netmask = 32 - depth;\nreturn x[1];\n}\noffset = x[1];",
        "context_loc": 4,
        "filename": "LookupService",
        "index": 499,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 831,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 3,
        "num_vars": 3,
        "project": "maxmind_geoip-api-java",
        "source": "Unit",
        "stmt": "            if ((ipAddress & (1 << depth)) > 0) {",
        "tgt_lineno": 917
    },
    {
        "code": "new Here(\"Unit\", 917).given(depth, 31).given(ipAddress, 1113372144L).checkFalse(group());",
        "context": "last_netmask = 32 - depth;\nreturn x[1];\n}\noffset = x[1];",
        "context_loc": 4,
        "filename": "LookupService",
        "index": 500,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 832,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 3,
        "num_vars": 3,
        "project": "maxmind_geoip-api-java",
        "source": "Unit",
        "stmt": "            if ((ipAddress & (1 << depth)) > 0) {",
        "tgt_lineno": 917
    },
    {
        "code": "new Here(\"Unit\", 917).given(depth, 29).given(ipAddress, 1074921176L).checkFalse(group());",
        "context": "last_netmask = 32 - depth;\nreturn x[1];\n}\noffset = x[1];",
        "context_loc": 4,
        "filename": "LookupService",
        "index": 501,
        "itest_idx": 2,
        "itest_type": "R2",
        "lineno": 833,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 3,
        "num_vars": 3,
        "project": "maxmind_geoip-api-java",
        "source": "Unit",
        "stmt": "            if ((ipAddress & (1 << depth)) > 0) {",
        "tgt_lineno": 917
    },
    {
        "code": "new Here(\"Unit\", 936).given(dboptions, 1).given(GEOIP_MEMORY_CACHE, 1).checkTrue(group());",
        "context": "System.arraycopy(dbbuffer, 2 * recordLength * offset, buf, 0, 2 * recordLength);",
        "context_loc": 1,
        "filename": "LookupService",
        "index": 502,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 852,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 2,
        "num_vars": 3,
        "project": "maxmind_geoip-api-java",
        "source": "Unit",
        "stmt": "        if ((dboptions & GEOIP_MEMORY_CACHE) == 1) {",
        "tgt_lineno": 936
    },
    {
        "code": "new Here(\"Unit\", 936).given(dboptions, 0).given(GEOIP_MEMORY_CACHE, 1).checkFalse(group());",
        "context": "System.arraycopy(dbbuffer, 2 * recordLength * offset, buf, 0, 2 * recordLength);",
        "context_loc": 1,
        "filename": "LookupService",
        "index": 503,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 853,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 2,
        "num_vars": 3,
        "project": "maxmind_geoip-api-java",
        "source": "Unit",
        "stmt": "        if ((dboptions & GEOIP_MEMORY_CACHE) == 1) {",
        "tgt_lineno": 936
    },
    {
        "code": "new Here(\"Unit\", 939).given(dboptions, 4).given(GEOIP_INDEX_CACHE, 4).checkTrue(group());",
        "context": "System.arraycopy(index_cache, 2 * recordLength * offset, buf, 0, 2 * recordLength);",
        "context_loc": 1,
        "filename": "LookupService",
        "index": 504,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 857,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 2,
        "num_vars": 3,
        "project": "maxmind_geoip-api-java",
        "source": "Unit",
        "stmt": "        } else if ((dboptions & GEOIP_INDEX_CACHE) != 0) {",
        "tgt_lineno": 939
    },
    {
        "code": "new Here(\"Unit\", 939).given(dboptions, 0).given(GEOIP_INDEX_CACHE, 4).checkFalse(group());",
        "context": "System.arraycopy(index_cache, 2 * recordLength * offset, buf, 0, 2 * recordLength);",
        "context_loc": 1,
        "filename": "LookupService",
        "index": 505,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 858,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 2,
        "num_vars": 3,
        "project": "maxmind_geoip-api-java",
        "source": "Unit",
        "stmt": "        } else if ((dboptions & GEOIP_INDEX_CACHE) != 0) {",
        "tgt_lineno": 939
    },
    {
        "code": "new Here(\"Unit\", 958).given(x[i], 0).given(y, 1).given(j, 0).checkEq(x[i], 1);",
        "context": "",
        "context_loc": 0,
        "filename": "LookupService",
        "index": 506,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 878,
        "num_checks": 1,
        "num_givens": 3,
        "num_itests": 2,
        "num_vars": 4,
        "project": "maxmind_geoip-api-java",
        "source": "Unit",
        "stmt": "                x[i] += (y << (j * 8));",
        "tgt_lineno": 958
    },
    {
        "code": "new Here(\"Unit\", 958).given(x[i], 43).given(y, 2).given(j, 1).checkEq(x[i], 555);",
        "context": "",
        "context_loc": 0,
        "filename": "LookupService",
        "index": 507,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 879,
        "num_checks": 1,
        "num_givens": 3,
        "num_itests": 2,
        "num_vars": 4,
        "project": "maxmind_geoip-api-java",
        "source": "Unit",
        "stmt": "                x[i] += (y << (j * 8));",
        "tgt_lineno": 958
    },
    {
        "code": "new Here(\"Unit\", 977).given(ipnum, 0L).given(y, 66L).given(i, 0).checkEq(ipnum, 1107296256L);",
        "context": "return ipnum;",
        "context_loc": 1,
        "filename": "LookupService",
        "index": 508,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 899,
        "num_checks": 1,
        "num_givens": 3,
        "num_itests": 2,
        "num_vars": 4,
        "project": "maxmind_geoip-api-java",
        "source": "Unit",
        "stmt": "            ipnum += y << ((3 - i) * 8);",
        "tgt_lineno": 977
    },
    {
        "code": "new Here(\"Unit\", 977).given(ipnum, 1310326784L).given(y, 70L).given(i, 2).checkEq(ipnum, 1310344704L);",
        "context": "return ipnum;",
        "context_loc": 1,
        "filename": "LookupService",
        "index": 509,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 900,
        "num_checks": 1,
        "num_givens": 3,
        "num_itests": 2,
        "num_vars": 4,
        "project": "maxmind_geoip-api-java",
        "source": "Unit",
        "stmt": "            ipnum += y << ((3 - i) * 8);",
        "tgt_lineno": 977
    },
    {
        "code": "new Here(\"Unit\", 201).given(pinyin, \"wo\").given(config.keepSeparateFirstLetter, true).checkTrue(group());",
        "context": "incrPosition = true;\naddCandidate(new TermItem(String.valueOf(pinyin.charAt(0)), i, i + 1, position));",
        "context_loc": 2,
        "filename": "PinyinTokenizer",
        "index": 510,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 198,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 2,
        "num_vars": 3,
        "project": "medcl_elasticsearch-analysis-pinyin",
        "source": "Unit",
        "stmt": "                            if (config.keepSeparateFirstLetter & pinyin.length() > 1) {",
        "tgt_lineno": 201
    },
    {
        "code": "new Here(\"Unit\", 201).given(pinyin, \"hua\").given(config.keepSeparateFirstLetter, false).checkFalse(group());",
        "context": "incrPosition = true;\naddCandidate(new TermItem(String.valueOf(pinyin.charAt(0)), i, i + 1, position));",
        "context_loc": 2,
        "filename": "PinyinTokenizer",
        "index": 511,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 199,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 2,
        "num_vars": 3,
        "project": "medcl_elasticsearch-analysis-pinyin",
        "source": "Unit",
        "stmt": "                            if (config.keepSeparateFirstLetter & pinyin.length() > 1) {",
        "tgt_lineno": 201
    },
    {
        "code": "new Here(\"Unit\", 59).given(lastWord, true).given(sb, \"12.xml\").checkTrue(group());",
        "context": "sb.setLength(0);",
        "context_loc": 1,
        "filename": "PinyinAlphabetTokenizer",
        "index": 512,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 63,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 3,
        "num_vars": 3,
        "project": "medcl_elasticsearch-analysis-pinyin",
        "source": "Unit",
        "stmt": "                if (lastWord & sb.length() > 0) {",
        "tgt_lineno": 59
    },
    {
        "code": "new Here(\"Unit\", 59).given(lastWord, true).given(sb, \"1.xml\").checkTrue(group());",
        "context": "sb.setLength(0);",
        "context_loc": 1,
        "filename": "PinyinAlphabetTokenizer",
        "index": 513,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 64,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 3,
        "num_vars": 3,
        "project": "medcl_elasticsearch-analysis-pinyin",
        "source": "Unit",
        "stmt": "                if (lastWord & sb.length() > 0) {",
        "tgt_lineno": 59
    },
    {
        "code": "new Here(\"Unit\", 59).given(lastWord, true).given(sb, \"0.xml\").checkFalse(group());",
        "context": "sb.setLength(0);",
        "context_loc": 1,
        "filename": "PinyinAlphabetTokenizer",
        "index": 514,
        "itest_idx": 2,
        "itest_type": "R2",
        "lineno": 65,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 3,
        "num_vars": 3,
        "project": "medcl_elasticsearch-analysis-pinyin",
        "source": "Unit",
        "stmt": "                if (lastWord & sb.length() > 0) {",
        "tgt_lineno": 59
    },
    {
        "code": "new Here(\"Unit\", 145).given(pinyin, \"liu\").given(config.keepSeparateFirstLetter, false).checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "PinyinTokenFilter",
        "index": 515,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 157,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 2,
        "num_vars": 3,
        "project": "medcl_elasticsearch-analysis-pinyin",
        "source": "Unit",
        "stmt": "                        if (config.keepSeparateFirstLetter & pinyin.length() > 1) {",
        "tgt_lineno": 145
    },
    {
        "code": "new Here(\"Unit\", 145).given(pinyin, \"de\").given(config.keepSeparateFirstLetter, true).checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "PinyinTokenFilter",
        "index": 516,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 158,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 2,
        "num_vars": 3,
        "project": "medcl_elasticsearch-analysis-pinyin",
        "source": "Unit",
        "stmt": "                        if (config.keepSeparateFirstLetter & pinyin.length() > 1) {",
        "tgt_lineno": 145
    },
    {
        "code": "new Here(\"Unit\", 60).given(matcher, \"47.xml\").checkTrue(group());",
        "context": "String qualifier = matcher.group(5);\nif (buildNumber != null) {\nsetBuildNumber(Long.parseLong(buildNumber));\n}\nif (matcher.group(7) != null) {\nqualifier = matcher.group(7);\n}\n// Starting with \"-\"\nif (matcher.group(9) != null) {\nqualifier = matcher.group(9);\n}\nif (qualifier != null) {\nif (qualifier.trim().length() == 0) {\nsetQualifier(null);\n} else {\nsetQualifier(qualifier);\n}\n} else {\nsetQualifier(null);\n}",
        "context_loc": 20,
        "filename": "VersionInformation",
        "index": 517,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 59,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "mojohaus_build-helper-maven-plugin",
        "source": "Unit",
        "stmt": "        if (matcher.matches()) {",
        "tgt_lineno": 60
    },
    {
        "code": "new Here(\"Unit\", 62).given(matcher, \"7.xml\").checkEq(buildNumber, \"23\");",
        "context": "if (buildNumber != null) {\nsetBuildNumber(Long.parseLong(buildNumber));\n}\nif (matcher.group(7) != null) {\nqualifier = matcher.group(7);\n}\n// Starting with \"-\"\nif (matcher.group(9) != null) {\nqualifier = matcher.group(9);\n}\nif (qualifier != null) {\nif (qualifier.trim().length() == 0) {\nsetQualifier(null);\n} else {\nsetQualifier(qualifier);\n}\n} else {\nsetQualifier(null);\n}",
        "context_loc": 19,
        "filename": "VersionInformation",
        "index": 518,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 61,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "mojohaus_build-helper-maven-plugin",
        "source": "Unit",
        "stmt": "            String buildNumber = matcher.group(4);",
        "tgt_lineno": 62
    },
    {
        "code": "new Here(\"Unit\", 63).given(matcher, \"10.xml\").checkEq(qualifier, \".heger\");",
        "context": "setBuildNumber(Long.parseLong(buildNumber));\n}\nif (matcher.group(7) != null) {\nqualifier = matcher.group(7);\n}\n// Starting with \"-\"\nif (matcher.group(9) != null) {\nqualifier = matcher.group(9);\n}\nif (qualifier != null) {\nif (qualifier.trim().length() == 0) {\nsetQualifier(null);\n} else {\nsetQualifier(qualifier);\n}\n} else {\nsetQualifier(null);\n}",
        "context_loc": 18,
        "filename": "VersionInformation",
        "index": 519,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 63,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "mojohaus_build-helper-maven-plugin",
        "source": "Unit",
        "stmt": "            String qualifier = matcher.group(5);",
        "tgt_lineno": 63
    },
    {
        "code": "new Here(\"Unit\", 70).given(matcher, \"48.xml\").checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "VersionInformation",
        "index": 520,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 68,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "mojohaus_build-helper-maven-plugin",
        "source": "Unit",
        "stmt": "            if (matcher.group(7) != null) {",
        "tgt_lineno": 70
    },
    {
        "code": "new Here(\"Unit\", 70).given(matcher, \"4.xml\").checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "VersionInformation",
        "index": 521,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 69,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "mojohaus_build-helper-maven-plugin",
        "source": "Unit",
        "stmt": "            if (matcher.group(7) != null) {",
        "tgt_lineno": 70
    },
    {
        "code": "new Here(\"Unit\", 72).given(matcher, \"48.xml\").checkEq(qualifier, \"0-SNAPSHOT\");",
        "context": "// Starting with \"-\"\nif (matcher.group(9) != null) {\nqualifier = matcher.group(9);\n}\nif (qualifier != null) {\nif (qualifier.trim().length() == 0) {\nsetQualifier(null);\n} else {\nsetQualifier(qualifier);\n}\n} else {\nsetQualifier(null);\n}",
        "context_loc": 13,
        "filename": "VersionInformation",
        "index": 522,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 71,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "mojohaus_build-helper-maven-plugin",
        "source": "Unit",
        "stmt": "                qualifier = matcher.group(7);",
        "tgt_lineno": 72
    },
    {
        "code": "new Here(\"Unit\", 75).given(matcher, \"53.xml\").checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "VersionInformation",
        "index": 523,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 75,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "mojohaus_build-helper-maven-plugin",
        "source": "Unit",
        "stmt": "            if (matcher.group(9) != null) {",
        "tgt_lineno": 75
    },
    {
        "code": "new Here(\"Unit\", 75).given(matcher, \"4.xml\").checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "VersionInformation",
        "index": 524,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 76,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "mojohaus_build-helper-maven-plugin",
        "source": "Unit",
        "stmt": "            if (matcher.group(9) != null) {",
        "tgt_lineno": 75
    },
    {
        "code": "new Here(\"Unit\", 77).given(matcher, \"53.xml\").checkEq(qualifier, \"SNAPSHOT\");",
        "context": "if (qualifier != null) {\nif (qualifier.trim().length() == 0) {\nsetQualifier(null);\n} else {\nsetQualifier(qualifier);\n}\n} else {\nsetQualifier(null);\n}",
        "context_loc": 9,
        "filename": "VersionInformation",
        "index": 525,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 78,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "mojohaus_build-helper-maven-plugin",
        "source": "Unit",
        "stmt": "                qualifier = matcher.group(9);",
        "tgt_lineno": 77
    },
    {
        "code": "new Here(\"Unit\", 100).given(matcher, \"12.xml\").checkTrue(group());",
        "context": "String minorString = matcher.group(4);\nString patchString = matcher.group(6);\nif (majorString != null) {\nsetMajor(Integer.parseInt(majorString));\n}\nif (minorString != null) {\nsetMinor(Integer.parseInt(minorString));\n}\nif (patchString != null) {\nsetPatch(Integer.parseInt(patchString));\n}",
        "context_loc": 11,
        "filename": "VersionInformation",
        "index": 526,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 95,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "mojohaus_build-helper-maven-plugin",
        "source": "Unit",
        "stmt": "        if (matcher.matches()) {",
        "tgt_lineno": 100
    },
    {
        "code": "new Here(\"Unit\", 102).given(matcher, \"13.xml\").checkEq(majorString, \"1\");",
        "context": "String patchString = matcher.group(6);\nif (majorString != null) {\nsetMajor(Integer.parseInt(majorString));\n}\nif (minorString != null) {\nsetMinor(Integer.parseInt(minorString));\n}\nif (patchString != null) {\nsetPatch(Integer.parseInt(patchString));\n}",
        "context_loc": 10,
        "filename": "VersionInformation",
        "index": 527,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 97,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "mojohaus_build-helper-maven-plugin",
        "source": "Unit",
        "stmt": "            String majorString = matcher.group(2);",
        "tgt_lineno": 102
    },
    {
        "code": "new Here(\"Unit\", 103).given(matcher, \"13.xml\").checkEq(minorString, \"2\");",
        "context": "if (majorString != null) {\nsetMajor(Integer.parseInt(majorString));\n}\nif (minorString != null) {\nsetMinor(Integer.parseInt(minorString));\n}\nif (patchString != null) {\nsetPatch(Integer.parseInt(patchString));\n}",
        "context_loc": 9,
        "filename": "VersionInformation",
        "index": 528,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 99,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "mojohaus_build-helper-maven-plugin",
        "source": "Unit",
        "stmt": "            String minorString = matcher.group(4);",
        "tgt_lineno": 103
    },
    {
        "code": "new Here(\"Unit\", 104).given(matcher, \"27.xml\").checkEq(patchString, \"1\");",
        "context": "setMajor(Integer.parseInt(majorString));\n}\nif (minorString != null) {\nsetMinor(Integer.parseInt(minorString));\n}\nif (patchString != null) {\nsetPatch(Integer.parseInt(patchString));\n}",
        "context_loc": 8,
        "filename": "VersionInformation",
        "index": 529,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 101,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "mojohaus_build-helper-maven-plugin",
        "source": "Unit",
        "stmt": "            String patchString = matcher.group(6);",
        "tgt_lineno": 104
    },
    {
        "code": "new Here(\"Unit\", 125).given(matcherDigits, \"8.xml\").checkTrue(group());",
        "context": "parseBuildNumber(matcherDigits.group(7));",
        "context_loc": 1,
        "filename": "VersionInformation",
        "index": 530,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 117,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "mojohaus_build-helper-maven-plugin",
        "source": "Unit",
        "stmt": "        if (matcherDigits.matches()) {",
        "tgt_lineno": 125
    },
    {
        "code": "new Here(\"Unit\", 35).given(unresolved, \"system.value\").checkEq(prefixPos, -1);",
        "context": "return prefixPos >= 0 && suffixPos >= 0;",
        "context_loc": 1,
        "filename": "ExpansionBuffer",
        "index": 531,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 36,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "mojohaus_properties-maven-plugin",
        "source": "Unit",
        "stmt": "        int prefixPos = unresolved.indexOf(\"${\");",
        "tgt_lineno": 35
    },
    {
        "code": "new Here(\"Unit\", 36).given(unresolved, \"localhost:${port}/\").given(prefixPos, 10).checkEq(suffixPos, 16);",
        "context": "",
        "context_loc": 0,
        "filename": "ExpansionBuffer",
        "index": 532,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 38,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 1,
        "num_vars": 3,
        "project": "mojohaus_properties-maven-plugin",
        "source": "Unit",
        "stmt": "        int suffixPos = unresolved.indexOf(\"}\", prefixPos + 2);",
        "tgt_lineno": 36
    },
    {
        "code": "new Here(\"Unit\", 87).given(unresolved, \"p2}\").checkEq(propertySuffixPos, 2);",
        "context": "",
        "context_loc": 0,
        "filename": "ExpansionBuffer",
        "index": 533,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 76,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "mojohaus_properties-maven-plugin",
        "source": "Unit",
        "stmt": "        int propertySuffixPos = unresolved.indexOf(\"}\");",
        "tgt_lineno": 87
    },
    {
        "code": "new Here(\"Unit\", 98).given(unresolved, \"localhost:${port}/\").checkEq(propertyPrefixPos, 10);",
        "context": "",
        "context_loc": 0,
        "filename": "ExpansionBuffer",
        "index": 534,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 86,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "mojohaus_properties-maven-plugin",
        "source": "Unit",
        "stmt": "        int propertyPrefixPos = unresolved.indexOf(\"${\");",
        "tgt_lineno": 98
    },
    {
        "code": "new Here(\"Unit\", 104).given(unresolved, \"localhost:${port}/\").checkEq(propertyPrefixPos, 10);",
        "context": "",
        "context_loc": 0,
        "filename": "ExpansionBuffer",
        "index": 535,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 92,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "mojohaus_properties-maven-plugin",
        "source": "Unit",
        "stmt": "        int propertyPrefixPos = unresolved.indexOf(\"${\");",
        "tgt_lineno": 104
    },
    {
        "code": "new Here(\"Unit\", 110).given(unresolved, \"p2}\").checkEq(propertySuffixPos, 2);",
        "context": "",
        "context_loc": 0,
        "filename": "ExpansionBuffer",
        "index": 536,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 98,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "mojohaus_properties-maven-plugin",
        "source": "Unit",
        "stmt": "        int propertySuffixPos = unresolved.indexOf(\"}\");",
        "tgt_lineno": 110
    },
    {
        "code": "new Here(\"Unit\", 46).given(c, '0').given(numbersOnly, true).checkEq(numbersOnly, true);",
        "context": "continue;\n}\nif ((c != '+') && (c != '-') && (c < '0' || c > '9') && (c < 'a' || c > 'f') && (c < 'A' || c > 'F') && (c != '.') && (c != 'x' && c != 'X') && (c != 'p' && c != 'P')) {\nreturn Result.STRING;\n}",
        "context_loc": 5,
        "filename": "ValueDiscovery",
        "index": 537,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 45,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 4,
        "num_vars": 3,
        "project": "mp911de_logstash-gelf",
        "source": "Unit",
        "stmt": "            numbersOnly &= (c >= '0' && c <= '9');",
        "tgt_lineno": 46
    },
    {
        "code": "new Here(\"Unit\", 46).given(c, 'p').given(numbersOnly, true).checkEq(numbersOnly, false);",
        "context": "continue;\n}\nif ((c != '+') && (c != '-') && (c < '0' || c > '9') && (c < 'a' || c > 'f') && (c < 'A' || c > 'F') && (c != '.') && (c != 'x' && c != 'X') && (c != 'p' && c != 'P')) {\nreturn Result.STRING;\n}",
        "context_loc": 5,
        "filename": "ValueDiscovery",
        "index": 538,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 46,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 4,
        "num_vars": 3,
        "project": "mp911de_logstash-gelf",
        "source": "Unit",
        "stmt": "            numbersOnly &= (c >= '0' && c <= '9');",
        "tgt_lineno": 46
    },
    {
        "code": "new Here(\"Unit\", 46).given(c, '9').given(numbersOnly, true).checkEq(numbersOnly, true);",
        "context": "continue;\n}\nif ((c != '+') && (c != '-') && (c < '0' || c > '9') && (c < 'a' || c > 'f') && (c < 'A' || c > 'F') && (c != '.') && (c != 'x' && c != 'X') && (c != 'p' && c != 'P')) {\nreturn Result.STRING;\n}",
        "context_loc": 5,
        "filename": "ValueDiscovery",
        "index": 539,
        "itest_idx": 2,
        "itest_type": "R2",
        "lineno": 47,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 4,
        "num_vars": 3,
        "project": "mp911de_logstash-gelf",
        "source": "Unit",
        "stmt": "            numbersOnly &= (c >= '0' && c <= '9');",
        "tgt_lineno": 46
    },
    {
        "code": "new Here(\"Unit\", 46).given(c, '-').given(numbersOnly, true).checkEq(numbersOnly, false);",
        "context": "continue;\n}\nif ((c != '+') && (c != '-') && (c < '0' || c > '9') && (c < 'a' || c > 'f') && (c < 'A' || c > 'F') && (c != '.') && (c != 'x' && c != 'X') && (c != 'p' && c != 'P')) {\nreturn Result.STRING;\n}",
        "context_loc": 5,
        "filename": "ValueDiscovery",
        "index": 540,
        "itest_idx": 3,
        "itest_type": "R2",
        "lineno": 48,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 4,
        "num_vars": 3,
        "project": "mp911de_logstash-gelf",
        "source": "Unit",
        "stmt": "            numbersOnly &= (c >= '0' && c <= '9');",
        "tgt_lineno": 46
    },
    {
        "code": "new Here(\"Unit\", 70).given(longPattern, \"3.xml\").given(value, \"0xdeadbeef\").checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "ValueDiscovery",
        "index": 541,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 65,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 1,
        "num_vars": 3,
        "project": "mp911de_logstash-gelf",
        "source": "Unit",
        "stmt": "        } else if (longPattern.matcher(value).matches()) {",
        "tgt_lineno": 70
    },
    {
        "code": "new Here(\"Unit\", 72).given(doublePattern, \"4.xml\").given(value, \"0p\").checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "ValueDiscovery",
        "index": 542,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 68,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 1,
        "num_vars": 3,
        "project": "mp911de_logstash-gelf",
        "source": "Unit",
        "stmt": "        } else if (doublePattern.matcher(value).matches()) {",
        "tgt_lineno": 72
    },
    {
        "code": "new Here(\"Unit\", 93).given(hostsPart, \"localhost\").checkEq(hosts, new String[] { \"localhost\" });",
        "context": "if (hosts.length > 0) {\nfor (String host : hosts) {\nString broker;\nString tmp = scheme + host + suffix;\nURI uri = URI.create(tmp);\nif (uri.getHost() != null) {\nbroker = uri.getHost();\nint port;\nif (uri.getPort() > 0) {\nport = uri.getPort();\n} else if (configuration.getPort() > 0) {\nport = configuration.getPort();\n} else {\nport = BROKER_DEFAULT_PORT;\n}\nbroker += \":\" + port;\n} else {\nbroker = uri.getAuthority();\n}\nif (brokers.length() > 0) {\nbrokers += \",\";\n}\nbrokers += broker;\n}\n}\nif (brokers.isEmpty()) {\nthrow new IllegalArgumentException(\"Kafka URI must specify bootstrap.servers.\");\n}\nreturn brokers;",
        "context_loc": 29,
        "filename": "KafkaGelfSenderProvider",
        "index": 543,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 78,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "mp911de_logstash-gelf",
        "source": "Unit",
        "stmt": "            hosts = hostsPart.split(\",\");",
        "tgt_lineno": 93
    },
    {
        "code": "new Here(\"Unit\", 440).given(endsWithNewLine, true).given(toWrite, \"\\t\\t\\t3 lines skipped for [sun.]\").given(AT_PATTERN, \"6.xml\").checkFalse(group());",
        "context": "String traceElement = getTraceElement(toWrite);\nString forbiddenPackageName = null;\nif (!first) {\nforbiddenPackageName = tryGetForbiddenPackageName(traceElement);\n}\nfirst = false;\nif (forbiddenPackageName == null) {\nafterFiltering();\nsuper.write(str, off, len);\n} else {\nindentationLevel = getIndentation(toWrite);\nskippedLines++;\nskippedPackages.add(forbiddenPackageName);\n}\nreturn;",
        "context_loc": 15,
        "filename": "StackTraceFilter",
        "index": 544,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 410,
        "num_checks": 1,
        "num_givens": 3,
        "num_itests": 1,
        "num_vars": 4,
        "project": "mp911de_logstash-gelf",
        "source": "Unit",
        "stmt": "            if (endsWithNewLine && AT_PATTERN.matcher(toWrite).find()) {",
        "tgt_lineno": 440
    },
    {
        "code": "new Here(\"Unit\", 466).given(entry, \"8.xml\").given(fieldName, \"LoggerName\").checkFalse(group());",
        "context": "break;",
        "context_loc": 1,
        "filename": "GelfMessage",
        "index": 545,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 431,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 1,
        "num_vars": 3,
        "project": "mp911de_logstash-gelf",
        "source": "Unit",
        "stmt": "            if (entry.getKey().matcher(fieldName).matches()) {",
        "tgt_lineno": 466
    },
    {
        "code": "new Here(\"Unit\", 655).given(result, -636112057).given(javaTimestamp, 42L).checkEq(result, 1755362755);",
        "context": "result = 31 * result + (facility != null ? facility.hashCode() : 0);\nresult = 31 * result + (additonalFields != null ? additonalFields.hashCode() : 0);\nresult = 31 * result + maximumMessageSize;\nreturn result;",
        "context_loc": 4,
        "filename": "GelfMessage",
        "index": 546,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 615,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 1,
        "num_vars": 3,
        "project": "mp911de_logstash-gelf",
        "source": "Unit",
        "stmt": "        result = 31 * result + (int) (javaTimestamp ^ (javaTimestamp >>> 32));",
        "tgt_lineno": 655
    },
    {
        "code": "new Here(\"Unit\", 130).given(MULTI_VALUE_DELIMITTER, \",\").given(fieldSpec, \"Severity, Time, LoggerName, NDC, SourceClassName, SourceSimpleClassName, SourceMethodName, SourceLineNumber\").checkEq(properties, new String[] { \"Severity\", \" Time\", \" LoggerName\", \" NDC\", \" SourceClassName\", \" SourceSimpleClassName\", \" SourceMethodName\", \" SourceLineNumber\" });",
        "context": "for (String field : properties) {\nLogMessageField.NamedLogField namedLogField = LogMessageField.NamedLogField.byName(field.trim());\nif (namedLogField == null) {\nthrow new IllegalArgumentException(\"Cannot resolve field name '\" + field + \"' to a field. Supported field names are: \" + SUPPORTED_FIELDS);\n}\nif (!SUPPORTED_FIELDS.contains(namedLogField)) {\nthrow new IllegalArgumentException(\"Field '\" + field + \"' is not supported. Supported field names are: \" + SUPPORTED_FIELDS);\n}\nfields.add(namedLogField);\n}\naddFields(fields);",
        "context_loc": 11,
        "filename": "GelfLayout",
        "index": 547,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 130,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 2,
        "num_vars": 3,
        "project": "mp911de_logstash-gelf",
        "source": "Unit",
        "stmt": "        String[] properties = fieldSpec.split(MULTI_VALUE_DELIMITTER);",
        "tgt_lineno": 130
    },
    {
        "code": "new Here(\"Randoop\", 130).given(MULTI_VALUE_DELIMITTER, \",\").given(fieldSpec, \"1\").checkEq(properties, new String[] { \"1\" });",
        "context": "for (String field : properties) {\nLogMessageField.NamedLogField namedLogField = LogMessageField.NamedLogField.byName(field.trim());\nif (namedLogField == null) {\nthrow new IllegalArgumentException(\"Cannot resolve field name '\" + field + \"' to a field. Supported field names are: \" + SUPPORTED_FIELDS);\n}\nif (!SUPPORTED_FIELDS.contains(namedLogField)) {\nthrow new IllegalArgumentException(\"Field '\" + field + \"' is not supported. Supported field names are: \" + SUPPORTED_FIELDS);\n}\nfields.add(namedLogField);\n}\naddFields(fields);",
        "context_loc": 11,
        "filename": "GelfLayout",
        "index": 548,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 131,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 2,
        "num_vars": 3,
        "project": "mp911de_logstash-gelf",
        "source": "Randoop",
        "stmt": "        String[] properties = fieldSpec.split(MULTI_VALUE_DELIMITTER);",
        "tgt_lineno": 130
    },
    {
        "code": "new Here(\"Unit\", 74).given(message, \"params {a}\").checkTrue(group());",
        "context": "message = MessageFormat.format(message, parameters);\n} catch (IllegalArgumentException e) {\n// leaving message as it is to avoid compatibility problems\nmessage = record.getMessage();\n} catch (NullPointerException e) {\n// ignore\n}",
        "context_loc": 7,
        "filename": "JulLogEvent",
        "index": 549,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 72,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "mp911de_logstash-gelf",
        "source": "Unit",
        "stmt": "            if (message.indexOf('{') != -1) {",
        "tgt_lineno": 74
    },
    {
        "code": "new Here(\"Unit\", 74).given(message, \"foo bar test log message %s\").checkFalse(group());",
        "context": "message = MessageFormat.format(message, parameters);\n} catch (IllegalArgumentException e) {\n// leaving message as it is to avoid compatibility problems\nmessage = record.getMessage();\n} catch (NullPointerException e) {\n// ignore\n}",
        "context_loc": 7,
        "filename": "JulLogEvent",
        "index": 550,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 73,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "mp911de_logstash-gelf",
        "source": "Unit",
        "stmt": "            if (message.indexOf('{') != -1) {",
        "tgt_lineno": 74
    },
    {
        "code": "new Here(\"Unit\", 119).given(MULTI_VALUE_DELIMITTER, \",\").given(fieldSpec, \"Marker\").checkEq(properties, new String[] { \"Marker\" });",
        "context": "for (String field : properties) {\nLogMessageField.NamedLogField namedLogField = LogMessageField.NamedLogField.byName(field.trim());\nif (namedLogField == null) {\nthrow new IllegalArgumentException(\"Cannot resolve field name '\" + field + \"' to a field. Supported field names are: \" + SUPPORTED_FIELDS);\n}\nif (!SUPPORTED_FIELDS.contains(namedLogField)) {\nthrow new IllegalArgumentException(\"Field '\" + field + \"' is not supported. Supported field names are: \" + SUPPORTED_FIELDS);\n}\nfields.add(namedLogField);\n}\naddFields(fields);",
        "context_loc": 11,
        "filename": "WildFlyJsonFormatter",
        "index": 551,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 118,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 3,
        "num_vars": 3,
        "project": "mp911de_logstash-gelf",
        "source": "Unit",
        "stmt": "        String[] properties = fieldSpec.split(MULTI_VALUE_DELIMITTER);",
        "tgt_lineno": 119
    },
    {
        "code": "new Here(\"Unit\", 119).given(MULTI_VALUE_DELIMITTER, \",\").given(fieldSpec, \"dummy\").checkEq(properties, new String[] { \"dummy\" });",
        "context": "for (String field : properties) {\nLogMessageField.NamedLogField namedLogField = LogMessageField.NamedLogField.byName(field.trim());\nif (namedLogField == null) {\nthrow new IllegalArgumentException(\"Cannot resolve field name '\" + field + \"' to a field. Supported field names are: \" + SUPPORTED_FIELDS);\n}\nif (!SUPPORTED_FIELDS.contains(namedLogField)) {\nthrow new IllegalArgumentException(\"Field '\" + field + \"' is not supported. Supported field names are: \" + SUPPORTED_FIELDS);\n}\nfields.add(namedLogField);\n}\naddFields(fields);",
        "context_loc": 11,
        "filename": "WildFlyJsonFormatter",
        "index": 552,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 119,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 3,
        "num_vars": 3,
        "project": "mp911de_logstash-gelf",
        "source": "Unit",
        "stmt": "        String[] properties = fieldSpec.split(MULTI_VALUE_DELIMITTER);",
        "tgt_lineno": 119
    },
    {
        "code": "new Here(\"Unit\", 119).given(MULTI_VALUE_DELIMITTER, \",\").given(fieldSpec, \"Time,Severity,ThreadName,SourceSimpleClassName,NDC\").checkEq(properties, new String[] { \"Time\", \"Severity\", \"ThreadName\", \"SourceSimpleClassName\", \"NDC\" });",
        "context": "for (String field : properties) {\nLogMessageField.NamedLogField namedLogField = LogMessageField.NamedLogField.byName(field.trim());\nif (namedLogField == null) {\nthrow new IllegalArgumentException(\"Cannot resolve field name '\" + field + \"' to a field. Supported field names are: \" + SUPPORTED_FIELDS);\n}\nif (!SUPPORTED_FIELDS.contains(namedLogField)) {\nthrow new IllegalArgumentException(\"Field '\" + field + \"' is not supported. Supported field names are: \" + SUPPORTED_FIELDS);\n}\nfields.add(namedLogField);\n}\naddFields(fields);",
        "context_loc": 11,
        "filename": "WildFlyJsonFormatter",
        "index": 553,
        "itest_idx": 2,
        "itest_type": "R2",
        "lineno": 120,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 3,
        "num_vars": 3,
        "project": "mp911de_logstash-gelf",
        "source": "Unit",
        "stmt": "        String[] properties = fieldSpec.split(MULTI_VALUE_DELIMITTER);",
        "tgt_lineno": 119
    },
    {
        "code": "new Here(\"Unit\", 28).given(MULTI_VALUE_DELIMITTER, \",\").given(spec, \"fieldName1=fieldValue1,fieldName2=fieldValue2\").checkEq(properties, new String[] { \"fieldName1=fieldValue1\", \"fieldName2=fieldValue2\" });",
        "context": "final int index = field.indexOf(EQ);\nif (-1 == index) {\ncontinue;\n}\ngelfMessageAssembler.addField(new StaticMessageField(field.substring(0, index), field.substring(index + 1)));\n}",
        "context_loc": 6,
        "filename": "ConfigurationSupport",
        "index": 554,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 32,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 1,
        "num_vars": 3,
        "project": "mp911de_logstash-gelf",
        "source": "Unit",
        "stmt": "            String[] properties = spec.split(MULTI_VALUE_DELIMITTER);",
        "tgt_lineno": 28
    },
    {
        "code": "new Here(\"Unit\", 31).given(field, \"fieldName1=fieldValue1\").given(EQ, '=').checkEq(index, 10);",
        "context": "continue;\n}\ngelfMessageAssembler.addField(new StaticMessageField(field.substring(0, index), field.substring(index + 1)));",
        "context_loc": 3,
        "filename": "ConfigurationSupport",
        "index": 555,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 35,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 1,
        "num_vars": 3,
        "project": "mp911de_logstash-gelf",
        "source": "Unit",
        "stmt": "                final int index = field.indexOf(EQ);",
        "tgt_lineno": 31
    },
    {
        "code": "new Here(\"Randoop\", 48).given(MULTI_VALUE_DELIMITTER, \",\").given(spec, \"hi!\").checkEq(fields, new String[] { \"hi!\" });",
        "context": "gelfMessageAssembler.addField(new MdcMessageField(field.trim(), field.trim()));\n}",
        "context_loc": 2,
        "filename": "ConfigurationSupport",
        "index": 556,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 53,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 2,
        "num_vars": 3,
        "project": "mp911de_logstash-gelf",
        "source": "Randoop",
        "stmt": "            String[] fields = spec.split(MULTI_VALUE_DELIMITTER);",
        "tgt_lineno": 48
    },
    {
        "code": "new Here(\"Unit\", 48).given(MULTI_VALUE_DELIMITTER, \",\").given(spec, \"mdcField1,mdcField2\").checkEq(fields, new String[] { \"mdcField1\", \"mdcField2\" });",
        "context": "gelfMessageAssembler.addField(new MdcMessageField(field.trim(), field.trim()));\n}",
        "context_loc": 2,
        "filename": "ConfigurationSupport",
        "index": 557,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 54,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 2,
        "num_vars": 3,
        "project": "mp911de_logstash-gelf",
        "source": "Unit",
        "stmt": "            String[] fields = spec.split(MULTI_VALUE_DELIMITTER);",
        "tgt_lineno": 48
    },
    {
        "code": "new Here(\"Unit\", 64).given(MULTI_VALUE_DELIMITTER, \",\").given(spec, \"myMdc.*\").checkEq(fields, new String[] { \"myMdc.*\" });",
        "context": "gelfMessageAssembler.addField(new DynamicMdcMessageField(field.trim()));\n}",
        "context_loc": 2,
        "filename": "ConfigurationSupport",
        "index": 558,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 70,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 1,
        "num_vars": 3,
        "project": "mp911de_logstash-gelf",
        "source": "Unit",
        "stmt": "            String[] fields = spec.split(MULTI_VALUE_DELIMITTER);",
        "tgt_lineno": 64
    },
    {
        "code": "new Here(\"Unit\", 80).given(MULTI_VALUE_DELIMITTER, \",\").given(spec, \"myMdcs=String,myMdci=long,myMdcl=Long,myMdcf=double,myMdcd=Double\").checkEq(properties, new String[] { \"myMdcs=String\", \"myMdci=long\", \"myMdcl=Long\", \"myMdcf=double\", \"myMdcd=Double\" });",
        "context": "final int index = field.indexOf(EQ);\nif (-1 != index) {\ngelfMessageAssembler.setAdditionalFieldType(field.substring(0, index), field.substring(index + 1));\n}\n}",
        "context_loc": 5,
        "filename": "ConfigurationSupport",
        "index": 559,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 86,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 1,
        "num_vars": 3,
        "project": "mp911de_logstash-gelf",
        "source": "Unit",
        "stmt": "            String[] properties = spec.split(MULTI_VALUE_DELIMITTER);",
        "tgt_lineno": 80
    },
    {
        "code": "new Here(\"Unit\", 83).given(field, \"myMdcs=String\").given(EQ, '=').checkEq(index, 6);",
        "context": "gelfMessageAssembler.setAdditionalFieldType(field.substring(0, index), field.substring(index + 1));\n}",
        "context_loc": 2,
        "filename": "ConfigurationSupport",
        "index": 560,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 89,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 1,
        "num_vars": 3,
        "project": "mp911de_logstash-gelf",
        "source": "Unit",
        "stmt": "                final int index = field.indexOf(EQ);",
        "tgt_lineno": 83
    },
    {
        "code": "new Here(\"Unit\", 99).given(MULTI_VALUE_DELIMITTER, \",\").given(spec, \"myMdc.long.*=Long,myMdc.double.*=Double,myMdc.string.*=String\").checkEq(properties, new String[] { \"myMdc.long.*=Long\", \"myMdc.double.*=Double\", \"myMdc.string.*=String\" });",
        "context": "final int index = field.indexOf(EQ);\nif (-1 != index) {\ngelfMessageAssembler.setDynamicMdcFieldType(field.substring(0, index), field.substring(index + 1));\n}\n}",
        "context_loc": 5,
        "filename": "ConfigurationSupport",
        "index": 561,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 106,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 1,
        "num_vars": 3,
        "project": "mp911de_logstash-gelf",
        "source": "Unit",
        "stmt": "            String[] properties = spec.split(MULTI_VALUE_DELIMITTER);",
        "tgt_lineno": 99
    },
    {
        "code": "new Here(\"Unit\", 102).given(field, \"myMdc.long.*=Long\").given(EQ, '=').checkEq(index, 12);",
        "context": "gelfMessageAssembler.setDynamicMdcFieldType(field.substring(0, index), field.substring(index + 1));\n}",
        "context_loc": 2,
        "filename": "ConfigurationSupport",
        "index": 562,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 109,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 1,
        "num_vars": 3,
        "project": "mp911de_logstash-gelf",
        "source": "Unit",
        "stmt": "                final int index = field.indexOf(EQ);",
        "tgt_lineno": 102
    },
    {
        "code": "new Here(\"Unit\", 245).given(property, \"fieldName3=fieldValue3\").checkEq(index, 10);",
        "context": "StaticMessageField field = new StaticMessageField(property.substring(0, index), property.substring(index + 1));\naddField(field);\n}\nfieldNumber++;",
        "context_loc": 4,
        "filename": "GelfMessageAssembler",
        "index": 563,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 227,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "mp911de_logstash-gelf",
        "source": "Unit",
        "stmt": "            final int index = property.indexOf('=');",
        "tgt_lineno": 245
    },
    {
        "code": "new Here(\"Unit\", 121).given(hostname, \"hostname\").given(fqdn, false).checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "RuntimeContainer",
        "index": 564,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 110,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 3,
        "num_vars": 3,
        "project": "mp911de_logstash-gelf",
        "source": "Unit",
        "stmt": "        if (hostname.indexOf('.') != -1 && !fqdn) {",
        "tgt_lineno": 121
    },
    {
        "code": "new Here(\"Unit\", 121).given(hostname, \"hostname\").given(fqdn, false).checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "RuntimeContainer",
        "index": 565,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 111,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 3,
        "num_vars": 3,
        "project": "mp911de_logstash-gelf",
        "source": "Unit",
        "stmt": "        if (hostname.indexOf('.') != -1 && !fqdn) {",
        "tgt_lineno": 121
    },
    {
        "code": "new Here(\"Unit\", 121).given(hostname, \"hostname\").given(fqdn, true).checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "RuntimeContainer",
        "index": 566,
        "itest_idx": 2,
        "itest_type": "R2",
        "lineno": 112,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 3,
        "num_vars": 3,
        "project": "mp911de_logstash-gelf",
        "source": "Unit",
        "stmt": "        if (hostname.indexOf('.') != -1 && !fqdn) {",
        "tgt_lineno": 121
    },
    {
        "code": "new Here(\"Unit\", 122).given(hostname, \"hostname\").checkEq(hostname, \"hostname\");",
        "context": "return hostname;",
        "context_loc": 1,
        "filename": "RuntimeContainer",
        "index": 567,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 114,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "mp911de_logstash-gelf",
        "source": "Unit",
        "stmt": "            hostname = hostname.substring(0, hostname.indexOf('.'));",
        "tgt_lineno": 122
    },
    {
        "code": "new Here(\"Unit\", 97).given(matcher, \"23.xml\").checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "BeanPropertyExtraction",
        "index": 568,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 87,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "mp911de_logstash-gelf",
        "source": "Unit",
        "stmt": "        if (matcher.matches()) {",
        "tgt_lineno": 97
    },
    {
        "code": "new Here(\"Randoop\", 162).given(MULTI_VALUE_DELIMITTER, \",\").given(fieldSpec, \"additionalField.\").checkEq(properties, new String[] { \"additionalField.\" });",
        "context": "for (String field : properties) {\nLogMessageField.NamedLogField namedLogField = LogMessageField.NamedLogField.byName(field.trim());\nif (namedLogField == null) {\nthrow new IllegalArgumentException(\"Cannot resolve field name '\" + field + \"' to a field. Supported field names are: \" + SUPPORTED_FIELDS);\n}\nif (!SUPPORTED_FIELDS.contains(namedLogField)) {\nthrow new IllegalArgumentException(\"Field '\" + field + \"' is not supported. Supported field names are: \" + SUPPORTED_FIELDS);\n}\nfields.add(namedLogField);\n}\naddFields(fields);",
        "context_loc": 11,
        "filename": "GelfFormatter",
        "index": 569,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 151,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 2,
        "num_vars": 3,
        "project": "mp911de_logstash-gelf",
        "source": "Randoop",
        "stmt": "        String[] properties = fieldSpec.split(MULTI_VALUE_DELIMITTER);",
        "tgt_lineno": 162
    },
    {
        "code": "new Here(\"Unit\", 162).given(MULTI_VALUE_DELIMITTER, \",\").given(fieldSpec, \"Severity, Time, LoggerName\").checkEq(properties, new String[] { \"Severity\", \" Time\", \" LoggerName\" });",
        "context": "for (String field : properties) {\nLogMessageField.NamedLogField namedLogField = LogMessageField.NamedLogField.byName(field.trim());\nif (namedLogField == null) {\nthrow new IllegalArgumentException(\"Cannot resolve field name '\" + field + \"' to a field. Supported field names are: \" + SUPPORTED_FIELDS);\n}\nif (!SUPPORTED_FIELDS.contains(namedLogField)) {\nthrow new IllegalArgumentException(\"Field '\" + field + \"' is not supported. Supported field names are: \" + SUPPORTED_FIELDS);\n}\nfields.add(namedLogField);\n}\naddFields(fields);",
        "context_loc": 11,
        "filename": "GelfFormatter",
        "index": 570,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 152,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 2,
        "num_vars": 3,
        "project": "mp911de_logstash-gelf",
        "source": "Unit",
        "stmt": "        String[] properties = fieldSpec.split(MULTI_VALUE_DELIMITTER);",
        "tgt_lineno": 162
    },
    {
        "code": "new Here(\"Unit\", 226).given(mdcName, \"myMdc-with-suffix1\").given(field, \"14.xml\").checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "Log4jLogEvent",
        "index": 571,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 208,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 1,
        "num_vars": 3,
        "project": "mp911de_logstash-gelf",
        "source": "Unit",
        "stmt": "            if (field.getPattern().matcher(mdcName).matches()) {",
        "tgt_lineno": 226
    },
    {
        "code": "new Here(\"Unit\", 295).given(charToEscape, 55310).checkEq(hi, 216);",
        "context": "out.write(HEX_BYTES[hi & 0xF]);\ncharToEscape &= 0xFF;",
        "context_loc": 2,
        "filename": "JsonWriter",
        "index": 572,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 283,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "mp911de_logstash-gelf",
        "source": "Unit",
        "stmt": "            int hi = (charToEscape >> 8) & 0xFF;",
        "tgt_lineno": 295
    },
    {
        "code": "new Here(\"Unit\", 298).given(charToEscape, 55310).checkEq(charToEscape, 14);",
        "context": "out.write((byte) '0');\nout.write((byte) '0');\n}\n// We know it's a control char, so only the last 2 chars are non-0\nout.write(HEX_BYTES[charToEscape >> 4]);\nout.write(HEX_BYTES[charToEscape & 0xF]);",
        "context_loc": 6,
        "filename": "JsonWriter",
        "index": 573,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 287,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "mp911de_logstash-gelf",
        "source": "Unit",
        "stmt": "            charToEscape &= 0xFF;",
        "tgt_lineno": 298
    },
    {
        "code": "new Here(\"Unit\", 133).given(s, 0).checkEq(buf[offset], 0);",
        "context": "",
        "context_loc": 0,
        "filename": "ReusableGzipOutputStream",
        "index": 574,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 139,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "mp911de_logstash-gelf",
        "source": "Unit",
        "stmt": "        buf[offset] = (byte) (s & 0xff);",
        "tgt_lineno": 133
    },
    {
        "code": "new Here(\"Unit\", 134).given(s, 23148).checkEq(buf[offset + 1], 90);",
        "context": "",
        "context_loc": 0,
        "filename": "ReusableGzipOutputStream",
        "index": 575,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 141,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "mp911de_logstash-gelf",
        "source": "Unit",
        "stmt": "        buf[offset + 1] = (byte) ((s >> 8) & 0xff);",
        "tgt_lineno": 134
    },
    {
        "code": "new Here(\"Unit\", 81).given(mdcName, \"myMdcl\").given(field, \"14.xml\").checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "GelfUtil",
        "index": 576,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 75,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 1,
        "num_vars": 3,
        "project": "mp911de_logstash-gelf",
        "source": "Unit",
        "stmt": "            if (field.getPattern().matcher(mdcName).matches()) {",
        "tgt_lineno": 81
    },
    {
        "code": "new Here(\"Unit\", 47).given(uri, \"0.xml\").checkEq(queryString, \"timeout=1000\");",
        "context": "if (queryString == null) {\nreturn result;\n}\nStringTokenizer st = new StringTokenizer(queryString, \"&;\");\nwhile (st.hasMoreTokens()) {\nString queryParam = st.nextToken();\nint equalsIndex = queryParam.indexOf('=');\nif (equalsIndex != -1) {\nString key = queryParam.substring(0, equalsIndex);\nString value = queryParam.substring(equalsIndex + 1);\nresult.put(key.toLowerCase(), value);\n}\n}\nreturn result;",
        "context_loc": 14,
        "filename": "QueryStringParser",
        "index": 577,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 48,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "mp911de_logstash-gelf",
        "source": "Unit",
        "stmt": "            queryString = uri.getSchemeSpecificPart().substring(uri.getSchemeSpecificPart().indexOf('?') + 1);",
        "tgt_lineno": 47
    },
    {
        "code": "new Here(\"Unit\", 57).given(queryParam, \"acks=1\").checkEq(equalsIndex, 4);",
        "context": "String key = queryParam.substring(0, equalsIndex);\nString value = queryParam.substring(equalsIndex + 1);\nresult.put(key.toLowerCase(), value);\n}",
        "context_loc": 4,
        "filename": "QueryStringParser",
        "index": 578,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 57,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "mp911de_logstash-gelf",
        "source": "Unit",
        "stmt": "            int equalsIndex = queryParam.indexOf('=');",
        "tgt_lineno": 57
    },
    {
        "code": "new Here(\"Unit\", 122).given(host, \"12345?KeY=value\").checkEq(host, \"12345\");",
        "context": "return host;",
        "context_loc": 1,
        "filename": "QueryStringParser",
        "index": 579,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 112,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "mp911de_logstash-gelf",
        "source": "Unit",
        "stmt": "            host = host.substring(0, host.indexOf('?'));",
        "tgt_lineno": 122
    },
    {
        "code": "new Here(\"Unit\", 42).given(flags, 3).checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "ID3v2ChapterTOCFrameData",
        "index": 580,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 44,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "mpatric_mp3agic",
        "source": "Unit",
        "stmt": "        if ((flags & 0x01) == 0x01) {",
        "tgt_lineno": 42
    },
    {
        "code": "new Here(\"Randoop\", 42).given(flags, 0).checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "ID3v2ChapterTOCFrameData",
        "index": 581,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 45,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "mpatric_mp3agic",
        "source": "Randoop",
        "stmt": "        if ((flags & 0x01) == 0x01) {",
        "tgt_lineno": 42
    },
    {
        "code": "new Here(\"Randoop\", 45).given(flags, 0).checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "ID3v2ChapterTOCFrameData",
        "index": 582,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 49,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "mpatric_mp3agic",
        "source": "Randoop",
        "stmt": "        if ((flags & 0x02) == 0x02) {",
        "tgt_lineno": 45
    },
    {
        "code": "new Here(\"Unit\", 45).given(flags, 3).checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "ID3v2ChapterTOCFrameData",
        "index": 583,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 50,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "mpatric_mp3agic",
        "source": "Unit",
        "stmt": "        if ((flags & 0x02) == 0x02) {",
        "tgt_lineno": 45
    },
    {
        "code": "new Here(\"Unit\", 96).given(b, 0).checkEq(b, 1);",
        "context": "if (isOrdered) {\nb |= 0x02;\n}\nreturn b;",
        "context_loc": 4,
        "filename": "ID3v2ChapterTOCFrameData",
        "index": 584,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 95,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "mpatric_mp3agic",
        "source": "Unit",
        "stmt": "            b |= 0x01;",
        "tgt_lineno": 96
    },
    {
        "code": "new Here(\"Unit\", 100).given(b, 1).checkEq(b, 3);",
        "context": "return b;",
        "context_loc": 1,
        "filename": "ID3v2ChapterTOCFrameData",
        "index": 585,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 99,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "mpatric_mp3agic",
        "source": "Unit",
        "stmt": "            b |= 0x02;",
        "tgt_lineno": 100
    },
    {
        "code": "new Here(\"Unit\", 49).given(bytes, new byte[] { 84, 65, 71, 84, 73, 84, 76, 69, 49, 50, 51, 52, 53, 54, 55, 56, 57, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 48, 49, 50, 51, 52, 53, 65, 82, 84, 73, 83, 84, 49, 50, 51, 52, 53, 54, 55, 56, 57, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 48, 49, 50, 51, 52, 65, 76, 66, 85, 77, 49, 50, 51, 52, 53, 54, 55, 56, 57, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 48, 49, 50, 51, 52, 53, 50, 48, 48, 49, 67, 79, 77, 77, 69, 78, 84, 49, 50, 51, 52, 53, 54, 55, 56, 57, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 48, 49, 0, 1, 13 }).given(GENRE_OFFSET, 127).checkEq(genre, 13);",
        "context": "genre = -1;\n}\nif (bytes[TRACK_MARKER_OFFSET] != 0) {\ncomment = BufferTools.trimStringRight(BufferTools.byteBufferToStringIgnoringEncodingIssues(bytes, COMMENT_OFFSET, COMMENT_LENGTH_V1_0));\ntrack = null;\n} else {\ncomment = BufferTools.trimStringRight(BufferTools.byteBufferToStringIgnoringEncodingIssues(bytes, COMMENT_OFFSET, COMMENT_LENGTH_V1_1));\nint trackInt = bytes[TRACK_OFFSET];\nif (trackInt == 0) {\ntrack = \"\";\n} else {\ntrack = Integer.toString(trackInt);\n}\n}",
        "context_loc": 14,
        "filename": "ID3v1Tag",
        "index": 586,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 74,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 1,
        "num_vars": 3,
        "project": "mpatric_mp3agic",
        "source": "Unit",
        "stmt": "        genre = bytes[GENRE_OFFSET] & 0xFF;",
        "tgt_lineno": 49
    },
    {
        "code": "new Here(\"Randoop\", 236).given(s, \"\\u0000\\n\").checkEq(length, 0);",
        "context": "return s;\n}\nreturn s.substring(0, length);",
        "context_loc": 3,
        "filename": "EncodedText",
        "index": 587,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 238,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "mpatric_mp3agic",
        "source": "Randoop",
        "stmt": "        int length = s.indexOf(0);",
        "tgt_lineno": 236
    },
    {
        "code": "new Here(\"Unit\", 88).given(b, 0).given(bitPosition, 4).checkEq(newByte, 16);",
        "context": "newByte = (byte) (b & (~((byte) 0x01 << bitPosition)));\n}\nreturn newByte;",
        "context_loc": 3,
        "filename": "BufferTools",
        "index": 588,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 99,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 1,
        "num_vars": 3,
        "project": "mpatric_mp3agic",
        "source": "Unit",
        "stmt": "            newByte = (byte) (b | ((byte) 0x01 << bitPosition));",
        "tgt_lineno": 88
    },
    {
        "code": "new Here(\"Randoop\", 90).given(b, -1).given(bitPosition, 29377796).checkEq(newByte, -17);",
        "context": "return newByte;",
        "context_loc": 1,
        "filename": "BufferTools",
        "index": 589,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 102,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 2,
        "num_vars": 3,
        "project": "mpatric_mp3agic",
        "source": "Randoop",
        "stmt": "            newByte = (byte) (b & (~((byte) 0x01 << bitPosition)));",
        "tgt_lineno": 90
    },
    {
        "code": "new Here(\"Unit\", 90).given(b, 0).given(bitPosition, 7).checkEq(newByte, 0);",
        "context": "return newByte;",
        "context_loc": 1,
        "filename": "BufferTools",
        "index": 590,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 103,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 2,
        "num_vars": 3,
        "project": "mpatric_mp3agic",
        "source": "Unit",
        "stmt": "            newByte = (byte) (b & (~((byte) 0x01 << bitPosition)));",
        "tgt_lineno": 90
    },
    {
        "code": "new Here(\"Randoop\", 96).given(c, 10).checkEq(i, 10);",
        "context": "return i << -places;\n} else if (places > 0) {\nreturn i >> places;\n}\nreturn i;",
        "context_loc": 5,
        "filename": "BufferTools",
        "index": 591,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 110,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "mpatric_mp3agic",
        "source": "Randoop",
        "stmt": "        int i = c & 0xff;",
        "tgt_lineno": 96
    },
    {
        "code": "new Here(\"Unit\", 106).given(b4, 33).checkEq(value, 33);",
        "context": "value += BufferTools.shiftByte(b2, -16);\nvalue += BufferTools.shiftByte(b1, -24);\nreturn value;",
        "context_loc": 3,
        "filename": "BufferTools",
        "index": 592,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 121,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "mpatric_mp3agic",
        "source": "Unit",
        "stmt": "        int value = b4 & 0xff;",
        "tgt_lineno": 106
    },
    {
        "code": "new Here(\"Unit\", 115).given(i, 12).checkEq(bytes[3], 12);",
        "context": "bytes[1] = (byte) ((i >> 16) & 0xff);\nbytes[0] = (byte) ((i >> 24) & 0xff);\nreturn bytes;",
        "context_loc": 3,
        "filename": "BufferTools",
        "index": 593,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 131,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "mpatric_mp3agic",
        "source": "Unit",
        "stmt": "        bytes[3] = (byte) (i & 0xff);",
        "tgt_lineno": 115
    },
    {
        "code": "new Here(\"Unit\", 116).given(i, 12).checkEq(bytes[2], 0);",
        "context": "bytes[0] = (byte) ((i >> 24) & 0xff);\nreturn bytes;",
        "context_loc": 2,
        "filename": "BufferTools",
        "index": 594,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 133,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "mpatric_mp3agic",
        "source": "Unit",
        "stmt": "        bytes[2] = (byte) ((i >> 8) & 0xff);",
        "tgt_lineno": 116
    },
    {
        "code": "new Here(\"Unit\", 117).given(i, -290748).checkEq(bytes[1], -5);",
        "context": "return bytes;",
        "context_loc": 1,
        "filename": "BufferTools",
        "index": 595,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 135,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "mpatric_mp3agic",
        "source": "Unit",
        "stmt": "        bytes[1] = (byte) ((i >> 16) & 0xff);",
        "tgt_lineno": 117
    },
    {
        "code": "new Here(\"Unit\", 117).given(i, 12).checkEq(bytes[1], 0);",
        "context": "return bytes;",
        "context_loc": 1,
        "filename": "BufferTools",
        "index": 596,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 136,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "mpatric_mp3agic",
        "source": "Unit",
        "stmt": "        bytes[1] = (byte) ((i >> 16) & 0xff);",
        "tgt_lineno": 117
    },
    {
        "code": "new Here(\"Unit\", 118).given(i, 12).checkEq(bytes[0], 0);",
        "context": "",
        "context_loc": 0,
        "filename": "BufferTools",
        "index": 597,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 138,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "mpatric_mp3agic",
        "source": "Unit",
        "stmt": "        bytes[0] = (byte) ((i >> 24) & 0xff);",
        "tgt_lineno": 118
    },
    {
        "code": "new Here(\"Unit\", 123).given(b4, 110).checkEq(value, 110);",
        "context": "value += shiftByte((byte) (b2 & 0x7f), -14);\nvalue += shiftByte((byte) (b1 & 0x7f), -21);\nreturn value;",
        "context_loc": 3,
        "filename": "BufferTools",
        "index": 598,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 144,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "mpatric_mp3agic",
        "source": "Unit",
        "stmt": "        int value = ((byte) (b4 & 0x7f));",
        "tgt_lineno": 123
    },
    {
        "code": "new Here(\"Unit\", 124).given(b3, 3).given(value, 110).checkEq(value, 494);",
        "context": "value += shiftByte((byte) (b1 & 0x7f), -21);\nreturn value;",
        "context_loc": 2,
        "filename": "BufferTools",
        "index": 599,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 146,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 1,
        "num_vars": 3,
        "project": "mpatric_mp3agic",
        "source": "Unit",
        "stmt": "        value += shiftByte((byte) (b3 & 0x7f), -7);",
        "tgt_lineno": 124
    },
    {
        "code": "new Here(\"Randoop\", 125).given(b2, -1).given(value, 1668).checkEq(value, 2082436);",
        "context": "return value;",
        "context_loc": 1,
        "filename": "BufferTools",
        "index": 600,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 148,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 1,
        "num_vars": 3,
        "project": "mpatric_mp3agic",
        "source": "Randoop",
        "stmt": "        value += shiftByte((byte) (b2 & 0x7f), -14);",
        "tgt_lineno": 125
    },
    {
        "code": "new Here(\"Randoop\", 126).given(value, 2082445).given(b1, 9).checkEq(value, 20956813);",
        "context": "",
        "context_loc": 0,
        "filename": "BufferTools",
        "index": 601,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 150,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 1,
        "num_vars": 3,
        "project": "mpatric_mp3agic",
        "source": "Randoop",
        "stmt": "        value += shiftByte((byte) (b1 & 0x7f), -21);",
        "tgt_lineno": 126
    },
    {
        "code": "new Here(\"Unit\", 137).given(i, 2586).checkEq(bytes[offset + 3], 26);",
        "context": "bytes[offset + 1] = (byte) ((i >> 14) & 0x7f);\nbytes[offset + 0] = (byte) ((i >> 21) & 0x7f);",
        "context_loc": 2,
        "filename": "BufferTools",
        "index": 602,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 162,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "mpatric_mp3agic",
        "source": "Unit",
        "stmt": "        bytes[offset + 3] = (byte) (i & 0x7f);",
        "tgt_lineno": 137
    },
    {
        "code": "new Here(\"Unit\", 138).given(i, 2586).checkEq(bytes[offset + 2], 20);",
        "context": "bytes[offset + 0] = (byte) ((i >> 21) & 0x7f);",
        "context_loc": 1,
        "filename": "BufferTools",
        "index": 603,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 164,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "mpatric_mp3agic",
        "source": "Unit",
        "stmt": "        bytes[offset + 2] = (byte) ((i >> 7) & 0x7f);",
        "tgt_lineno": 138
    },
    {
        "code": "new Here(\"Unit\", 139).given(i, 2586).checkEq(bytes[offset + 1], 0);",
        "context": "",
        "context_loc": 0,
        "filename": "BufferTools",
        "index": 604,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 166,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "mpatric_mp3agic",
        "source": "Unit",
        "stmt": "        bytes[offset + 1] = (byte) ((i >> 14) & 0x7f);",
        "tgt_lineno": 139
    },
    {
        "code": "new Here(\"Unit\", 140).given(i, 2586).checkEq(bytes[offset + 0], 0);",
        "context": "",
        "context_loc": 0,
        "filename": "BufferTools",
        "index": 605,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 168,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "mpatric_mp3agic",
        "source": "Unit",
        "stmt": "        bytes[offset + 0] = (byte) ((i >> 21) & 0x7f);",
        "tgt_lineno": 140
    },
    {
        "code": "new Here(\"Unit\", 160).given(bytes, new byte[] { 0, 109, 105, 109, 101, 47, 116, 121, 112, 101, 0, 3, 68, 69, 83, 67, 82, 73, 80, 84, 73, 79, 78, 0, 1, 2, 3, -1, -5, -1, -5, -1, 0, 4, 5 }).given(i, 30).checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "BufferTools",
        "index": 606,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 189,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 4,
        "num_vars": 3,
        "project": "mpatric_mp3agic",
        "source": "Unit",
        "stmt": "            if (bytes[i] == (byte) 0xff && ((bytes[i + 1] & (byte) 0xe0) == (byte) 0xe0 || bytes[i + 1] == 0)) {",
        "tgt_lineno": 160
    },
    {
        "code": "new Here(\"Unit\", 160).given(bytes, new byte[] { 0, 109, 105, 109, 101, 47, 116, 121, 112, 101, 0, 3, 68, 69, 83, 67, 82, 73, 80, 84, 73, 79, 78, 0, 1, 2, 3, -1, -5, -1, -5, -1, 0, 4, 5 }).given(i, 31).checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "BufferTools",
        "index": 607,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 190,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 4,
        "num_vars": 3,
        "project": "mpatric_mp3agic",
        "source": "Unit",
        "stmt": "            if (bytes[i] == (byte) 0xff && ((bytes[i + 1] & (byte) 0xe0) == (byte) 0xe0 || bytes[i + 1] == 0)) {",
        "tgt_lineno": 160
    },
    {
        "code": "new Here(\"Unit\", 160).given(bytes, new byte[] { -1, 1, -5 }).given(i, 0).checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "BufferTools",
        "index": 608,
        "itest_idx": 2,
        "itest_type": "R2",
        "lineno": 191,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 4,
        "num_vars": 3,
        "project": "mpatric_mp3agic",
        "source": "Unit",
        "stmt": "            if (bytes[i] == (byte) 0xff && ((bytes[i + 1] & (byte) 0xe0) == (byte) 0xe0 || bytes[i + 1] == 0)) {",
        "tgt_lineno": 160
    },
    {
        "code": "new Here(\"Unit\", 160).given(bytes, new byte[] { 0, 109, 105, 109, 101, 47, 116, 121, 112, 101, 0, 3, 68, 69, 83, 67, 82, 73, 80, 84, 73, 79, 78, 0, 1, 2, 3, -1, -5, -1, -5, -1, 0, 4, 5 }).given(i, 27).checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "BufferTools",
        "index": 609,
        "itest_idx": 3,
        "itest_type": "R2",
        "lineno": 192,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 4,
        "num_vars": 3,
        "project": "mpatric_mp3agic",
        "source": "Unit",
        "stmt": "            if (bytes[i] == (byte) 0xff && ((bytes[i + 1] & (byte) 0xe0) == (byte) 0xe0 || bytes[i + 1] == 0)) {",
        "tgt_lineno": 160
    },
    {
        "code": "new Here(\"Unit\", 178).given(bytes, new byte[] { 0, 109, 105, 109, 101, 47, 116, 121, 112, 101, 0, 3, 68, 69, 83, 67, 82, 73, 80, 84, 73, 79, 78, 0, 1, 2, 3, -1, -5, -1, -5, -1, 0, 4, 5 }).given(i, 28).checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "BufferTools",
        "index": 610,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 215,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 3,
        "num_vars": 3,
        "project": "mpatric_mp3agic",
        "source": "Unit",
        "stmt": "            if (bytes[i] == (byte) 0xff && ((bytes[i + 1] & (byte) 0xe0) == (byte) 0xe0 || bytes[i + 1] == 0)) {",
        "tgt_lineno": 178
    },
    {
        "code": "new Here(\"Unit\", 178).given(bytes, new byte[] { 0, 109, 105, 109, 101, 47, 116, 121, 112, 101, 0, 3, 68, 69, 83, 67, 82, 73, 80, 84, 73, 79, 78, 0, 1, 2, 3, -1, -5, -1, -5, -1, 0, 4, 5 }).given(i, 27).checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "BufferTools",
        "index": 611,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 216,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 3,
        "num_vars": 3,
        "project": "mpatric_mp3agic",
        "source": "Unit",
        "stmt": "            if (bytes[i] == (byte) 0xff && ((bytes[i + 1] & (byte) 0xe0) == (byte) 0xe0 || bytes[i + 1] == 0)) {",
        "tgt_lineno": 178
    },
    {
        "code": "new Here(\"Unit\", 178).given(bytes, new byte[] { -1, 0, 2, 3, 4, -1, 0, 7, 8, 9, 10, 11, 12, 13, -1, 0 }).given(i, 14).checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "BufferTools",
        "index": 612,
        "itest_idx": 2,
        "itest_type": "R2",
        "lineno": 217,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 3,
        "num_vars": 3,
        "project": "mpatric_mp3agic",
        "source": "Unit",
        "stmt": "            if (bytes[i] == (byte) 0xff && ((bytes[i + 1] & (byte) 0xe0) == (byte) 0xe0 || bytes[i + 1] == 0)) {",
        "tgt_lineno": 178
    },
    {
        "code": "new Here(\"Unit\", 192).given(bytes, new byte[] { 0, 109, 105, 109, 101, 47, 116, 121, 112, 101, 0, 3, 68, 69, 83, 67, 82, 73, 80, 84, 73, 79, 78, 0, 1, 2, 3, -1, 0, -5, -1, 0, -5, -1, 0, 0, 4, 5 }).given(i, 27).checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "BufferTools",
        "index": 613,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 232,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 3,
        "num_vars": 3,
        "project": "mpatric_mp3agic",
        "source": "Unit",
        "stmt": "            if (bytes[i] == (byte) 0xff && bytes[i + 1] == 0 && ((bytes[i + 2] & (byte) 0xe0) == (byte) 0xe0 || bytes[i + 2] == 0)) {",
        "tgt_lineno": 192
    },
    {
        "code": "new Here(\"Unit\", 192).given(bytes, new byte[] { 0, 109, 105, 109, 101, 47, 116, 121, 112, 101, 0, 3, 68, 69, 83, 67, 82, 73, 80, 84, 73, 79, 78, 0, 1, 2, 3, -1, 0, -5, -1, 0, -5, -1, 0, 0, 4, 5 }).given(i, 21).checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "BufferTools",
        "index": 614,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 233,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 3,
        "num_vars": 3,
        "project": "mpatric_mp3agic",
        "source": "Unit",
        "stmt": "            if (bytes[i] == (byte) 0xff && bytes[i + 1] == 0 && ((bytes[i + 2] & (byte) 0xe0) == (byte) 0xe0 || bytes[i + 2] == 0)) {",
        "tgt_lineno": 192
    },
    {
        "code": "new Here(\"Unit\", 192).given(bytes, new byte[] { -1, 0, 0, 2, 3, 4, -1, 0, 0, 7, 8, 9, 10, 11, 12, 13, -1, 0, 0 }).given(i, 16).checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "BufferTools",
        "index": 615,
        "itest_idx": 2,
        "itest_type": "R2",
        "lineno": 234,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 3,
        "num_vars": 3,
        "project": "mpatric_mp3agic",
        "source": "Unit",
        "stmt": "            if (bytes[i] == (byte) 0xff && bytes[i + 1] == 0 && ((bytes[i + 2] & (byte) 0xe0) == (byte) 0xe0 || bytes[i + 2] == 0)) {",
        "tgt_lineno": 192
    },
    {
        "code": "new Here(\"Unit\", 210).given(bytes, new byte[] { -1, 0, 0, 2, 3, 4, -1, 0, 0, 7, 8, 9, 10, 11, 12, 13, -1, 0, 0 }).given(i, 16).checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "BufferTools",
        "index": 616,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 257,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 3,
        "num_vars": 3,
        "project": "mpatric_mp3agic",
        "source": "Unit",
        "stmt": "            if (bytes[i] == (byte) 0xff && bytes[i + 1] == 0 && ((bytes[i + 2] & (byte) 0xe0) == (byte) 0xe0 || bytes[i + 2] == 0)) {",
        "tgt_lineno": 210
    },
    {
        "code": "new Here(\"Unit\", 210).given(bytes, new byte[] { 0, 109, 105, 109, 101, 47, 116, 121, 112, 101, 0, 3, 68, 69, 83, 67, 82, 73, 80, 84, 73, 79, 78, 0, 1, 2, 3, -1, 0, -5, -1, 0, -5, -1, 0, 0, 4, 5 }).given(i, 27).checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "BufferTools",
        "index": 617,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 258,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 3,
        "num_vars": 3,
        "project": "mpatric_mp3agic",
        "source": "Unit",
        "stmt": "            if (bytes[i] == (byte) 0xff && bytes[i + 1] == 0 && ((bytes[i + 2] & (byte) 0xe0) == (byte) 0xe0 || bytes[i + 2] == 0)) {",
        "tgt_lineno": 210
    },
    {
        "code": "new Here(\"Unit\", 210).given(bytes, new byte[] { -1, 0, 0, 2, 3, 4, -1, 0, 0, 7, 8, 9, 10, 11, 12, 13, -1, 0, 0 }).given(i, 15).checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "BufferTools",
        "index": 618,
        "itest_idx": 2,
        "itest_type": "R2",
        "lineno": 259,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 3,
        "num_vars": 3,
        "project": "mpatric_mp3agic",
        "source": "Unit",
        "stmt": "            if (bytes[i] == (byte) 0xff && bytes[i + 1] == 0 && ((bytes[i + 2] & (byte) 0xe0) == (byte) 0xe0 || bytes[i + 2] == 0)) {",
        "tgt_lineno": 210
    },
    {
        "code": "new Here(\"Unit\", 92).given(i, 21).given(bitMask, 4292870144L).checkTrue(group());",
        "context": "break;",
        "context_loc": 1,
        "filename": "MpegFrame",
        "index": 619,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 147,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 2,
        "num_vars": 3,
        "project": "mpatric_mp3agic",
        "source": "Unit",
        "stmt": "            if (((bitMask >> i) & 1) != 0) {",
        "tgt_lineno": 92
    },
    {
        "code": "new Here(\"Unit\", 92).given(i, 0).given(bitMask, 4292870144L).checkFalse(group());",
        "context": "break;",
        "context_loc": 1,
        "filename": "MpegFrame",
        "index": 620,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 148,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 2,
        "num_vars": 3,
        "project": "mpatric_mp3agic",
        "source": "Unit",
        "stmt": "            if (((bitMask >> i) & 1) != 0) {",
        "tgt_lineno": 92
    },
    {
        "code": "new Here(\"Unit\", 183).given(columnHeading, \"Master\").checkEq(start, -1);",
        "context": "int end = columnHeading.indexOf(')');\nif (start == -1 || end == -1 || start >= end) {\nthrowWrongHeaderException();\n}\nreturn columnHeading.substring(start + 1, end);",
        "context_loc": 5,
        "filename": "CSVFile",
        "index": 621,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 180,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "netceteragroup_trema-core",
        "source": "Unit",
        "stmt": "        int start = columnHeading.indexOf('(');",
        "tgt_lineno": 183
    },
    {
        "code": "new Here(\"Unit\", 184).given(columnHeading, \"Master\").checkEq(end, -1);",
        "context": "if (start == -1 || end == -1 || start >= end) {\nthrowWrongHeaderException();\n}\nreturn columnHeading.substring(start + 1, end);",
        "context_loc": 4,
        "filename": "CSVFile",
        "index": 622,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 183,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "netceteragroup_trema-core",
        "source": "Unit",
        "stmt": "        int end = columnHeading.indexOf(')');",
        "tgt_lineno": 184
    },
    {
        "code": "new Here(\"Unit\", 21).given(REPLACEMENT, \"<br/>\").given(value, \"The quick brown fox jumps\\\\n over the lazy dog.\").checkEq(newValue, \"The quick brown fox jumps\\\\n over the lazy dog.\");",
        "context": "newValue = StringUtils.replace(newValue, \"\\\\r\", REPLACEMENT);\nkeyValuePair.setValue(newValue);",
        "context_loc": 2,
        "filename": "HtmlLineBreakConverter",
        "index": 623,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 24,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 2,
        "num_vars": 3,
        "project": "netceteragroup_trema-core",
        "source": "Unit",
        "stmt": "            String newValue = StringUtils.replace(value, \"\\\\r\\\\n\", REPLACEMENT);",
        "tgt_lineno": 21
    },
    {
        "code": "new Here(\"Unit\", 21).given(REPLACEMENT, \"<br/>\").given(value, \"The quick brown fox jumps\\\\r\\\\n over the lazy dog.\").checkEq(newValue, \"The quick brown fox jumps<br/> over the lazy dog.\");",
        "context": "newValue = StringUtils.replace(newValue, \"\\\\r\", REPLACEMENT);\nkeyValuePair.setValue(newValue);",
        "context_loc": 2,
        "filename": "HtmlLineBreakConverter",
        "index": 624,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 25,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 2,
        "num_vars": 3,
        "project": "netceteragroup_trema-core",
        "source": "Unit",
        "stmt": "            String newValue = StringUtils.replace(value, \"\\\\r\\\\n\", REPLACEMENT);",
        "tgt_lineno": 21
    },
    {
        "code": "new Here(\"Unit\", 22).given(REPLACEMENT, \"<br/>\").given(newValue, \"The quick brown fox jumps\\\\n over the lazy dog.\").checkEq(newValue, \"The quick brown fox jumps<br/> over the lazy dog.\");",
        "context": "keyValuePair.setValue(newValue);",
        "context_loc": 1,
        "filename": "HtmlLineBreakConverter",
        "index": 625,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 27,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 1,
        "num_vars": 3,
        "project": "netceteragroup_trema-core",
        "source": "Unit",
        "stmt": "            newValue = StringUtils.replace(newValue, \"\\\\n\", REPLACEMENT);",
        "tgt_lineno": 22
    },
    {
        "code": "new Here(\"Unit\", 23).given(REPLACEMENT, \"<br/>\").given(newValue, \"The quick brown fox jumps\\\\r over the lazy dog.\").checkEq(newValue, \"The quick brown fox jumps<br/> over the lazy dog.\");",
        "context": "",
        "context_loc": 0,
        "filename": "HtmlLineBreakConverter",
        "index": 626,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 29,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 2,
        "num_vars": 3,
        "project": "netceteragroup_trema-core",
        "source": "Unit",
        "stmt": "            newValue = StringUtils.replace(newValue, \"\\\\r\", REPLACEMENT);",
        "tgt_lineno": 23
    },
    {
        "code": "new Here(\"Unit\", 23).given(REPLACEMENT, \"<br/>\").given(newValue, \"The quick brown fox jumps<br/> over the lazy dog.\").checkEq(newValue, \"The quick brown fox jumps<br/> over the lazy dog.\");",
        "context": "",
        "context_loc": 0,
        "filename": "HtmlLineBreakConverter",
        "index": 627,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 30,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 2,
        "num_vars": 3,
        "project": "netceteragroup_trema-core",
        "source": "Unit",
        "stmt": "            newValue = StringUtils.replace(newValue, \"\\\\r\", REPLACEMENT);",
        "tgt_lineno": 23
    },
    {
        "code": "new Here(\"Unit\", 137).given(matcher, \"10.xml\").checkEq(placeholderIOS, \"%d\");",
        "context": "if (placeholderAndroid != null) {\nplaceholderAndroid = String.format(placeholderAndroid, index++);\nresolved = resolved.replaceFirst(placeholderIOS, placeholderAndroid);\n}",
        "context_loc": 4,
        "filename": "AndroidExporter",
        "index": 628,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 130,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "netceteragroup_trema-core",
        "source": "Unit",
        "stmt": "            String placeholderIOS = matcher.group();",
        "tgt_lineno": 137
    },
    {
        "code": "new Here(\"Unit\", 74).given(ret, 4).checkEq(ret, 1024);",
        "context": "",
        "context_loc": 0,
        "filename": "LoadedFont",
        "index": 629,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 74,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "phax_ph-pdf-layout",
        "source": "Unit",
        "stmt": "                ret <<= 8;",
        "tgt_lineno": 74
    },
    {
        "code": "new Here(\"Unit\", 75).given(ret, 0).given(b, 70).checkEq(ret, 70);",
        "context": "return ret;",
        "context_loc": 1,
        "filename": "LoadedFont",
        "index": 630,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 76,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 2,
        "num_vars": 3,
        "project": "phax_ph-pdf-layout",
        "source": "Unit",
        "stmt": "                ret |= (b + 256) % 256;",
        "tgt_lineno": 75
    },
    {
        "code": "new Here(\"Unit\", 75).given(ret, 0).given(b, -33).checkEq(ret, 223);",
        "context": "return ret;",
        "context_loc": 1,
        "filename": "LoadedFont",
        "index": 631,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 77,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 2,
        "num_vars": 3,
        "project": "phax_ph-pdf-layout",
        "source": "Unit",
        "stmt": "                ret |= (b + 256) % 256;",
        "tgt_lineno": 75
    },
    {
        "code": "new Here(\"Unit\", 28).given(regexPattern, \"^/\\\\w.*\\\\.\\\\w.*\").checkEq(this.matcher, \"/^\\\\/\\\\w.*\\\\.\\\\w.*/\");",
        "context": "",
        "context_loc": 0,
        "filename": "FormatValidation",
        "index": 632,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 30,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "ralscha_extclassgenerator",
        "source": "Unit",
        "stmt": "        this.matcher = \"/\" + regexPattern.replace(\"/\", \"\\\\/\") + \"/\";",
        "tgt_lineno": 28
    },
    {
        "code": "new Here(\"Unit\", 149).given(matcher, \"26.xml\").checkTrue(group());",
        "context": "if (\"mm\".equals(matcher.group(2))) {\nfactor = MM_TO_PIXEL;\n} else if (\"cm\".equals(matcher.group(2))) {\nfactor = CM_TO_PIXEL;\n} else if (\"pt\".equals(matcher.group(2))) {\nfactor = PT_TO_PIXEL;\n}\nreturn Math.round(factor * Float.parseFloat(matcher.group(1)));",
        "context_loc": 8,
        "filename": "Exclusions",
        "index": 633,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 159,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "red6_pdfcompare",
        "source": "Unit",
        "stmt": "            if (matcher.matches()) {",
        "tgt_lineno": 149
    },
    {
        "code": "new Here(\"Unit\", 151).given(matcher, \"45.xml\").checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "Exclusions",
        "index": 634,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 162,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "red6_pdfcompare",
        "source": "Unit",
        "stmt": "                if (\"mm\".equals(matcher.group(2))) {",
        "tgt_lineno": 151
    },
    {
        "code": "new Here(\"Unit\", 153).given(matcher, \"49.xml\").checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "Exclusions",
        "index": 635,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 165,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "red6_pdfcompare",
        "source": "Unit",
        "stmt": "                } else if (\"cm\".equals(matcher.group(2))) {",
        "tgt_lineno": 153
    },
    {
        "code": "new Here(\"Unit\", 155).given(matcher, \"27.xml\").checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "Exclusions",
        "index": 636,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 168,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "red6_pdfcompare",
        "source": "Unit",
        "stmt": "                } else if (\"pt\".equals(matcher.group(2))) {",
        "tgt_lineno": 155
    },
    {
        "code": "new Here(\"Unit\", 130).given(this.hasDifferenceInExclusion, false).given(diffCalculator, \"1.xml\").checkEq(this.hasDifferenceInExclusion, true);",
        "context": "if (diffCalculator.differencesFound()) {\nisEqual = false;\ndiffAreas.add(diffCalculator.getDiffArea());\ndiffImages.put(pageIndex, diffImage);\npages++;\n} else if (environment.addEqualPagesToResult()) {\ndiffImages.put(pageIndex, diffImage);\npages++;\n}",
        "context_loc": 9,
        "filename": "CompareResultImpl",
        "index": 637,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 139,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 1,
        "num_vars": 3,
        "project": "red6_pdfcompare",
        "source": "Unit",
        "stmt": "        this.hasDifferenceInExclusion |= diffCalculator.differencesFoundInExclusion();",
        "tgt_lineno": 130
    },
    {
        "code": "new Here(\"Unit\", 138).given(matcher, \"15.xml\").checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "DefaultFacebookExceptionGenerator",
        "index": 638,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 119,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "restfb_restfb",
        "source": "Unit",
        "stmt": "        if (!matcher.find()) {",
        "tgt_lineno": 138
    },
    {
        "code": "new Here(\"Unit\", 635).given(rawExpires, \"5184000\").checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "FacebookClient",
        "index": 639,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 625,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "restfb_restfb",
        "source": "Unit",
        "stmt": "            if (rawExpires != null && rawExpires.trim().matches(\"\\\\d+\")) {",
        "tgt_lineno": 635
    },
    {
        "code": "new Here(\"Randoop\", 138).given(url, \"restfb://url?{}\").checkEq(urlParts, new String[] { \"restfb://url\", \"{}\" });",
        "context": "String query = urlParts[1];\nparameters = // \nPattern.compile(\"&\").splitAsStream(query).map(s -> Arrays.copyOf(s.split(\"=\"), 2)).collect(Collectors.groupingBy(s -> urlDecode(s[0]), Collectors.mapping(s -> urlDecode(s[1]), toList())));\n}\nreturn parameters;",
        "context_loc": 5,
        "filename": "UrlUtils",
        "index": 640,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 137,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "restfb_restfb",
        "source": "Randoop",
        "stmt": "        String[] urlParts = url.split(\"\\\\?\");",
        "tgt_lineno": 138
    },
    {
        "code": "new Here(\"Randoop\", 142).given(query, \"{}\").checkEq(parameters, \"115.xml\");",
        "context": "return parameters;",
        "context_loc": 1,
        "filename": "UrlUtils",
        "index": 641,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 142,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "restfb_restfb",
        "source": "Randoop",
        "stmt": "            Pattern.compile(\"&\").splitAsStream(query).map(s -> Arrays.copyOf(s.split(\"=\"), 2)).collect(Collectors.groupingBy(s -> urlDecode(s[0]), Collectors.mapping(s -> urlDecode(s[1]), toList())));",
        "tgt_lineno": 142
    },
    {
        "code": "new Here(\"Unit\", 142).given(query, \"access_token=123\").checkEq(parameters, \"3.xml\");",
        "context": "return parameters;",
        "context_loc": 1,
        "filename": "UrlUtils",
        "index": 642,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 143,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "restfb_restfb",
        "source": "Unit",
        "stmt": "            Pattern.compile(\"&\").splitAsStream(query).map(s -> Arrays.copyOf(s.split(\"=\"), 2)).collect(Collectors.groupingBy(s -> urlDecode(s[0]), Collectors.mapping(s -> urlDecode(s[1]), toList())));",
        "tgt_lineno": 142
    },
    {
        "code": "new Here(\"Unit\", 164).given(url, \"http://www.example.com\").checkEq(urlParts, new String[] { \"http://www.example.com\" });",
        "context": "if (urlParts.length == 2) {\nMap<String, List<String>> paramMap = extractParametersFromQueryString(urlParts[1]);\nif (paramMap.containsKey(key)) {\nString queryValue = paramMap.get(key).get(0);\nreturn url.replace(key + \"=\" + queryValue, qParameter);\n} else {\nreturn url + \"&\" + qParameter;\n}\n} else {\nreturn url + \"?\" + qParameter;\n}",
        "context_loc": 11,
        "filename": "UrlUtils",
        "index": 643,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 163,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "restfb_restfb",
        "source": "Unit",
        "stmt": "        String[] urlParts = url.split(\"\\\\?\");",
        "tgt_lineno": 164
    },
    {
        "code": "new Here(\"Unit\", 197).given(queryValue, \"123\").given(key, \"access_token\").given(url, \"http://www.example.com?access_token=123&before=1234\").checkEq(result, \"http://www.example.com?&before=1234\");",
        "context": "// @TODO find a better way to solve this\nresult = result.replace(\"?&\", \"?\").replace(\"&&\", \"&\");\nif (result.endsWith(\"&\")) {\nreturn result.substring(0, result.length() - 1);\n} else {\nreturn result;\n}",
        "context_loc": 7,
        "filename": "UrlUtils",
        "index": 644,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 195,
        "num_checks": 1,
        "num_givens": 3,
        "num_itests": 1,
        "num_vars": 4,
        "project": "restfb_restfb",
        "source": "Unit",
        "stmt": "                String result = url.replace(key + \"=\" + queryValue, \"\");",
        "tgt_lineno": 197
    },
    {
        "code": "new Here(\"Unit\", 200).given(result, \"http://www.example.com?access_token=123&\").checkEq(result, \"http://www.example.com?access_token=123&\");",
        "context": "return result.substring(0, result.length() - 1);\n} else {\nreturn result;\n}",
        "context_loc": 4,
        "filename": "UrlUtils",
        "index": 645,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 199,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "restfb_restfb",
        "source": "Unit",
        "stmt": "                result = result.replace(\"?&\", \"?\").replace(\"&&\", \"&\");",
        "tgt_lineno": 200
    },
    {
        "code": "new Here(\"Unit\", 200).given(result, \"http://www.example.com?&before=1234\").checkEq(result, \"http://www.example.com?before=1234\");",
        "context": "return result.substring(0, result.length() - 1);\n} else {\nreturn result;\n}",
        "context_loc": 4,
        "filename": "UrlUtils",
        "index": 646,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 200,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "restfb_restfb",
        "source": "Unit",
        "stmt": "                result = result.replace(\"?&\", \"?\").replace(\"&&\", \"&\");",
        "tgt_lineno": 200
    },
    {
        "code": "new Here(\"Unit\", 69).given(key, \"mon_1_open\").checkEq(indexStr, \"1\");",
        "context": "return true;",
        "context_loc": 1,
        "filename": "Hours",
        "index": 647,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 67,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "restfb_restfb",
        "source": "Unit",
        "stmt": "            String indexStr = key.substring(4).replace(\"_open\", \"\");",
        "tgt_lineno": 69
    },
    {
        "code": "new Here(\"Unit\", 75).given(key, \"mon_1_close\").checkEq(indexStr, \"1\");",
        "context": "return true;",
        "context_loc": 1,
        "filename": "Hours",
        "index": 648,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 73,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "restfb_restfb",
        "source": "Unit",
        "stmt": "            String indexStr = key.substring(4).replace(\"_close\", \"\");",
        "tgt_lineno": 75
    },
    {
        "code": "new Here(\"Unit\", 40).given(imageUrl, \"123456789\").checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "MediaAttachment",
        "index": 649,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 41,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "restfb_restfb",
        "source": "Unit",
        "stmt": "        if (imageUrl.matches(\"^\\\\d+$\")) {",
        "tgt_lineno": 40
    },
    {
        "code": "new Here(\"Unit\", 68).given(messagePattern, \"Simple\\\\{} text\").given(k, 0).given(PLACEHOLDER, \"{}\").checkEq(l, 7);",
        "context": "sb.append(messagePattern, k, l);\nsb.append(\"%s\");\nk = l + 2;\nplaceholderCount++;\n} else {\nsb.append(messagePattern, k, l + 3);\nk = l + 3;\n}",
        "context_loc": 8,
        "filename": "JulMessage",
        "index": 650,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 68,
        "num_checks": 1,
        "num_givens": 3,
        "num_itests": 2,
        "num_vars": 4,
        "project": "restfb_restfb",
        "source": "Unit",
        "stmt": "            int l = messagePattern.indexOf(PLACEHOLDER, k);",
        "tgt_lineno": 68
    },
    {
        "code": "new Here(\"Unit\", 68).given(messagePattern, \"{}Simple text {}\").given(k, 0).given(PLACEHOLDER, \"{}\").checkEq(l, 0);",
        "context": "sb.append(messagePattern, k, l);\nsb.append(\"%s\");\nk = l + 2;\nplaceholderCount++;\n} else {\nsb.append(messagePattern, k, l + 3);\nk = l + 3;\n}",
        "context_loc": 8,
        "filename": "JulMessage",
        "index": 651,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 69,
        "num_checks": 1,
        "num_givens": 3,
        "num_itests": 2,
        "num_vars": 4,
        "project": "restfb_restfb",
        "source": "Unit",
        "stmt": "            int l = messagePattern.indexOf(PLACEHOLDER, k);",
        "tgt_lineno": 68
    },
    {
        "code": "new Here(\"Unit\", 386).given(facebookFieldsNamesWithOccurrenceCount, \"0.xml\").checkEq(facebookFieldNamesWithMultipleMappings, \"1.xml\");",
        "context": "",
        "context_loc": 0,
        "filename": "DefaultJsonMapper",
        "index": 652,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 331,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "restfb_restfb",
        "source": "Unit",
        "stmt": "        Set<String> facebookFieldNamesWithMultipleMappings = facebookFieldsNamesWithOccurrenceCount.entrySet().stream().filter(entry -> entry.getValue() > 1).map(Entry::getKey).collect(Collectors.toSet());",
        "tgt_lineno": 386
    },
    {
        "code": "new Here(\"Unit\", 97).given(date, \"1331784257\").checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "DateUtils",
        "index": 653,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 99,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "restfb_restfb",
        "source": "Unit",
        "stmt": "        if (date.trim().matches(\"\\\\d+\")) {",
        "tgt_lineno": 97
    },
    {
        "code": "new Here(\"Unit\", 555).given(signedRequest, \"wrongSignedRequest\").checkEq(signedRequestTokens, new String[] { \"wrongSignedRequest\" });",
        "context": "throw new FacebookSignedRequestParsingException(format(\"Signed request '%s' is expected to be signature and payload strings separated by a '.'\", signedRequest));\n}\nString encodedSignature = signedRequestTokens[0];\nString urlDecodedSignature = urlDecodeSignedRequestToken(encodedSignature);\nbyte[] signature = decodeBase64(urlDecodedSignature);\nString encodedPayload = signedRequestTokens[1];\nString urlDecodedPayload = urlDecodeSignedRequestToken(encodedPayload);\nString payload = StringUtils.toString(decodeBase64(urlDecodedPayload));\n// Convert payload to a JsonObject so we can pull algorithm data out of it\nJsonObject payloadObject = getJsonMapper().toJavaObject(payload, JsonObject.class);\nif (!payloadObject.contains(\"algorithm\")) {\nthrow new FacebookSignedRequestParsingException(\"Unable to detect algorithm used for signed request\");\n}\nString algorithm = payloadObject.getString(\"algorithm\", null);\nif (!verifySignedRequest(appSecret, algorithm, encodedPayload, signature)) {\nthrow new FacebookSignedRequestVerificationException(\"Signed request verification failed. Are you sure the request was made for the app identified by the app secret you provided?\");\n}\n// Marshal to the user's preferred type.\n// If the user asked for a JsonObject, send back the one we already parsed.\nreturn objectType.equals(JsonObject.class) ? (T) payloadObject : getJsonMapper().toJavaObject(payload, objectType);",
        "context_loc": 20,
        "filename": "DefaultFacebookClient",
        "index": 654,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 509,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "restfb_restfb",
        "source": "Unit",
        "stmt": "        String[] signedRequestTokens = signedRequest.split(\"[.]\");",
        "tgt_lineno": 555
    },
    {
        "code": "new Here(\"Unit\", 88).given(data.length, 32).checkEq(out, new char[] { '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000' });",
        "context": "int v = data[j] & 0xFF;\nout[j * 2] = HEX_ARRAY[v >>> 4];\nout[j * 2 + 1] = HEX_ARRAY[v & 0x0F];\n}\nreturn new String(out).getBytes(StandardCharsets.UTF_8);",
        "context_loc": 5,
        "filename": "EncodingUtils",
        "index": 655,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 89,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "restfb_restfb",
        "source": "Unit",
        "stmt": "        char[] out = new char[data.length << 1];",
        "tgt_lineno": 88
    },
    {
        "code": "new Here(\"Unit\", 90).given(data, new byte[] { 50, 45, -79, -128, -106, -30, 5, -18, 59, 63, -17, 10, 84, 14, 85, 102, -84, 65, -9, 99, 29, 91, -124, -83, -41, 89, 8, 24, 20, 88, 56, -105 }).given(j, 0).checkEq(v, 50);",
        "context": "out[j * 2 + 1] = HEX_ARRAY[v & 0x0F];",
        "context_loc": 1,
        "filename": "EncodingUtils",
        "index": 656,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 92,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 1,
        "num_vars": 3,
        "project": "restfb_restfb",
        "source": "Unit",
        "stmt": "            int v = data[j] & 0xFF;",
        "tgt_lineno": 90
    },
    {
        "code": "new Here(\"Unit\", 91).given(v, 50).given(HEX_ARRAY, new char[] { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f' }).checkEq(out[j * 2], '3');",
        "context": "",
        "context_loc": 0,
        "filename": "EncodingUtils",
        "index": 657,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 94,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 1,
        "num_vars": 3,
        "project": "restfb_restfb",
        "source": "Unit",
        "stmt": "            out[j * 2] = HEX_ARRAY[v >>> 4];",
        "tgt_lineno": 91
    },
    {
        "code": "new Here(\"Unit\", 92).given(v, 50).given(HEX_ARRAY, new char[] { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f' }).checkEq(out[j * 2 + 1], '2');",
        "context": "return new String(out).getBytes(StandardCharsets.UTF_8);",
        "context_loc": 1,
        "filename": "EncodingUtils",
        "index": 658,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 96,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 1,
        "num_vars": 3,
        "project": "restfb_restfb",
        "source": "Unit",
        "stmt": "            out[j * 2 + 1] = HEX_ARRAY[v & 0x0F];",
        "tgt_lineno": 92
    },
    {
        "code": "new Here(\"Unit\", 124).given(temp, 4609434218613702656L).checkEq(result, 1073217536);",
        "context": "result = 31 * result + oLabel;\nresult = 31 * result + (nextState != null ? nextState.getId() : 0);\nreturn result;",
        "context_loc": 3,
        "filename": "MutableArc",
        "index": 659,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 129,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "steveash_jopenfst",
        "source": "Unit",
        "stmt": "        result = (int) (temp ^ (temp >>> 32));",
        "tgt_lineno": 124
    },
    {
        "code": "new Here(\"Unit\", 66).given(result, 1).given(temp, 4621256167635550208L).checkEq(result, 1075970079);",
        "context": "",
        "context_loc": 0,
        "filename": "IndexWeight",
        "index": 660,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 67,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 2,
        "num_vars": 3,
        "project": "steveash_jopenfst",
        "source": "Unit",
        "stmt": "        result = 31 * result + (int) (temp ^ (temp >>> 32));",
        "tgt_lineno": 66
    },
    {
        "code": "new Here(\"Unit\", 66).given(result, 0).given(temp, 0L).checkEq(result, 0);",
        "context": "",
        "context_loc": 0,
        "filename": "IndexWeight",
        "index": 661,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 68,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 2,
        "num_vars": 3,
        "project": "steveash_jopenfst",
        "source": "Unit",
        "stmt": "        result = 31 * result + (int) (temp ^ (temp >>> 32));",
        "tgt_lineno": 66
    },
    {
        "code": "new Here(\"Unit\", 294).given(INCLUDE_KEY, \"$include\").given(properties, \"2.xml\").checkEq(includes, new String[] { \"testForRecursiveIncludes2\", \"toBeIncluded\" });",
        "context": "",
        "context_loc": 0,
        "filename": "PropertyLoader",
        "index": 662,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 282,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 1,
        "num_vars": 3,
        "project": "TNG_property-loader",
        "source": "Unit",
        "stmt": "            includes = properties.getProperty(INCLUDE_KEY).split(\",\");",
        "tgt_lineno": 294
    },
    {
        "code": "new Here(\"Unit\", 22).given(matcher, \"0.xml\").checkFalse(group());",
        "context": "if (value == null) {\nlog.warn(\"There is no system property called '{}'.\", matcher.group(1));\n}",
        "context_loc": 3,
        "filename": "EnvironmentResolvingFilter",
        "index": 663,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 24,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "TNG_property-loader",
        "source": "Unit",
        "stmt": "        if (matcher.matches()) {",
        "tgt_lineno": 22
    },
    {
        "code": "new Here(\"Unit\", 52).given(versionMatcher, \"8.xml\").checkTrue(group());",
        "context": "return true;",
        "context_loc": 1,
        "filename": "ListChangesOptionByVersion",
        "index": 664,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 55,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "uwolfer_gerrit-rest-java-client",
        "source": "Unit",
        "stmt": "        if (!versionMatcher.matches()) {",
        "tgt_lineno": 52
    },
    {
        "code": "new Here(\"Unit\", 57).given(versionMatcher, \"5.xml\").given(MAX_CHANGE_OPTION_BY_VERSION, \"6.xml\").checkEq(maxOption, \"7.xml\");",
        "context": "// No known restrictions on known older versions, assuming to be the latest and greatest\nreturn true;\n}\nreturn listChangesOption.getValue() <= maxOption.getValue();",
        "context_loc": 4,
        "filename": "ListChangesOptionByVersion",
        "index": 665,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 60,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 1,
        "num_vars": 3,
        "project": "uwolfer_gerrit-rest-java-client",
        "source": "Unit",
        "stmt": "        ListChangesOption maxOption = MAX_CHANGE_OPTION_BY_VERSION.get(versionMatcher.group(1) + \".\" + versionMatcher.group(2));",
        "tgt_lineno": 57
    },
    {
        "code": "new Here(\"Unit\", 388).given(matcher, \"11.xml\").checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "GerritRestClient",
        "index": 666,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 359,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "uwolfer_gerrit-rest-java-client",
        "source": "Unit",
        "stmt": "            if (matcher.find()) {",
        "tgt_lineno": 388
    },
    {
        "code": "new Here(\"Unit\", 515).given(statusLine, \"12.xml\").given(body, \"<html>\\n<head>\\n<meta http-equiv=\\\"Content-Type\\\" content=\\\"text/html;charset=ISO-8859-1\\\"/>\\n<title>Error 404 Not Found</title>\\n</head>\\n<body>\\n<h2>HTTP ERROR: 404</h2>\\n<p>Problem accessing /changes/1/abandon. Reason:\\n<pre>    Not Found</pre></p>\\n<hr /><i><small>Powered by Jetty:// 8.2.0.v20160908</small></i>\\n                                                \\n                                                \\n                                                \\n                                                \\n                                                \\n                                                \\n                                                \\n                                                \\n                                                \\n                                                \\n                                                \\n                                                \\n                                                \\n                                                \\n                                                \\n                                                \\n                                                \\n                                                \\n                                                \\n                                                \\n</body>\\n</html>\").checkEq(message, \"Request not successful. Message: Not Found. Status-Code: 404. Content: <html>\\n<head>\\n<meta http-equiv=\\\"Content-Type\\\" content=\\\"text/html;charset=ISO-8859-1\\\"/>\\n<title>Error 404 Not Found</title>\\n</head>\\n<body>\\n<h2>HTTP ERROR: 404</h2>\\n<p>Problem accessing /changes/1/abandon. Reason:\\n<pre>    Not Found</pre></p>\\n<hr /><i><small>Powered by Jetty:// 8.2.0.v20160908</small></i>\\n                                                \\n                                                \\n                                                \\n                                                \\n                                                \\n                                                \\n                                                \\n                                                \\n                                                \\n                                                \\n                                                \\n                                                \\n                                                \\n                                                \\n                                                \\n                                                \\n                                                \\n                                                \\n                                                \\n                                                \\n</body>\\n</html>.\");",
        "context": "",
        "context_loc": 0,
        "filename": "GerritRestClient",
        "index": 667,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 478,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 1,
        "num_vars": 3,
        "project": "uwolfer_gerrit-rest-java-client",
        "source": "Unit",
        "stmt": "        String message = String.format(\"Request not successful. Message: %s. Status-Code: %s. Content: %s.\", statusLine.getReasonPhrase(), statusLine.getStatusCode(), body);",
        "tgt_lineno": 515
    },
    {
        "code": "new Here(\"Unit\", 67).given(b, new byte[] { 105, 115, 58, 109, 101, 114, 103, 101, 100, 32, 105, 115, 58, 119, 97, 116, 99, 104, 101, 100 }).given(i, 2).checkEq(c, 58);",
        "context": "if (s == 0) {\nr.append('%');\nr.append(hexc[c >> 4]);\nr.append(hexc[c & 15]);\n} else {\nr.append(s);\n}",
        "context_loc": 7,
        "filename": "StandardKeyEncoder",
        "index": 668,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 62,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 1,
        "num_vars": 3,
        "project": "uwolfer_gerrit-rest-java-client",
        "source": "Unit",
        "stmt": "            final int c = b[i] & 0xff;",
        "tgt_lineno": 67
    },
    {
        "code": "new Here(\"Randoop\", 81).given(e, \"GroupInfo{name=null, id=null}\").checkTrue(group());",
        "context": "return e.replace('+', ' ');",
        "context_loc": 1,
        "filename": "StandardKeyEncoder",
        "index": 669,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 77,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "uwolfer_gerrit-rest-java-client",
        "source": "Randoop",
        "stmt": "        if (e.indexOf('%') < 0) {",
        "tgt_lineno": 81
    },
    {
        "code": "new Here(\"Randoop\", 81).given(e, \"com.urswolfer.gerrit.client.rest.http.HttpStatusException: MM/dd/yy\").checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "StandardKeyEncoder",
        "index": 670,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 79,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "uwolfer_gerrit-rest-java-client",
        "source": "Randoop",
        "stmt": "            new Here(\"Randoop\", 81).given(e, \"NotifyInfo{accounts=[, hi!, /groups, MenuItem{url=locks(?:/(.*)(?:/unlock))?,name=locks(?:/(.*)(?:/unlock))?,target=_blank,id=null}, /groups/hi%21, MenuItem{url=locks(?:/(.*)(?:/unlock))?,name=locks(?:/(.*)(?:/unlock))?,target=_blank,id=null}]}\").checkFalse(group());",
        "tgt_lineno": 81
    },
    {
        "code": "new Here(\"Unit\", 87).given(queryPart, \"q=jdoe&n=5\").checkEq(request, \"/accounts/?suggest&q=jdoe&n=5\");",
        "context": "return accountsParser.parseAccountInfos(suggestedReviewers);",
        "context_loc": 1,
        "filename": "AccountsRestClient",
        "index": 671,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 90,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "uwolfer_gerrit-rest-java-client",
        "source": "Unit",
        "stmt": "        String request = String.format(\"/accounts/?suggest&%s\", queryPart);",
        "tgt_lineno": 87
    },
    {
        "code": "new Here(\"Unit\", 34).given(existingUserAgent, \"9.xml\").checkEq(userAgent, \"gerrit-rest-java-client/0.9.4 using BaseAgent\");",
        "context": "",
        "context_loc": 0,
        "filename": "UserAgentHttpRequestInterceptor",
        "index": 672,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 36,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "uwolfer_gerrit-rest-java-client",
        "source": "Unit",
        "stmt": "        String userAgent = String.format(\"gerrit-rest-java-client/%s using %s\", Version.get(), existingUserAgent.getValue());",
        "tgt_lineno": 34
    },
    {
        "code": "new Here(\"Unit\", 34).given(version, \"1.11.7\").checkEq(defaultUserAgent, \"visearch-java-sdk/1.11.7 \");",
        "context": "defaultUserAgent += String.format(\"%s/%s/%s/%s\", javaVMName, javaVMVersion, javaVersion, language);\nreturn defaultUserAgent;",
        "context_loc": 2,
        "filename": "ClientConfig",
        "index": 673,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 38,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "visenze_visearch-sdk-java",
        "source": "Unit",
        "stmt": "        String defaultUserAgent = String.format(\"visearch-java-sdk/%s \", version);",
        "tgt_lineno": 34
    },
    {
        "code": "new Here(\"Unit\", 35).given(osVersion, \"5.4.0-86-generic\").given(osName, \"Linux\").given(defaultUserAgent, \"visearch-java-sdk/1.11.7 \").checkEq(defaultUserAgent, \"visearch-java-sdk/1.11.7 Linux/5.4.0-86-generic \");",
        "context": "return defaultUserAgent;",
        "context_loc": 1,
        "filename": "ClientConfig",
        "index": 674,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 40,
        "num_checks": 1,
        "num_givens": 3,
        "num_itests": 1,
        "num_vars": 4,
        "project": "visenze_visearch-sdk-java",
        "source": "Unit",
        "stmt": "        defaultUserAgent += String.format(\"%s/%s \", osName, osVersion);",
        "tgt_lineno": 35
    },
    {
        "code": "new Here(\"Unit\", 36).given(javaVMName, \"OpenJDK 64-Bit Server VM\").given(javaVersion, \"1.8.0_302\").given(language, \"en\").given(javaVMVersion, \"25.302-b08\").given(defaultUserAgent, \"visearch-java-sdk/1.11.7 Linux/5.4.0-86-generic \").checkEq(defaultUserAgent, \"visearch-java-sdk/1.11.7 Linux/5.4.0-86-generic OpenJDK 64-Bit Server VM/25.302-b08/1.8.0_302/en\");",
        "context": "",
        "context_loc": 0,
        "filename": "ClientConfig",
        "index": 675,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 42,
        "num_checks": 1,
        "num_givens": 5,
        "num_itests": 1,
        "num_vars": 6,
        "project": "visenze_visearch-sdk-java",
        "source": "Unit",
        "stmt": "        defaultUserAgent += String.format(\"%s/%s/%s/%s\", javaVMName, javaVMVersion, javaVersion, language);",
        "tgt_lineno": 36
    },
    {
        "code": "new Here(\"Unit\", 42).given(version, \"1.11.7\").checkEq(xRequestWith, \"visearch-java-sdk/1.11.7\");",
        "context": "",
        "context_loc": 0,
        "filename": "ClientConfig",
        "index": 676,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 49,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "visenze_visearch-sdk-java",
        "source": "Unit",
        "stmt": "        String xRequestWith = String.format(\"visearch-java-sdk/%s\", version);",
        "tgt_lineno": 42
    },
    {
        "code": "new Here(\"Unit\", 83).given(tamanho, 16).given(valor, \"49.xml\").given(posicaoPontoFlutuante, 2).checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "DFBigDecimalValidador",
        "index": 677,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 85,
        "num_checks": 1,
        "num_givens": 3,
        "num_itests": 3,
        "num_vars": 4,
        "project": "wmixvideo_nfe",
        "source": "Unit",
        "stmt": "        if (valor.toPlainString().length() > tamanho || StringUtils.split(valor.toPlainString(), \".\")[0].length() > (tamanho - (posicaoPontoFlutuante + 1)) || valor.scale() > posicaoPontoFlutuante) {",
        "tgt_lineno": 83
    },
    {
        "code": "new Here(\"Unit\", 83).given(tamanho, 5).given(valor, \"1.xml\").given(posicaoPontoFlutuante, 2).checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "DFBigDecimalValidador",
        "index": 678,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 86,
        "num_checks": 1,
        "num_givens": 3,
        "num_itests": 3,
        "num_vars": 4,
        "project": "wmixvideo_nfe",
        "source": "Unit",
        "stmt": "        if (valor.toPlainString().length() > tamanho || StringUtils.split(valor.toPlainString(), \".\")[0].length() > (tamanho - (posicaoPontoFlutuante + 1)) || valor.scale() > posicaoPontoFlutuante) {",
        "tgt_lineno": 83
    },
    {
        "code": "new Here(\"Unit\", 83).given(tamanho, 16).given(valor, \"100.xml\").given(posicaoPontoFlutuante, 2).checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "DFBigDecimalValidador",
        "index": 679,
        "itest_idx": 2,
        "itest_type": "R2",
        "lineno": 87,
        "num_checks": 1,
        "num_givens": 3,
        "num_itests": 3,
        "num_vars": 4,
        "project": "wmixvideo_nfe",
        "source": "Unit",
        "stmt": "        if (valor.toPlainString().length() > tamanho || StringUtils.split(valor.toPlainString(), \".\")[0].length() > (tamanho - (posicaoPontoFlutuante + 1)) || valor.scale() > posicaoPontoFlutuante) {",
        "tgt_lineno": 83
    },
    {
        "code": "new Here(\"Unit\", 41).given(matcher, \"119.xml\").checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "DFStringValidador",
        "index": 680,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 43,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "wmixvideo_nfe",
        "source": "Unit",
        "stmt": "            if (!matcher.find()) {",
        "tgt_lineno": 41
    },
    {
        "code": "new Here(\"Unit\", 50).given(matcher, \"153.xml\").checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "DFStringValidador",
        "index": 681,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 53,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "wmixvideo_nfe",
        "source": "Unit",
        "stmt": "            if (!matcher.find()) {",
        "tgt_lineno": 50
    },
    {
        "code": "new Here(\"Unit\", 59).given(matcher, \"4.xml\").checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "DFStringValidador",
        "index": 682,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 63,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "wmixvideo_nfe",
        "source": "Unit",
        "stmt": "            if (!matcher.find()) {",
        "tgt_lineno": 59
    },
    {
        "code": "new Here(\"Unit\", 70).given(matcher, \"173.xml\").checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "DFStringValidador",
        "index": 683,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 75,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "wmixvideo_nfe",
        "source": "Unit",
        "stmt": "            if (!matcher.find()) {",
        "tgt_lineno": 70
    },
    {
        "code": "new Here(\"Unit\", 80).given(matcher, \"173.xml\").checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "DFStringValidador",
        "index": 684,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 86,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "wmixvideo_nfe",
        "source": "Unit",
        "stmt": "            if (!matcher.find()) {",
        "tgt_lineno": 80
    },
    {
        "code": "new Here(\"Unit\", 181).given(matcher, \"51.xml\").checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "DFStringValidador",
        "index": 685,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 188,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "wmixvideo_nfe",
        "source": "Unit",
        "stmt": "            if (!matcher.find()) {",
        "tgt_lineno": 181
    },
    {
        "code": "new Here(\"Unit\", 190).given(matcher, \"8.xml\").checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "DFStringValidador",
        "index": 686,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 198,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "wmixvideo_nfe",
        "source": "Unit",
        "stmt": "            if (!matcher.find()) {",
        "tgt_lineno": 190
    },
    {
        "code": "new Here(\"Unit\", 199).given(matcher, \"98.xml\").checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "DFStringValidador",
        "index": 687,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 208,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "wmixvideo_nfe",
        "source": "Unit",
        "stmt": "            if (!matcher.find()) {",
        "tgt_lineno": 199
    },
    {
        "code": "new Here(\"Unit\", 208).given(matcher, \"98.xml\").checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "DFStringValidador",
        "index": 688,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 218,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "wmixvideo_nfe",
        "source": "Unit",
        "stmt": "            if (!matcher.find()) {",
        "tgt_lineno": 208
    },
    {
        "code": "new Here(\"Unit\", 218).given(matcher, \"6.xml\").checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "DFStringValidador",
        "index": 689,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 229,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "wmixvideo_nfe",
        "source": "Unit",
        "stmt": "            if (!matcher.find()) {",
        "tgt_lineno": 218
    },
    {
        "code": "new Here(\"Unit\", 227).given(matcher, \"6.xml\").checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "DFStringValidador",
        "index": 690,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 239,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "wmixvideo_nfe",
        "source": "Unit",
        "stmt": "            if (!matcher.find()) {",
        "tgt_lineno": 227
    },
    {
        "code": "new Here(\"Unit\", 237).given(matcher, \"135.xml\").checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "DFStringValidador",
        "index": 691,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 250,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "wmixvideo_nfe",
        "source": "Unit",
        "stmt": "            if (!matcher.find()) {",
        "tgt_lineno": 237
    },
    {
        "code": "new Here(\"Unit\", 246).given(matcher, \"37.xml\").checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "DFStringValidador",
        "index": 692,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 260,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "wmixvideo_nfe",
        "source": "Unit",
        "stmt": "            if (!matcher.find()) {",
        "tgt_lineno": 246
    },
    {
        "code": "new Here(\"Unit\", 255).given(matcher, \"3.xml\").checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "DFStringValidador",
        "index": 693,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 270,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "wmixvideo_nfe",
        "source": "Unit",
        "stmt": "            if (!matcher.find()) {",
        "tgt_lineno": 255
    },
    {
        "code": "new Here(\"Unit\", 655).given(matcher, \"118.xml\").checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "DFStringValidador",
        "index": 694,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 671,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "wmixvideo_nfe",
        "source": "Unit",
        "stmt": "            if (!matcher.find()) {",
        "tgt_lineno": 655
    },
    {
        "code": "new Here(\"Unit\", 664).given(matcher, \"126.xml\").checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "DFStringValidador",
        "index": 695,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 681,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "wmixvideo_nfe",
        "source": "Unit",
        "stmt": "            if (!matcher.find()) {",
        "tgt_lineno": 664
    },
    {
        "code": "new Here(\"Unit\", 728).given(matcher, \"179.xml\").checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "DFStringValidador",
        "index": 696,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 746,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "wmixvideo_nfe",
        "source": "Unit",
        "stmt": "            if (!matcher.find()) {",
        "tgt_lineno": 728
    },
    {
        "code": "new Here(\"Unit\", 738).given(matcher, \"125.xml\").checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "DFStringValidador",
        "index": 697,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 757,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "wmixvideo_nfe",
        "source": "Unit",
        "stmt": "            if (!matcher.find()) {",
        "tgt_lineno": 738
    },
    {
        "code": "new Here(\"Unit\", 747).given(matcher, \"40.xml\").checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "DFStringValidador",
        "index": 698,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 767,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "wmixvideo_nfe",
        "source": "Unit",
        "stmt": "            if (!matcher.find()) {",
        "tgt_lineno": 747
    },
    {
        "code": "new Here(\"Unit\", 775).given(matcher, \"99.xml\").checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "DFStringValidador",
        "index": 699,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 796,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "wmixvideo_nfe",
        "source": "Unit",
        "stmt": "        if (!matcher.find()) {",
        "tgt_lineno": 775
    },
    {
        "code": "new Here(\"Randoop\", 782).given(matcher, \"351.xml\").checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "DFStringValidador",
        "index": 700,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 804,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "wmixvideo_nfe",
        "source": "Randoop",
        "stmt": "        if (!matcher.find()) {",
        "tgt_lineno": 782
    },
    {
        "code": "new Here(\"Unit\", 823).given(typeMethods, \"70.xml\").checkEq(present, true);",
        "context": "// invoca o metodo para verificar qual classe de ICMS esta preenchida(objectValue!=null)\nObject objectValue = method.invoke(impostoICMS);\nif (objectValue != null) {\n// retorna o metodo necessario para extrair o valor de ModalidadeMVA.\nMethod modalidadeMethod = Arrays.stream(typeMethods).filter(method1 -> method1.getReturnType().equals(NFNotaInfoItemModalidadeBCICMSST.class)).findAny().get();\nNFNotaInfoItemModalidadeBCICMSST modalidadeBCICMSST = (NFNotaInfoItemModalidadeBCICMSST) modalidadeMethod.invoke(objectValue, new Object[] {});\n// retorna o metodo necessario para extrair o valor da percentualMargemValorAdicionadoICMSST(pMVAST).\nMethod percentualMethod = Arrays.stream(typeMethods).filter(method1 -> method1.getName().contains(\"getPercentualMargemValorAdicionadoICMSST\")).findAny().orElse(null);\nString percentualValue = null;\nif (percentualMethod != null) {\npercentualValue = (String) percentualMethod.invoke(objectValue, new Object[] {});\n}\n// verificacoes conforme a regra de validacao\nif (modalidadeBCICMSST != null && modalidadeBCICMSST.equals(NFNotaInfoItemModalidadeBCICMSST.MARGEM_VALOR_AGREGADO) && StringUtils.isBlank(percentualValue)) {\nthrow new IllegalStateException(\"Informada modalidade de determinacao da BC da ST como MVA(modBCST=4)\" + \" e nao informado o campo pMVAST!\");\n} else if (StringUtils.isNotBlank(percentualValue) && (modalidadeBCICMSST == null || !modalidadeBCICMSST.equals(NFNotaInfoItemModalidadeBCICMSST.MARGEM_VALOR_AGREGADO))) {\nthrow new IllegalStateException(String.format(\"Informada modalidade de determinacao da BC da ST diferente de MVA(informado[%s]) e informado o campo pMVAST\", (modalidadeBCICMSST != null ? modalidadeBCICMSST.toString() : \"modBCST<>4\")));\n}\n}\n}",
        "context_loc": 20,
        "filename": "DFStringValidador",
        "index": 701,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 846,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 9,
        "num_vars": 2,
        "project": "wmixvideo_nfe",
        "source": "Unit",
        "stmt": "                final boolean present = Arrays.stream(typeMethods).anyMatch(method1 -> method1.getReturnType().equals(NFNotaInfoItemModalidadeBCICMSST.class));",
        "tgt_lineno": 823
    },
    {
        "code": "new Here(\"Unit\", 823).given(typeMethods, \"75.xml\").checkEq(present, true);",
        "context": "// invoca o metodo para verificar qual classe de ICMS esta preenchida(objectValue!=null)\nObject objectValue = method.invoke(impostoICMS);\nif (objectValue != null) {\n// retorna o metodo necessario para extrair o valor de ModalidadeMVA.\nMethod modalidadeMethod = Arrays.stream(typeMethods).filter(method1 -> method1.getReturnType().equals(NFNotaInfoItemModalidadeBCICMSST.class)).findAny().get();\nNFNotaInfoItemModalidadeBCICMSST modalidadeBCICMSST = (NFNotaInfoItemModalidadeBCICMSST) modalidadeMethod.invoke(objectValue, new Object[] {});\n// retorna o metodo necessario para extrair o valor da percentualMargemValorAdicionadoICMSST(pMVAST).\nMethod percentualMethod = Arrays.stream(typeMethods).filter(method1 -> method1.getName().contains(\"getPercentualMargemValorAdicionadoICMSST\")).findAny().orElse(null);\nString percentualValue = null;\nif (percentualMethod != null) {\npercentualValue = (String) percentualMethod.invoke(objectValue, new Object[] {});\n}\n// verificacoes conforme a regra de validacao\nif (modalidadeBCICMSST != null && modalidadeBCICMSST.equals(NFNotaInfoItemModalidadeBCICMSST.MARGEM_VALOR_AGREGADO) && StringUtils.isBlank(percentualValue)) {\nthrow new IllegalStateException(\"Informada modalidade de determinacao da BC da ST como MVA(modBCST=4)\" + \" e nao informado o campo pMVAST!\");\n} else if (StringUtils.isNotBlank(percentualValue) && (modalidadeBCICMSST == null || !modalidadeBCICMSST.equals(NFNotaInfoItemModalidadeBCICMSST.MARGEM_VALOR_AGREGADO))) {\nthrow new IllegalStateException(String.format(\"Informada modalidade de determinacao da BC da ST diferente de MVA(informado[%s]) e informado o campo pMVAST\", (modalidadeBCICMSST != null ? modalidadeBCICMSST.toString() : \"modBCST<>4\")));\n}\n}\n}",
        "context_loc": 20,
        "filename": "DFStringValidador",
        "index": 702,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 847,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 9,
        "num_vars": 2,
        "project": "wmixvideo_nfe",
        "source": "Unit",
        "stmt": "                final boolean present = Arrays.stream(typeMethods).anyMatch(method1 -> method1.getReturnType().equals(NFNotaInfoItemModalidadeBCICMSST.class));",
        "tgt_lineno": 823
    },
    {
        "code": "new Here(\"Unit\", 823).given(typeMethods, \"66.xml\").checkEq(present, true);",
        "context": "// invoca o metodo para verificar qual classe de ICMS esta preenchida(objectValue!=null)\nObject objectValue = method.invoke(impostoICMS);\nif (objectValue != null) {\n// retorna o metodo necessario para extrair o valor de ModalidadeMVA.\nMethod modalidadeMethod = Arrays.stream(typeMethods).filter(method1 -> method1.getReturnType().equals(NFNotaInfoItemModalidadeBCICMSST.class)).findAny().get();\nNFNotaInfoItemModalidadeBCICMSST modalidadeBCICMSST = (NFNotaInfoItemModalidadeBCICMSST) modalidadeMethod.invoke(objectValue, new Object[] {});\n// retorna o metodo necessario para extrair o valor da percentualMargemValorAdicionadoICMSST(pMVAST).\nMethod percentualMethod = Arrays.stream(typeMethods).filter(method1 -> method1.getName().contains(\"getPercentualMargemValorAdicionadoICMSST\")).findAny().orElse(null);\nString percentualValue = null;\nif (percentualMethod != null) {\npercentualValue = (String) percentualMethod.invoke(objectValue, new Object[] {});\n}\n// verificacoes conforme a regra de validacao\nif (modalidadeBCICMSST != null && modalidadeBCICMSST.equals(NFNotaInfoItemModalidadeBCICMSST.MARGEM_VALOR_AGREGADO) && StringUtils.isBlank(percentualValue)) {\nthrow new IllegalStateException(\"Informada modalidade de determinacao da BC da ST como MVA(modBCST=4)\" + \" e nao informado o campo pMVAST!\");\n} else if (StringUtils.isNotBlank(percentualValue) && (modalidadeBCICMSST == null || !modalidadeBCICMSST.equals(NFNotaInfoItemModalidadeBCICMSST.MARGEM_VALOR_AGREGADO))) {\nthrow new IllegalStateException(String.format(\"Informada modalidade de determinacao da BC da ST diferente de MVA(informado[%s]) e informado o campo pMVAST\", (modalidadeBCICMSST != null ? modalidadeBCICMSST.toString() : \"modBCST<>4\")));\n}\n}\n}",
        "context_loc": 20,
        "filename": "DFStringValidador",
        "index": 703,
        "itest_idx": 2,
        "itest_type": "R2",
        "lineno": 848,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 9,
        "num_vars": 2,
        "project": "wmixvideo_nfe",
        "source": "Unit",
        "stmt": "                final boolean present = Arrays.stream(typeMethods).anyMatch(method1 -> method1.getReturnType().equals(NFNotaInfoItemModalidadeBCICMSST.class));",
        "tgt_lineno": 823
    },
    {
        "code": "new Here(\"Unit\", 823).given(typeMethods, \"65.xml\").checkEq(present, true);",
        "context": "// invoca o metodo para verificar qual classe de ICMS esta preenchida(objectValue!=null)\nObject objectValue = method.invoke(impostoICMS);\nif (objectValue != null) {\n// retorna o metodo necessario para extrair o valor de ModalidadeMVA.\nMethod modalidadeMethod = Arrays.stream(typeMethods).filter(method1 -> method1.getReturnType().equals(NFNotaInfoItemModalidadeBCICMSST.class)).findAny().get();\nNFNotaInfoItemModalidadeBCICMSST modalidadeBCICMSST = (NFNotaInfoItemModalidadeBCICMSST) modalidadeMethod.invoke(objectValue, new Object[] {});\n// retorna o metodo necessario para extrair o valor da percentualMargemValorAdicionadoICMSST(pMVAST).\nMethod percentualMethod = Arrays.stream(typeMethods).filter(method1 -> method1.getName().contains(\"getPercentualMargemValorAdicionadoICMSST\")).findAny().orElse(null);\nString percentualValue = null;\nif (percentualMethod != null) {\npercentualValue = (String) percentualMethod.invoke(objectValue, new Object[] {});\n}\n// verificacoes conforme a regra de validacao\nif (modalidadeBCICMSST != null && modalidadeBCICMSST.equals(NFNotaInfoItemModalidadeBCICMSST.MARGEM_VALOR_AGREGADO) && StringUtils.isBlank(percentualValue)) {\nthrow new IllegalStateException(\"Informada modalidade de determinacao da BC da ST como MVA(modBCST=4)\" + \" e nao informado o campo pMVAST!\");\n} else if (StringUtils.isNotBlank(percentualValue) && (modalidadeBCICMSST == null || !modalidadeBCICMSST.equals(NFNotaInfoItemModalidadeBCICMSST.MARGEM_VALOR_AGREGADO))) {\nthrow new IllegalStateException(String.format(\"Informada modalidade de determinacao da BC da ST diferente de MVA(informado[%s]) e informado o campo pMVAST\", (modalidadeBCICMSST != null ? modalidadeBCICMSST.toString() : \"modBCST<>4\")));\n}\n}\n}",
        "context_loc": 20,
        "filename": "DFStringValidador",
        "index": 704,
        "itest_idx": 3,
        "itest_type": "R2",
        "lineno": 849,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 9,
        "num_vars": 2,
        "project": "wmixvideo_nfe",
        "source": "Unit",
        "stmt": "                final boolean present = Arrays.stream(typeMethods).anyMatch(method1 -> method1.getReturnType().equals(NFNotaInfoItemModalidadeBCICMSST.class));",
        "tgt_lineno": 823
    },
    {
        "code": "new Here(\"Unit\", 823).given(typeMethods, \"72.xml\").checkEq(present, true);",
        "context": "// invoca o metodo para verificar qual classe de ICMS esta preenchida(objectValue!=null)\nObject objectValue = method.invoke(impostoICMS);\nif (objectValue != null) {\n// retorna o metodo necessario para extrair o valor de ModalidadeMVA.\nMethod modalidadeMethod = Arrays.stream(typeMethods).filter(method1 -> method1.getReturnType().equals(NFNotaInfoItemModalidadeBCICMSST.class)).findAny().get();\nNFNotaInfoItemModalidadeBCICMSST modalidadeBCICMSST = (NFNotaInfoItemModalidadeBCICMSST) modalidadeMethod.invoke(objectValue, new Object[] {});\n// retorna o metodo necessario para extrair o valor da percentualMargemValorAdicionadoICMSST(pMVAST).\nMethod percentualMethod = Arrays.stream(typeMethods).filter(method1 -> method1.getName().contains(\"getPercentualMargemValorAdicionadoICMSST\")).findAny().orElse(null);\nString percentualValue = null;\nif (percentualMethod != null) {\npercentualValue = (String) percentualMethod.invoke(objectValue, new Object[] {});\n}\n// verificacoes conforme a regra de validacao\nif (modalidadeBCICMSST != null && modalidadeBCICMSST.equals(NFNotaInfoItemModalidadeBCICMSST.MARGEM_VALOR_AGREGADO) && StringUtils.isBlank(percentualValue)) {\nthrow new IllegalStateException(\"Informada modalidade de determinacao da BC da ST como MVA(modBCST=4)\" + \" e nao informado o campo pMVAST!\");\n} else if (StringUtils.isNotBlank(percentualValue) && (modalidadeBCICMSST == null || !modalidadeBCICMSST.equals(NFNotaInfoItemModalidadeBCICMSST.MARGEM_VALOR_AGREGADO))) {\nthrow new IllegalStateException(String.format(\"Informada modalidade de determinacao da BC da ST diferente de MVA(informado[%s]) e informado o campo pMVAST\", (modalidadeBCICMSST != null ? modalidadeBCICMSST.toString() : \"modBCST<>4\")));\n}\n}\n}",
        "context_loc": 20,
        "filename": "DFStringValidador",
        "index": 705,
        "itest_idx": 4,
        "itest_type": "R2",
        "lineno": 850,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 9,
        "num_vars": 2,
        "project": "wmixvideo_nfe",
        "source": "Unit",
        "stmt": "                final boolean present = Arrays.stream(typeMethods).anyMatch(method1 -> method1.getReturnType().equals(NFNotaInfoItemModalidadeBCICMSST.class));",
        "tgt_lineno": 823
    },
    {
        "code": "new Here(\"Unit\", 823).given(typeMethods, \"77.xml\").checkEq(present, true);",
        "context": "// invoca o metodo para verificar qual classe de ICMS esta preenchida(objectValue!=null)\nObject objectValue = method.invoke(impostoICMS);\nif (objectValue != null) {\n// retorna o metodo necessario para extrair o valor de ModalidadeMVA.\nMethod modalidadeMethod = Arrays.stream(typeMethods).filter(method1 -> method1.getReturnType().equals(NFNotaInfoItemModalidadeBCICMSST.class)).findAny().get();\nNFNotaInfoItemModalidadeBCICMSST modalidadeBCICMSST = (NFNotaInfoItemModalidadeBCICMSST) modalidadeMethod.invoke(objectValue, new Object[] {});\n// retorna o metodo necessario para extrair o valor da percentualMargemValorAdicionadoICMSST(pMVAST).\nMethod percentualMethod = Arrays.stream(typeMethods).filter(method1 -> method1.getName().contains(\"getPercentualMargemValorAdicionadoICMSST\")).findAny().orElse(null);\nString percentualValue = null;\nif (percentualMethod != null) {\npercentualValue = (String) percentualMethod.invoke(objectValue, new Object[] {});\n}\n// verificacoes conforme a regra de validacao\nif (modalidadeBCICMSST != null && modalidadeBCICMSST.equals(NFNotaInfoItemModalidadeBCICMSST.MARGEM_VALOR_AGREGADO) && StringUtils.isBlank(percentualValue)) {\nthrow new IllegalStateException(\"Informada modalidade de determinacao da BC da ST como MVA(modBCST=4)\" + \" e nao informado o campo pMVAST!\");\n} else if (StringUtils.isNotBlank(percentualValue) && (modalidadeBCICMSST == null || !modalidadeBCICMSST.equals(NFNotaInfoItemModalidadeBCICMSST.MARGEM_VALOR_AGREGADO))) {\nthrow new IllegalStateException(String.format(\"Informada modalidade de determinacao da BC da ST diferente de MVA(informado[%s]) e informado o campo pMVAST\", (modalidadeBCICMSST != null ? modalidadeBCICMSST.toString() : \"modBCST<>4\")));\n}\n}\n}",
        "context_loc": 20,
        "filename": "DFStringValidador",
        "index": 706,
        "itest_idx": 5,
        "itest_type": "R2",
        "lineno": 851,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 9,
        "num_vars": 2,
        "project": "wmixvideo_nfe",
        "source": "Unit",
        "stmt": "                final boolean present = Arrays.stream(typeMethods).anyMatch(method1 -> method1.getReturnType().equals(NFNotaInfoItemModalidadeBCICMSST.class));",
        "tgt_lineno": 823
    },
    {
        "code": "new Here(\"Unit\", 823).given(typeMethods, \"69.xml\").checkEq(present, true);",
        "context": "// invoca o metodo para verificar qual classe de ICMS esta preenchida(objectValue!=null)\nObject objectValue = method.invoke(impostoICMS);\nif (objectValue != null) {\n// retorna o metodo necessario para extrair o valor de ModalidadeMVA.\nMethod modalidadeMethod = Arrays.stream(typeMethods).filter(method1 -> method1.getReturnType().equals(NFNotaInfoItemModalidadeBCICMSST.class)).findAny().get();\nNFNotaInfoItemModalidadeBCICMSST modalidadeBCICMSST = (NFNotaInfoItemModalidadeBCICMSST) modalidadeMethod.invoke(objectValue, new Object[] {});\n// retorna o metodo necessario para extrair o valor da percentualMargemValorAdicionadoICMSST(pMVAST).\nMethod percentualMethod = Arrays.stream(typeMethods).filter(method1 -> method1.getName().contains(\"getPercentualMargemValorAdicionadoICMSST\")).findAny().orElse(null);\nString percentualValue = null;\nif (percentualMethod != null) {\npercentualValue = (String) percentualMethod.invoke(objectValue, new Object[] {});\n}\n// verificacoes conforme a regra de validacao\nif (modalidadeBCICMSST != null && modalidadeBCICMSST.equals(NFNotaInfoItemModalidadeBCICMSST.MARGEM_VALOR_AGREGADO) && StringUtils.isBlank(percentualValue)) {\nthrow new IllegalStateException(\"Informada modalidade de determinacao da BC da ST como MVA(modBCST=4)\" + \" e nao informado o campo pMVAST!\");\n} else if (StringUtils.isNotBlank(percentualValue) && (modalidadeBCICMSST == null || !modalidadeBCICMSST.equals(NFNotaInfoItemModalidadeBCICMSST.MARGEM_VALOR_AGREGADO))) {\nthrow new IllegalStateException(String.format(\"Informada modalidade de determinacao da BC da ST diferente de MVA(informado[%s]) e informado o campo pMVAST\", (modalidadeBCICMSST != null ? modalidadeBCICMSST.toString() : \"modBCST<>4\")));\n}\n}\n}",
        "context_loc": 20,
        "filename": "DFStringValidador",
        "index": 707,
        "itest_idx": 6,
        "itest_type": "R2",
        "lineno": 852,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 9,
        "num_vars": 2,
        "project": "wmixvideo_nfe",
        "source": "Unit",
        "stmt": "                final boolean present = Arrays.stream(typeMethods).anyMatch(method1 -> method1.getReturnType().equals(NFNotaInfoItemModalidadeBCICMSST.class));",
        "tgt_lineno": 823
    },
    {
        "code": "new Here(\"Unit\", 823).given(typeMethods, \"64.xml\").checkEq(present, true);",
        "context": "// invoca o metodo para verificar qual classe de ICMS esta preenchida(objectValue!=null)\nObject objectValue = method.invoke(impostoICMS);\nif (objectValue != null) {\n// retorna o metodo necessario para extrair o valor de ModalidadeMVA.\nMethod modalidadeMethod = Arrays.stream(typeMethods).filter(method1 -> method1.getReturnType().equals(NFNotaInfoItemModalidadeBCICMSST.class)).findAny().get();\nNFNotaInfoItemModalidadeBCICMSST modalidadeBCICMSST = (NFNotaInfoItemModalidadeBCICMSST) modalidadeMethod.invoke(objectValue, new Object[] {});\n// retorna o metodo necessario para extrair o valor da percentualMargemValorAdicionadoICMSST(pMVAST).\nMethod percentualMethod = Arrays.stream(typeMethods).filter(method1 -> method1.getName().contains(\"getPercentualMargemValorAdicionadoICMSST\")).findAny().orElse(null);\nString percentualValue = null;\nif (percentualMethod != null) {\npercentualValue = (String) percentualMethod.invoke(objectValue, new Object[] {});\n}\n// verificacoes conforme a regra de validacao\nif (modalidadeBCICMSST != null && modalidadeBCICMSST.equals(NFNotaInfoItemModalidadeBCICMSST.MARGEM_VALOR_AGREGADO) && StringUtils.isBlank(percentualValue)) {\nthrow new IllegalStateException(\"Informada modalidade de determinacao da BC da ST como MVA(modBCST=4)\" + \" e nao informado o campo pMVAST!\");\n} else if (StringUtils.isNotBlank(percentualValue) && (modalidadeBCICMSST == null || !modalidadeBCICMSST.equals(NFNotaInfoItemModalidadeBCICMSST.MARGEM_VALOR_AGREGADO))) {\nthrow new IllegalStateException(String.format(\"Informada modalidade de determinacao da BC da ST diferente de MVA(informado[%s]) e informado o campo pMVAST\", (modalidadeBCICMSST != null ? modalidadeBCICMSST.toString() : \"modBCST<>4\")));\n}\n}\n}",
        "context_loc": 20,
        "filename": "DFStringValidador",
        "index": 708,
        "itest_idx": 7,
        "itest_type": "R2",
        "lineno": 853,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 9,
        "num_vars": 2,
        "project": "wmixvideo_nfe",
        "source": "Unit",
        "stmt": "                final boolean present = Arrays.stream(typeMethods).anyMatch(method1 -> method1.getReturnType().equals(NFNotaInfoItemModalidadeBCICMSST.class));",
        "tgt_lineno": 823
    },
    {
        "code": "new Here(\"Unit\", 823).given(typeMethods, \"63.xml\").checkEq(present, false);",
        "context": "// invoca o metodo para verificar qual classe de ICMS esta preenchida(objectValue!=null)\nObject objectValue = method.invoke(impostoICMS);\nif (objectValue != null) {\n// retorna o metodo necessario para extrair o valor de ModalidadeMVA.\nMethod modalidadeMethod = Arrays.stream(typeMethods).filter(method1 -> method1.getReturnType().equals(NFNotaInfoItemModalidadeBCICMSST.class)).findAny().get();\nNFNotaInfoItemModalidadeBCICMSST modalidadeBCICMSST = (NFNotaInfoItemModalidadeBCICMSST) modalidadeMethod.invoke(objectValue, new Object[] {});\n// retorna o metodo necessario para extrair o valor da percentualMargemValorAdicionadoICMSST(pMVAST).\nMethod percentualMethod = Arrays.stream(typeMethods).filter(method1 -> method1.getName().contains(\"getPercentualMargemValorAdicionadoICMSST\")).findAny().orElse(null);\nString percentualValue = null;\nif (percentualMethod != null) {\npercentualValue = (String) percentualMethod.invoke(objectValue, new Object[] {});\n}\n// verificacoes conforme a regra de validacao\nif (modalidadeBCICMSST != null && modalidadeBCICMSST.equals(NFNotaInfoItemModalidadeBCICMSST.MARGEM_VALOR_AGREGADO) && StringUtils.isBlank(percentualValue)) {\nthrow new IllegalStateException(\"Informada modalidade de determinacao da BC da ST como MVA(modBCST=4)\" + \" e nao informado o campo pMVAST!\");\n} else if (StringUtils.isNotBlank(percentualValue) && (modalidadeBCICMSST == null || !modalidadeBCICMSST.equals(NFNotaInfoItemModalidadeBCICMSST.MARGEM_VALOR_AGREGADO))) {\nthrow new IllegalStateException(String.format(\"Informada modalidade de determinacao da BC da ST diferente de MVA(informado[%s]) e informado o campo pMVAST\", (modalidadeBCICMSST != null ? modalidadeBCICMSST.toString() : \"modBCST<>4\")));\n}\n}\n}",
        "context_loc": 20,
        "filename": "DFStringValidador",
        "index": 709,
        "itest_idx": 8,
        "itest_type": "R2",
        "lineno": 854,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 9,
        "num_vars": 2,
        "project": "wmixvideo_nfe",
        "source": "Unit",
        "stmt": "                final boolean present = Arrays.stream(typeMethods).anyMatch(method1 -> method1.getReturnType().equals(NFNotaInfoItemModalidadeBCICMSST.class));",
        "tgt_lineno": 823
    },
    {
        "code": "new Here(\"Unit\", 829).given(typeMethods, \"75.xml\").checkEq(modalidadeMethod, \"211.xml\");",
        "context": "// retorna o metodo necessario para extrair o valor da percentualMargemValorAdicionadoICMSST(pMVAST).\nMethod percentualMethod = Arrays.stream(typeMethods).filter(method1 -> method1.getName().contains(\"getPercentualMargemValorAdicionadoICMSST\")).findAny().orElse(null);\nString percentualValue = null;\nif (percentualMethod != null) {\npercentualValue = (String) percentualMethod.invoke(objectValue, new Object[] {});\n}\n// verificacoes conforme a regra de validacao\nif (modalidadeBCICMSST != null && modalidadeBCICMSST.equals(NFNotaInfoItemModalidadeBCICMSST.MARGEM_VALOR_AGREGADO) && StringUtils.isBlank(percentualValue)) {\nthrow new IllegalStateException(\"Informada modalidade de determinacao da BC da ST como MVA(modBCST=4)\" + \" e nao informado o campo pMVAST!\");\n} else if (StringUtils.isNotBlank(percentualValue) && (modalidadeBCICMSST == null || !modalidadeBCICMSST.equals(NFNotaInfoItemModalidadeBCICMSST.MARGEM_VALOR_AGREGADO))) {\nthrow new IllegalStateException(String.format(\"Informada modalidade de determinacao da BC da ST diferente de MVA(informado[%s]) e informado o campo pMVAST\", (modalidadeBCICMSST != null ? modalidadeBCICMSST.toString() : \"modBCST<>4\")));\n}",
        "context_loc": 12,
        "filename": "DFStringValidador",
        "index": 710,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 861,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "wmixvideo_nfe",
        "source": "Unit",
        "stmt": "                        Method modalidadeMethod = Arrays.stream(typeMethods).filter(method1 -> method1.getReturnType().equals(NFNotaInfoItemModalidadeBCICMSST.class)).findAny().get();",
        "tgt_lineno": 829
    },
    {
        "code": "new Here(\"Unit\", 832).given(typeMethods, \"75.xml\").checkEq(percentualMethod, \"212.xml\");",
        "context": "if (percentualMethod != null) {\npercentualValue = (String) percentualMethod.invoke(objectValue, new Object[] {});\n}\n// verificacoes conforme a regra de validacao\nif (modalidadeBCICMSST != null && modalidadeBCICMSST.equals(NFNotaInfoItemModalidadeBCICMSST.MARGEM_VALOR_AGREGADO) && StringUtils.isBlank(percentualValue)) {\nthrow new IllegalStateException(\"Informada modalidade de determinacao da BC da ST como MVA(modBCST=4)\" + \" e nao informado o campo pMVAST!\");\n} else if (StringUtils.isNotBlank(percentualValue) && (modalidadeBCICMSST == null || !modalidadeBCICMSST.equals(NFNotaInfoItemModalidadeBCICMSST.MARGEM_VALOR_AGREGADO))) {\nthrow new IllegalStateException(String.format(\"Informada modalidade de determinacao da BC da ST diferente de MVA(informado[%s]) e informado o campo pMVAST\", (modalidadeBCICMSST != null ? modalidadeBCICMSST.toString() : \"modBCST<>4\")));\n}",
        "context_loc": 9,
        "filename": "DFStringValidador",
        "index": 711,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 865,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "wmixvideo_nfe",
        "source": "Unit",
        "stmt": "                        Method percentualMethod = Arrays.stream(typeMethods).filter(method1 -> method1.getName().contains(\"getPercentualMargemValorAdicionadoICMSST\")).findAny().orElse(null);",
        "tgt_lineno": 832
    },
    {
        "code": "new Here(\"Randoop\", 15).given(xsd, \"nfe_v3.10.xsd\").checkEq(xsdPath, \"263.xml\");",
        "context": "final Schema schema = schemaFactory.newSchema(new StreamSource(xsdPath.toURI().toString()));\nschema.newValidator().validate(new StreamSource(new StringReader(xml)));\nreturn true;",
        "context_loc": 3,
        "filename": "DFXMLValidador",
        "index": 712,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 18,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "wmixvideo_nfe",
        "source": "Randoop",
        "stmt": "        final URL xsdPath = DFXMLValidador.class.getClassLoader().getResource(String.format(\"schemas/PL_008i2/%s\", xsd));",
        "tgt_lineno": 15
    },
    {
        "code": "new Here(\"Randoop\", 31).given(xsd, \"nfe_v4.00.xsd\").checkEq(xsdPath, \"379.xml\");",
        "context": "final Schema schema = schemaFactory.newSchema(new StreamSource(xsdPath.toURI().toString()));\nschema.newValidator().validate(new StreamSource(new StringReader(xml)));\nreturn true;",
        "context_loc": 3,
        "filename": "DFXMLValidador",
        "index": 713,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 35,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "wmixvideo_nfe",
        "source": "Randoop",
        "stmt": "        final URL xsdPath = DFXMLValidador.class.getClassLoader().getResource(String.format(\"schemas/PL_009i_NT2021_004_v100a/%s\", xsd));",
        "tgt_lineno": 31
    },
    {
        "code": "new Here(\"Unit\", 61).given(xsd, \"procMDFe_v3.00.xsd\").checkEq(xsdPath, \"17.xml\");",
        "context": "final Schema schema = schemaFactory.newSchema(new StreamSource(xsdPath.toURI().toString()));\nschema.newValidator().validate(new StreamSource(new StringReader(xml)));\nreturn true;",
        "context_loc": 3,
        "filename": "DFXMLValidador",
        "index": 714,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 66,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "wmixvideo_nfe",
        "source": "Unit",
        "stmt": "        final URL xsdPath = DFXMLValidador.class.getClassLoader().getResource(String.format(\"schemas/PL_MDFe_300a_NT02020_NFF/%s\", xsd));",
        "tgt_lineno": 61
    },
    {
        "code": "new Here(\"Randoop\", 89).given(xsd, \"enviCTe_v3.00.xsd\").checkEq(xsdPath, \"340.xml\");",
        "context": "final Schema schema = schemaFactory.newSchema(new StreamSource(xsdPath.toURI().toString()));\nschema.newValidator().validate(new StreamSource(new StringReader(xml)));\nreturn true;",
        "context_loc": 3,
        "filename": "DFXMLValidador",
        "index": 715,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 95,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "wmixvideo_nfe",
        "source": "Randoop",
        "stmt": "        final URL xsdPath = DFXMLValidador.class.getClassLoader().getResource(String.format(\"schemas/PL_CTe_300a/%s\", xsd));",
        "tgt_lineno": 89
    },
    {
        "code": "new Here(\"Randoop\", 105).given(xsd, \"distDFeInt_v1.01.xsd\").checkEq(xsdPath, \"255.xml\");",
        "context": "final Schema schema = schemaFactory.newSchema(new StreamSource(xsdPath.toURI().toString()));\nschema.newValidator().validate(new StreamSource(new StringReader(xml)));\nreturn true;",
        "context_loc": 3,
        "filename": "DFXMLValidador",
        "index": 716,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 112,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "wmixvideo_nfe",
        "source": "Randoop",
        "stmt": "        final URL xsdPath = DFXMLValidador.class.getClassLoader().getResource(String.format(\"schemas/PL_NFeDistDFe_102/%s\", xsd));",
        "tgt_lineno": 105
    },
    {
        "code": "new Here(\"Randoop\", 112).given(xsd, \"distDFeInt_v1.00.xsd\").checkEq(xsdPath, \"235.xml\");",
        "context": "final Schema schema = schemaFactory.newSchema(new StreamSource(xsdPath.toURI().toString()));\nschema.newValidator().validate(new StreamSource(new StringReader(xml)));\nreturn true;",
        "context_loc": 3,
        "filename": "DFXMLValidador",
        "index": 717,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 121,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "wmixvideo_nfe",
        "source": "Randoop",
        "stmt": "        final URL xsdPath = DFXMLValidador.class.getClassLoader().getResource(String.format(\"schemas/PL_CTeDistDFe_100/%s\", xsd));",
        "tgt_lineno": 112
    },
    {
        "code": "new Here(\"Randoop\", 127).given(xsd, \"EPEC_v1.00.xsd\").checkEq(xsdPath, \"256.xml\");",
        "context": "final Schema schema = schemaFactory.newSchema(new StreamSource(xsdPath.toURI().toString()));\nschema.newValidator().validate(new StreamSource(new StringReader(xml)));\nreturn true;",
        "context_loc": 3,
        "filename": "DFXMLValidador",
        "index": 718,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 138,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "wmixvideo_nfe",
        "source": "Randoop",
        "stmt": "        final URL xsdPath = DFXMLValidador.class.getClassLoader().getResource(String.format(\"schemas/Evento_EPEC_PL_v1.01/%s\", xsd));",
        "tgt_lineno": 127
    },
    {
        "code": "new Here(\"Unit\", 35).given(i, 21).given(valores, new char[] { '4', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 5);",
        "context": "soma += valorTemp * multTemp;",
        "context_loc": 1,
        "filename": "NFVerificaChave",
        "index": 719,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 36,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 2,
        "num_vars": 3,
        "project": "wmixvideo_nfe",
        "source": "Unit",
        "stmt": "            valorTemp = Integer.parseInt(String.valueOf(valores[i - 1]));",
        "tgt_lineno": 35
    },
    {
        "code": "new Here(\"Unit\", 35).given(i, 43).given(valores, new char[] { '4', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 9);",
        "context": "soma += valorTemp * multTemp;",
        "context_loc": 1,
        "filename": "NFVerificaChave",
        "index": 720,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 37,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 2,
        "num_vars": 3,
        "project": "wmixvideo_nfe",
        "source": "Unit",
        "stmt": "            valorTemp = Integer.parseInt(String.valueOf(valores[i - 1]));",
        "tgt_lineno": 35
    },
    {
        "code": "new Here(\"Unit\", 50).given(matcher, \"113.xml\").checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "NFNotaInfoCana",
        "index": 721,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 57,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "wmixvideo_nfe",
        "source": "Unit",
        "stmt": "        if (!matcher.find()) {",
        "tgt_lineno": 50
    },
    {
        "code": "new Here(\"Unit\", 38).given(i, 43).given(valores, new char[] { '4', '3', '1', '0', '1', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '2', '3', '4', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '8' }).checkEq(valorTemp, 8);",
        "context": "soma += valorTemp * multTemp;",
        "context_loc": 1,
        "filename": "NFGeraChave",
        "index": 722,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 39,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 1,
        "num_vars": 3,
        "project": "wmixvideo_nfe",
        "source": "Unit",
        "stmt": "            valorTemp = Integer.parseInt(String.valueOf(valores[i - 1]));",
        "tgt_lineno": 38
    },
    {
        "code": "new Here(\"Unit\", 20).given(cnpj, \"00000000000000\").checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "DFUtils",
        "index": 723,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 21,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "wmixvideo_nfe",
        "source": "Unit",
        "stmt": "        if (cnpj == null || !cnpj.matches(\"^[0-9]{14}$\")) {",
        "tgt_lineno": 20
    },
    {
        "code": "new Here(\"Unit\", 20).given(cnpj, null).checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "DFUtils",
        "index": 724,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 22,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "wmixvideo_nfe",
        "source": "Unit",
        "stmt": "        if (cnpj == null || !cnpj.matches(\"^[0-9]{14}$\")) {",
        "tgt_lineno": 20
    },
    {
        "code": "new Here(\"Unit\", 72).given(cpf, null).checkTrue(group());",
        "context": "",
        "context_loc": 0,
        "filename": "DFUtils",
        "index": 725,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 71,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "wmixvideo_nfe",
        "source": "Unit",
        "stmt": "        if (cpf == null || !cpf.matches(\"^[0-9]{11}$\")) {",
        "tgt_lineno": 72
    },
    {
        "code": "new Here(\"Unit\", 72).given(cpf, \"38883975022\").checkFalse(group());",
        "context": "",
        "context_loc": 0,
        "filename": "DFUtils",
        "index": 726,
        "itest_idx": 1,
        "itest_type": "R2",
        "lineno": 72,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 2,
        "num_vars": 2,
        "project": "wmixvideo_nfe",
        "source": "Unit",
        "stmt": "        if (cpf == null || !cpf.matches(\"^[0-9]{11}$\")) {",
        "tgt_lineno": 72
    },
    {
        "code": "new Here(\"Unit\", 107).given(digito1, 1).given(digito2, 7).checkEq(nDigResult, \"17\");",
        "context": "return nDigVerific.equals(nDigResult);",
        "context_loc": 1,
        "filename": "DFUtils",
        "index": 727,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 99,
        "num_checks": 1,
        "num_givens": 2,
        "num_itests": 1,
        "num_vars": 3,
        "project": "wmixvideo_nfe",
        "source": "Unit",
        "stmt": "        final String nDigResult = String.valueOf(digito1) + digito2;",
        "tgt_lineno": 107
    },
    {
        "code": "new Here(\"Unit\", 23).given(dt, \"210.xml\").checkEq(diaEmissao, \"02\");",
        "context": "final StringBuilder parametros = new StringBuilder();\n// Chave de Acesso da NFC-e\nparametros.append(nota.getInfo().getChaveAcesso()).append(\"|\");\n// Versao do QRCode 2 = 2.0\nparametros.append(VERSAO_QRCODE).append(\"|\");\n// Ambiente\nparametros.append(config.getAmbiente().getCodigo()).append(\"|\");\n// Data e Hora de Emiss\u00e3o da NFC-e\nparametros.append(diaEmissao).append(\"|\");\n// Valor Total da NFC-e\nparametros.append(nota.getInfo().getTotal().getIcmsTotal().getValorTotalNFe()).append(\"|\");\n// Digest Value da NFC-e\nparametros.append(toHex(nota.getAssinatura().getSignedInfo().getReference().getDigestValue())).append(\"|\");\n// Identificador do CSC \u2013 Codigo de Seguranca do Contribuinte no Banco de Dados da SEFAZ\nparametros.append(config.getCodigoSegurancaContribuinteID());\nreturn url + \"?p=\" + parametros.toString() + \"|\" + createHash(parametros.toString(), config.getCodigoSegurancaContribuinte());",
        "context_loc": 16,
        "filename": "NFGeraQRCodeContingenciaOffline20",
        "index": 728,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 24,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "wmixvideo_nfe",
        "source": "Unit",
        "stmt": "        final String diaEmissao = DateTimeFormatter.ofPattern(\"dd\").format(dt);",
        "tgt_lineno": 23
    },
    {
        "code": "new Here(\"Unit\", 70).given(dt, \"150.xml\").checkEq(dtf, \"2014-03-18T10:55:33-03:00\");",
        "context": "// Monta os parametros do qrcode: https://www.sefaz.rs.gov.br/NFCE/NFCE-COM.aspx?chNFe=43160493062776000117650010000012891000012891&nVersao=100&tpAmb=1&cDest=00400437031&dhEmi=323031362d30342d31355431363a32313a35312d30333a3030&vNF=88.00&vICMS=0.00&digVal=787971704e2f7771446134687070486e6b6b6c34705a39536a36633d&cIdToken=000001&cHashQRCode=852E4B5BC4EB9BF65484AEEBB06BE4A65F0E8E13\nfinal StringBuilder parametros = new StringBuilder();\n// Chave de Acesso da NFC-e\nparametros.append(\"chNFe=\").append(this.nota.getInfo().getChaveAcesso()).append(\"&\");\n// Versao do QRCode\nparametros.append(\"nVersao=100\").append(\"&\");\nparametros.append(\"tpAmb=\").append(this.config.getAmbiente().getCodigo()).append(\"&\");\nif (StringUtils.isNotBlank(cpfj)) {\n// Documento de Identificacao do Consumidor (CNPJ/CPF/ID Estrangeiro)\nparametros.append(\"cDest=\").append(cpfj).append(\"&\");\n}\n// Data e Hora de Emiss\u00e3o da NFC-e\nparametros.append(\"dhEmi=\").append(NFGeraQRCode.toHex(dtf)).append(\"&\");\n// Valor Total da NFC-e\nparametros.append(\"vNF=\").append(this.nota.getInfo().getTotal().getIcmsTotal().getValorTotalNFe()).append(\"&\");\n// NFC-e Valor Total ICMS na NFC-e\nparametros.append(\"vICMS=\").append(this.nota.getInfo().getTotal().getIcmsTotal().getValorTotalICMS()).append(\"&\");\n// Digest Value da NFC-e\nparametros.append(\"digVal=\").append(NFGeraQRCode.toHex(this.nota.getAssinatura().getSignedInfo().getReference().getDigestValue())).append(\"&\");\n// Identificador do CSC \u2013 Codigo de Seguranca do Contribuinte no Banco de Dados da SEFAZ\nparametros.append(\"cIdToken=\").append(String.format(\"%06d\", this.config.getCodigoSegurancaContribuinteID()));\n// retorna a url do qrcode\nreturn url + \"?\" + parametros.toString() + \"&cHashQRCode=\" + NFGeraQRCode.createHash(parametros.toString(), this.config.getCodigoSegurancaContribuinte());",
        "context_loc": 23,
        "filename": "NFGeraQRCode",
        "index": 729,
        "itest_idx": 0,
        "itest_type": "R2",
        "lineno": 69,
        "num_checks": 1,
        "num_givens": 1,
        "num_itests": 1,
        "num_vars": 2,
        "project": "wmixvideo_nfe",
        "source": "Unit",
        "stmt": "        final String dtf = DateTimeFormatter.ofPattern(\"yyyy-MM-dd'T'HH:mm:ssXXX\").format(dt);",
        "tgt_lineno": 70
    }
]