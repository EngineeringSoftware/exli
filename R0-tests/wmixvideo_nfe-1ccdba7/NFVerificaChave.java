package com.fincatto.documentofiscal.nfe400.utils;

import org.apache.commons.lang3.StringUtils;
import java.util.Objects;
import org.inlinetest.Here;
import static org.inlinetest.Here.group;

/**
 * @Author Eldevan Nery Junior on 01/06/17.
 *
 * Classe que verifica se uma chave passada como parâmetro é valida.
 * Pode ser chamada por new {@link #NFVerificaChave(String)} e depois {@link #isChaveValida()}
 * Ou por NFVerificaChave.{@link #isChaveValida(String)}, verifique a classe de testes NFVerificaChaveTest para mais
 * detalhes .
 */
public class NFVerificaChave {

    private final String chave;

    public NFVerificaChave(final String chave) {
        this.chave = chave;
    }

    public Integer calculaDV() {
        final char[] valores = this.chaveAcessoSemDV().toCharArray();
        final int[] valoresInt = { 2, 3, 4, 5, 6, 7, 8, 9 };
        int indice = 0;
        int soma = 0;
        int valorTemp;
        int multTemp;
        for (int i = valores.length; i > 0; i--) {
            if (indice >= valoresInt.length) {
                indice = 0;
            }
            valorTemp = Integer.parseInt(String.valueOf(valores[i - 1]));
            new Here("Unit", 35).given(i, 4).given(valores, new char[] { '5', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 0);
            new Here("Unit", 35).given(i, 33).given(valores, new char[] { '5', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 9);
            new Here("Unit", 35).given(i, 28).given(valores, new char[] { '4', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 9);
            new Here("Unit", 35).given(i, 27).given(valores, new char[] { '4', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 9);
            new Here("Unit", 35).given(i, 10).given(valores, new char[] { '4', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 1);
            new Here("Unit", 35).given(i, 32).given(valores, new char[] { '5', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 9);
            new Here("Unit", 35).given(i, 18).given(valores, new char[] { '5', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 9);
            new Here("Unit", 35).given(i, 35).given(valores, new char[] { '5', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 1);
            new Here("Unit", 35).given(i, 30).given(valores, new char[] { '5', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 9);
            new Here("Unit", 35).given(i, 26).given(valores, new char[] { '4', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 9);
            new Here("Unit", 35).given(i, 42).given(valores, new char[] { '4', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 9);
            new Here("Unit", 35).given(i, 8).given(valores, new char[] { '5', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 0);
            new Here("Unit", 35).given(i, 17).given(valores, new char[] { '4', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 8);
            new Here("Unit", 35).given(i, 11).given(valores, new char[] { '5', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 2);
            new Here("Unit", 35).given(i, 31).given(valores, new char[] { '5', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 9);
            new Here("Unit", 35).given(i, 5).given(valores, new char[] { '4', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 1);
            new Here("Unit", 35).given(i, 9).given(valores, new char[] { '5', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 0);
            new Here("Unit", 35).given(i, 43).given(valores, new char[] { '4', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 9);
            new Here("Unit", 35).given(i, 25).given(valores, new char[] { '4', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 9);
            new Here("Unit", 35).given(i, 12).given(valores, new char[] { '5', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 3);
            new Here("Unit", 35).given(i, 4).given(valores, new char[] { '4', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 0);
            new Here("Unit", 35).given(i, 40).given(valores, new char[] { '4', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 9);
            new Here("Unit", 35).given(i, 20).given(valores, new char[] { '5', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 1);
            new Here("Unit", 35).given(i, 24).given(valores, new char[] { '4', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 9);
            new Here("Unit", 35).given(i, 31).given(valores, new char[] { '4', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 9);
            new Here("Unit", 35).given(i, 13).given(valores, new char[] { '5', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 4);
            new Here("Unit", 35).given(i, 36).given(valores, new char[] { '5', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 9);
            new Here("Unit", 35).given(i, 3).given(valores, new char[] { '4', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 1);
            new Here("Unit", 35).given(i, 14).given(valores, new char[] { '5', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 5);
            new Here("Unit", 35).given(i, 27).given(valores, new char[] { '5', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 9);
            new Here("Unit", 35).given(i, 43).given(valores, new char[] { '5', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 9);
            new Here("Unit", 35).given(i, 7).given(valores, new char[] { '5', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 0);
            new Here("Unit", 35).given(i, 19).given(valores, new char[] { '4', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 0);
            new Here("Unit", 35).given(i, 22).given(valores, new char[] { '4', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 5);
            new Here("Unit", 35).given(i, 15).given(valores, new char[] { '5', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 6);
            new Here("Unit", 35).given(i, 38).given(valores, new char[] { '4', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 9);
            new Here("Unit", 35).given(i, 29).given(valores, new char[] { '4', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 9);
            new Here("Unit", 35).given(i, 25).given(valores, new char[] { '5', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 9);
            new Here("Unit", 35).given(i, 16).given(valores, new char[] { '5', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 7);
            new Here("Unit", 35).given(i, 34).given(valores, new char[] { '5', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 9);
            new Here("Unit", 35).given(i, 9).given(valores, new char[] { '4', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 0);
            new Here("Unit", 35).given(i, 24).given(valores, new char[] { '5', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 9);
            new Here("Unit", 35).given(i, 20).given(valores, new char[] { '4', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 1);
            new Here("Unit", 35).given(i, 37).given(valores, new char[] { '4', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 9);
            new Here("Unit", 35).given(i, 5).given(valores, new char[] { '5', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 1);
            new Here("Unit", 35).given(i, 11).given(valores, new char[] { '4', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 2);
            new Here("Unit", 35).given(i, 40).given(valores, new char[] { '5', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 9);
            new Here("Unit", 35).given(i, 17).given(valores, new char[] { '5', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 8);
            new Here("Unit", 35).given(i, 8).given(valores, new char[] { '4', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 0);
            new Here("Unit", 35).given(i, 23).given(valores, new char[] { '5', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 9);
            new Here("Unit", 35).given(i, 3).given(valores, new char[] { '5', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 1);
            new Here("Unit", 35).given(i, 36).given(valores, new char[] { '4', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 9);
            new Here("Unit", 35).given(i, 41).given(valores, new char[] { '5', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 9);
            new Here("Unit", 35).given(i, 18).given(valores, new char[] { '4', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 9);
            new Here("Unit", 35).given(i, 7).given(valores, new char[] { '4', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 0);
            new Here("Unit", 35).given(i, 10).given(valores, new char[] { '5', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 1);
            new Here("Unit", 35).given(i, 34).given(valores, new char[] { '4', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 9);
            new Here("Unit", 35).given(i, 1).given(valores, new char[] { '5', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 5);
            new Here("Unit", 35).given(i, 39).given(valores, new char[] { '5', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 9);
            new Here("Unit", 35).given(i, 22).given(valores, new char[] { '5', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 5);
            new Here("Unit", 35).given(i, 6).given(valores, new char[] { '4', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 0);
            new Here("Unit", 35).given(i, 33).given(valores, new char[] { '4', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 9);
            new Here("Unit", 35).given(i, 38).given(valores, new char[] { '5', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 9);
            new Here("Unit", 35).given(i, 16).given(valores, new char[] { '4', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 7);
            new Here("Unit", 35).given(i, 2).given(valores, new char[] { '5', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 3);
            new Here("Unit", 35).given(i, 19).given(valores, new char[] { '5', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 0);
            new Here("Unit", 35).given(i, 21).given(valores, new char[] { '5', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 5);
            new Here("Unit", 35).given(i, 29).given(valores, new char[] { '5', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 9);
            new Here("Unit", 35).given(i, 15).given(valores, new char[] { '4', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 6);
            new Here("Unit", 35).given(i, 37).given(valores, new char[] { '5', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 9);
            new Here("Unit", 35).given(i, 28).given(valores, new char[] { '5', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 9);
            new Here("Unit", 35).given(i, 23).given(valores, new char[] { '4', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 9);
            new Here("Unit", 35).given(i, 14).given(valores, new char[] { '4', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 5);
            new Here("Unit", 35).given(i, 35).given(valores, new char[] { '4', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 1);
            new Here("Unit", 35).given(i, 41).given(valores, new char[] { '4', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 9);
            new Here("Unit", 35).given(i, 32).given(valores, new char[] { '4', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 9);
            new Here("Unit", 35).given(i, 1).given(valores, new char[] { '4', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 4);
            new Here("Unit", 35).given(i, 39).given(valores, new char[] { '4', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 9);
            new Here("Unit", 35).given(i, 26).given(valores, new char[] { '5', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 9);
            new Here("Unit", 35).given(i, 13).given(valores, new char[] { '4', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 4);
            new Here("Unit", 35).given(i, 42).given(valores, new char[] { '5', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 9);
            new Here("Unit", 35).given(i, 6).given(valores, new char[] { '5', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 0);
            new Here("Unit", 35).given(i, 12).given(valores, new char[] { '4', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 3);
            new Here("Unit", 35).given(i, 30).given(valores, new char[] { '4', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 9);
            new Here("Unit", 35).given(i, 2).given(valores, new char[] { '4', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 3);
            new Here("Unit", 35).given(i, 21).given(valores, new char[] { '4', '3', '1', '0', '1', '0', '0', '0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '5', '5', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '9', '1', '9', '9', '9', '9', '9', '9', '9', '9' }).checkEq(valorTemp, 5);
            multTemp = valoresInt[indice++];
            soma += valorTemp * multTemp;
        }
        final int dv = 11 - (soma % 11);
        return ((dv == 11) || (dv == 10)) ? 0 : dv;
    }

    private String chaveAcessoSemDV() {
        return StringUtils.substring(this.chave, 0, 43);
    }

    private Integer getChaveAcessoDV() {
        return Integer.valueOf(StringUtils.substring(this.chave, 43, 45));
    }

    public boolean isChaveValida() {
        if (StringUtils.length(this.chave) < 44) {
            return false;
        }
        return Objects.equals(getChaveAcessoDV(), calculaDV());
    }

    /**
     * Método estático para verificar se uma chave de acesso é válida ou não.
     * @param chave
     * @return
     */
    public static boolean isChaveValida(String chave) {
        NFVerificaChave nfVerificaChave = new NFVerificaChave(chave);
        return nfVerificaChave.isChaveValida();
    }
}
